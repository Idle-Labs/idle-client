{"version":3,"sources":["FlexLoader/FlexLoader.js","AssetField/AssetField.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","CardIconButton/CardIconButton.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ExecuteTransaction/ExecuteTransaction.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","IconBox/IconBox.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ImageButton/ImageButton.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","wrap","_context","prev","next","length","undefined","_this","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","RoundButton","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","ExtLink","target","rel","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","hashChanged","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","CardIconButton","isActive","image","imageProps","useIconOnly","iconColor","iconBgColor","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","console","log","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","minDate","maxDate","isAfter","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","tokenUserBalance","lockedInfo","claimable","claimableRewards","claimEvents","checkpointEvents","depositEvents","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","apr","lockEndDate","currDate","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","ExecuteTransaction","parentProps","Button","componentProps","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","goToSection","route","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","loadContracts","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","contractAddress","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","protocol","aprTooltipMode","distributionMode","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","etherscan","endpoints","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","_ref44","_callee39","_context39","_x38","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee40","etherscanEndpoint","etherscanTxlist","_context40","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee41","contractPaused","_args41","_context41","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref47","_callee43","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context43","lastAllocationsPromise","_ref48","_callee42","lastAllocations","_context42","_x40","_x41","alloc","_x39","_ref49","_callee44","oldContractBalance","oldContractTokenDecimals","oldContractName","_context44","_x42","_x43","_ref50","_callee45","eventName","_args45","_context45","_x44","_x45","estimateMethodGasUsage","_ref51","_callee46","_contract$methods","functionCall","gasLimit","_ref52","_ref53","_args46","_context46","getGasPrice","estimateGas","_x46","_x47","_ref54","_callee47","callback_receipt","_contract$methods2","_context47","once","confirmationNumber","receipt","_x48","_x49","_x50","_x51","_x52","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref55","_callee48","biconomyInfo","res","_context48","x-api-key","_x53","sendTxWithPermit","_ref56","_callee49","_contract$methods3","messageToSign","_this$getSignaturePar","_context49","encodeABI","_address","personal","sign","_x54","_x55","_x56","_x57","_x58","_x59","buildBiconomyErc20ForwarderTx","_ref57","_callee50","tokenAddress","callData","_context50","erc20ForwarderClient","buildTx","txGas","_x60","_x61","_x62","_x63","_x64","sendBiconomyTxWithErc20Forwarder","_ref58","_callee51","req","metaInfo","txResponse","fetchReceiptIntervalId","_context51","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x65","_x66","_x67","_x68","sendBiconomyTxWithPersonalSign","_ref59","_callee52","_this$getSignaturePar2","_context52","getNonce","call","_x69","_x70","_x71","_x72","signPermitEIP2612","_ref60","_callee53","erc20Name","spender","deadline","domain","domainData","_context53","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x73","_x74","_x75","_x76","_x77","_x78","_x79","_x80","_ref61","_callee54","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args54","_context54","net","getId","allowed","response","_x81","_x82","_x83","_ref62","_callee55","permitParams","methodAbi","useNonce","_args55","_context55","_jsonInterface","f","unshift","_x84","_x85","_x86","_x87","_x88","_x89","_x90","sendSignedTx","_ref63","_callee56","MetaTransaction","dataToSign","_context56","_x91","_x92","_x93","_x94","_x95","_ref64","_callee57","contractAddr","walletAddr","_ref65","_ref66","allowance","_context57","getAllowance","_x96","_x97","_x98","_ref67","_callee58","_context58","_x99","_x100","_x101","txData","disableERC20","toTwosComplement","_ref68","_callee59","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref69","_ref70","curveAvgBuyPrice","curveTokenBalance","_ref71","_ref72","amountLentCurve1","redeemableBalanceCurve","_ref73","_ref74","earningPerYear","_ref75","_ref76","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref77","_ref78","tokenPriceFirstDeposit","_ref79","_ref80","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref81","_ref82","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref83","_ref84","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref85","_ref86","amountLentCurve2","redeemableBalanceCurve1","_ref87","_ref88","redeemableBalance2","_args59","_context59","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x102","_x103","_x104","_x105","getIdleTokenSupply","_ref89","_callee60","idleTokenSupply","_args60","_context60","_x106","getIdleTokenPriceWithFee","_ref90","_callee61","_ref91","_ref92","priceWFee","_args61","_context61","eq","_x107","_x108","_ref93","_callee62","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args62","_context62","_x109","clearCachedData","useLocalStorage","_ref94","_callee63","_ref95","_ref96","idleTokensTotalSupply","userShare","_context63","_x110","_x111","_callee65","_args65","_context65","_ref98","_callee64","coverageTokens","protocolImage","_context64","_x112","_ref99","_callee66","_context66","_x113","_callee68","filter_by_status","_args68","_context68","_ref101","_callee67","_ref102","_ref103","_context67","_x114","_ref104","_callee69","fixDecimals","_args69","_context69","_x115","_ref105","_callee70","_ref106","_ref107","_args70","_context70","_x116","_x117","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref108","_callee71","_args71","_context71","_x118","_ref109","_callee72","_args72","_context72","_x119","_x120","getProtocolBalance","_ref110","_callee73","_context73","_x121","_x122","getAprs","_ref111","_callee74","_context74","addresses","_x123","genericIdleCall","_ref112","_callee75","callParams","_args75","_context75","_x124","_ref113","_callee76","_contract$methods4","_args76","_context76","_x125","_x126","getTxDecodedLogs","_ref114","_callee78","logAddr","decodeLogs","internalTransfers","_context78","_ref115","_callee77","_context77","_x131","_x132","_x127","_x128","_x129","_x130","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee79","_context79","_ref117","_callee80","_args80","_context80","getPastEvents","_x133","_x134","_ref118","_callee81","_contract$methods5","_args81","_context81","_x135","_x136","_ref119","_callee82","_args82","_context82","_x137","_x138","apr2apy","getUnlentBalance","_ref120","_callee83","unlentBalance","_context83","_x139","_ref121","_callee84","_args84","_context84","_x140","_ref122","_callee86","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args86","_context86","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref123","_callee85","_ref124","_ref125","protocolBalance","protocolAllocation","_context85","_x142","_x143","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x141","getUniswapConversionRate_path","_ref126","_callee87","unires","_context87","_x144","_ref127","_callee88","pairAddresses","_ref128","_ref129","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref130","_ref131","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context88","_x145","_x146","_ref132","_callee89","tokenConfigFrom","tokenConfigDest","WETHAddr","_context89","_x147","_x148","_ref133","_callee90","_context90","_x149","_x150","getCurveDepositedTokens","_ref134","_callee91","idleTokensBalances","remainingCurveTokens","_args91","_context91","_x151","getCurveUnevenTokenAmounts","_ref135","_callee92","amounts","max_burn_amount","unevenAmounts","_context92","getCurveDepositContract","_x152","_x153","_callee93","curveRatesInfo","_context93","strategyTokens","getCurveAPYContract","_callee94","blocksForPrevTokenPrice","_ref138","_ref139","prevTokenPrice","blocksMultiplier","curveAPR","_context94","getCurveTokenSupply","_callee95","_context95","getCurvePoolContract","_callee96","_args96","_context96","_callee97","_args97","_context97","_ref143","_callee98","_ref144","_ref145","_context98","_x154","_callee99","depositContractInfo","_context99","getCurveZapContract","_callee100","zapContractInfo","_context100","_callee101","poolContractInfo","_context101","getCurveSwapContract","_callee102","_context102","getCurveIdleTokensAmounts","_callee104","max_slippage","curveTokenSupply","curveTokenShare","_args104","_context104","_ref151","_callee103","curveIdleTokens","_context103","_x155","getCurveTokensAmounts","_callee106","useCoinIndex","_args106","_context106","_ref153","_callee105","_ref154","_ref155","totalTokenSupply","_context105","_x156","getCurveAmounts","_ref156","_callee108","_args108","_context108","_ref157","_callee107","_context107","_x159","_x157","_x158","getCurveTokenAmount","_ref158","_callee109","_args109","_context109","_x160","getCurveSlippage","_ref159","_callee110","uneven_amounts","_ref160","_ref161","virtualPrice","Sv","_args110","_context110","_x161","_x162","_ref162","_callee111","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref163","_ref164","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args111","_context111","_x163","_callee113","_args113","_context113","_ref166","_callee112","_ref167","_ref168","_context112","_x164","getStkAaveApr","_ref169","_callee114","aaveConversionRate","stkAaveAPR","stkAaveValue","_args114","_context114","_x165","_x166","getCompAPR","_ref170","_callee115","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args115","_context115","_x167","_x168","getCompSpeed","_ref171","_callee116","cTokenAddress","compSpeed","_context116","_x169","_ref172","_callee117","cTokenInfo","compoundAllocationPerc","_ref173","_ref174","cTokenTotalSupply","compoundPoolShare","_args117","_context117","_x170","_callee119","_args119","_context119","_ref176","_callee118","_ref177","_ref178","_context118","_x171","_callee121","_args121","_context121","_ref180","_callee120","_ref181","_ref182","compApr","_context120","_x172","getTokensCsv","_callee124","csv","_context124","prototype","sum","pv","cv","avg","_ref184","_callee123","_context123","_ref185","_callee122","header","aprAvg","scoreAvg","lastRow","_context122","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x174","_x173","_callee126","_args126","_context126","_ref187","_callee125","compTokenBalance","_context125","_x175","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref188","_callee128","govTokensUserDistribution","_args128","_context128","_ref189","_callee127","_context127","_x177","_x176","_ref190","_callee130","govTokensDistribution","tokenGovTokens","_args130","_context130","_ref191","_callee129","govSpeed","_context129","_x179","_x178","_ref192","_callee132","_args132","_context132","_ref193","_callee131","_ref194","_ref195","_ref196","_ref197","cTokenConfig","_context131","_x182","_x180","_x181","_callee134","_args134","_context134","_ref199","_callee133","tokenConversionRate","fromTokenConfig","_context133","_x183","getGovTokenConfigByAddress","_callee135","checkShowBalance","govTokensEarnings","_args135","_context135","govTokenAmount","getGovTokensIndexes","_ref201","_callee137","govTokensAmounts","_context137","_ref202","_callee136","govTokenAddress","_context136","_x186","_x187","_x184","_x185","_callee140","govTokenConfigForced","_args140","_context140","_ref204","_callee139","_context139","_ref205","_callee138","_context138","_x189","_x190","_x188","_callee141","_args141","_context141","_callee142","_ref208","_ref209","gain","fees","_args142","_context142","_ref210","_callee143","_args143","_context143","_x191","getTotalTVL","_callee144","tokensTVL","_context144","getTokensTVL","totalTVL","tokenTVL","_callee148","_context148","_ref213","_callee147","_context147","_ref214","_callee146","oldTokenTVL","idleTokenName","_ref215","_ref216","_ref220","_ref221","oldTokenPrice","oldTotalSupply","_context146","_ref217","_callee145","_ref218","_ref219","govTokenConversionRate","govTokenBalanceConverted","_context145","_x194","_x193","_x192","getSubstackLatestFeed","_callee149","endpointInfo","idleSubstackFeed","latestFeed","_context149","items","getAggregatedStats","_callee150","totalAUM","_args150","_context150","getAggregatedStats_chain","_callee154","avgAPR","_args154","_context154","_ref225","_callee153","_context153","_ref226","_callee152","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context152","_ref227","_callee151","_ref228","_ref229","_context151","_x197","_x196","_x195","getTokenApy","_ref230","_callee155","_context155","_x198","_callee158","_args158","_context158","_ref232","_callee157","_context157","_ref233","_callee156","_ref234","_context156","_x200","_x199","getProtocolsTokensBalances","_callee160","tokenBalances","minTokenBalance","protocolsTokens","_args160","_context160","_ref236","_callee159","tokenContract","_context159","_x201","_ref237","_callee161","_args161","_context161","_x202","_x203","_x204","getAvgAPYStats","_ref238","_callee162","apiResults","_args162","_context162","_x205","_x206","_ref239","_callee163","_conversionRate","_args163","_context163","_x207","_x208","_ref240","_callee164","_ref241","_ref242","_context164","protocolScore","getTokenScoreApi","_x209","_x210","_ref243","_callee165","_context165","_x211","_x212","_ref244","_callee168","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args168","_context168","_ref245","_callee167","addrIndex","protocolApr","protocolApy","govTokenAPR","_context167","_ref246","_callee166","_context166","_x216","_x214","_x215","_x213","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","skipMintForDeposit","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","txStatus","getTransactionParamsAsync","sendRawTransaction","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.1d1b3b88.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:7,\n        label:'1 week'\n      },\n      {\n        value:30,\n        label:'1 month'\n      },\n      {\n        value:365,\n        label:'1 year'\n      },\n      {\n        value:1460,\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(7,'day') : this.functionsUtil.strToMoment().add(7,'day');\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    /*\n    let infoBox = null;\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    */\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    if (!this.props.account){\n      return false;\n    }\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      tokenUserBalance,\n      lockedInfo,\n      claimable,\n      claimableRewards,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: 0, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: 0, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: 0, toBlock:'latest',filter:{provider:this.props.account}})\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('YYYY-MM-DD HH:mm')\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.selectedToken\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.rewardToken}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')+' UTC' : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n    // console.log('changelockPeriodInput',lockPeriodTimestamp);\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod,'day').add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n    // console.log('selectLockPeriod',lockPeriodTimestamp);\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:[1,'33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              py={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Hash\n                              </Text>\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( reward => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.amount}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {this.functionsUtil.shortenHash(reward.hash)}\n                                  </Text>\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    {\n                      (isIncrease && canIncrease) && (\n                        <Box\n                          mb={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Choose increase value:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AccessTime'}\n                              iconColor={'deposit'}\n                              text={'Increase Time'}\n                              iconBgColor={'#ced6ff'}\n                              isActive={ this.state.increaseAction === 'time' }\n                              handleClick={ e => this.setIncreaseAction('time') }\n                            />\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AttachMoney'}\n                              iconColor={'redeem'}\n                              iconBgColor={'#ceeff6'}\n                              text={'Increase Amount'}\n                              isActive={ this.state.increaseAction === 'amount' }\n                              handleClick={ e => this.setIncreaseAction('amount') }\n                            />\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                        <Box\n                          width={1}\n                        > \n                          {\n                            (isLock || this.state.increaseAction === 'time') && (\n                              <Box\n                                width={1}\n                              >\n                                <Text mb={1}>\n                                  Choose lock period:\n                                </Text>\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Input\n                                    mb={2}\n                                    width={1}\n                                    type={\"date\"}\n                                    required={true}\n                                    height={'3.4em'}\n                                    borderRadius={2}\n                                    fontWeight={500}\n                                    borderColor={'cardBorder'}\n                                    backgroundColor={'cardBg'}\n                                    boxShadow={'none !important'}\n                                    value={this.state.lockPeriodInput || ''}\n                                    onChange={this.changelockPeriodInput.bind(this)}\n                                    border={`1px solid ${this.props.theme.colors.divider}`}\n                                  />\n                                  <Flex\n                                    mb={3}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={['column','row']}\n                                    justifyContent={'space-between'}\n                                  >\n                                    {\n                                      this.state.lockPeriods.map( p => {\n                                        const isActive = this.state.selectedLockPeriod===p.value;\n                                        return (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:2,\n                                              width:0.23,\n                                            }}\n                                            isActive={isActive}\n                                            isInteractive={true}\n                                            key={`lockPeriod_${p.value}`}\n                                            handleClick={e => this.selectLockPeriod(p.value)}\n                                          >\n                                            <Text \n                                              fontSize={2}\n                                              fontWeight={3}\n                                              textAlign={'center'}\n                                              color={this.props.isActive ? 'copyColor' : 'legend'}\n                                            >\n                                              {p.label}\n                                            </Text>\n                                          </DashboardCard>\n                                        );\n                                      })\n                                    }\n                                  </Flex>\n                                  {\n                                    isIncrease && (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        parentProps={{\n                                          width:1,\n                                          alignItems:'center',\n                                          justifyContent:'center'\n                                        }}\n                                        Component={Button}\n                                        componentProps={{\n                                          fontSize:3,\n                                          fontWeight:3,\n                                          size:'medium',\n                                          width:[1,1/2],\n                                          borderRadius:4,\n                                          mainColor:'deposit',\n                                          value:'Increase Time',\n                                          disabled:this.state.buttonDisabled\n                                        }}\n                                        action={'Increase Time'}\n                                        methodName={'increase_unlock_time'}\n                                        contractName={this.props.contractInfo.name}\n                                        callback={this.transactionSucceeded.bind(this)}\n                                        getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                    {\n                      (isLock || this.state.increaseAction==='amount') ? (\n                        <SendTxWithBalance\n                          error={null}\n                          {...this.props}\n                          action={txAction}\n                          steps={this.state.steps}\n                          infoBox={this.state.infoBox}\n                          tokenConfig={this.props.tokenConfig}\n                          tokenBalance={this.state.balanceProp}\n                          contractInfo={this.props.contractInfo}\n                          permitEnabled={this.state.permitEnabled}\n                          buttonDisabled={this.state.buttonDisabled}\n                          approveEnabled={this.state.approveEnabled}\n                          callback={this.transactionSucceeded.bind(this)}\n                          approveDescription={this.state.approveDescription}\n                          balanceSelectorInfo={this.state.balanceSelectorInfo}\n                          changeInputCallback={this.changeInputCallback.bind(this)}\n                          contractApproved={this.contractApprovedCallback.bind(this)}\n                          getTransactionParams={this.getTransactionParams.bind(this)}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                {\n                                  (isLock || isIncrease) ? (\n                                    `You don't have any ${this.props.selectedToken} in your wallet.`\n                                  ) : isUnstake && (\n                                    `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                  )\n                                }\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        </SendTxWithBalance>\n                      ) : (isIncrease && !canIncrease) ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'LockOpen'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You cannot increase an expired lock, please Withdraw.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : isUnstake ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            this.state.lockExpired ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock has expired, you can withdraw your {this.props.selectedToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                    value:'Withdraw',\n                                  }}\n                                  action={'Withdraw'}\n                                  methodName={'withdraw'}\n                                  contractName={this.props.contractInfo.name}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : isClaim && (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      )\n                    }\n                  </Box>\n                ) : !this.props.account ? (\n                  <ConnectBox\n                    {...this.props}\n                  />\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.SafeAppConnector = SafeAppConnector;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async isSafeApp() {\n    if (this.provider){\n      return await this.provider.isSafeApp();\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}