{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","HoverImage/HoverImage.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestedAmount","_callee3","vestedAmount","governanceTokenName","governanceTokenConfig","_ref4","_ref5","vestingEnd","lastUpdate","vestingBegin","vestingAmount","blockTimestamp","_args3","_context3","getVestingContract","toUpperCase","Promise","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","parseInt","Date","now","gt","times","minus","div","decimals","_callee4","vestingContract","_args4","_context4","initContract","VesterABI","claimVestedTokens","_callee5","callback","callbackReceipt","_args5","_context5","contractMethodSendWrapper","delegateVesting","_callee6","delegate","_args6","_context6","getVestingAmount","_callee7","_args7","_context7","getCurrentDelegate","_callee8","_args8","_context8","getCurrentVotes","_callee9","votes","_args9","_context9","getVotingPeriod","_callee10","votingPeriod","_context10","getTimelockDelay","_callee11","delay","_context11","queueProposal","_ref14","_callee12","proposalId","_args12","_context12","toBN","_x","apply","executeProposal","_ref15","_callee13","_args13","_context13","_x2","proposeAndVoteFor","_ref16","_callee14","targets","values","signatures","calldatas","description","batcher","contract","txs","_context14","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref17","_callee15","_args15","_context15","_x8","_x9","_x10","_x11","_x12","_ref18","_callee16","support","_args16","_context16","_x13","_x14","setDelegate","_ref19","_callee17","_args17","_context17","_x15","getDelegatesChanges","_callee18","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context18","eth","getBlockNumber","Math","min","push","getContractPastEvents","reduce","delegations","d","getDelegatesVotesChanges","_callee19","_context19","getDelegates","_callee20","limit","_ref23","_ref24","all_votes","delegateAccounts","delegates","_args20","_context20","getVotes","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee21","govContractName","_ref26","_ref27","proposalThreshold","proposalMaxOperations","params","_context21","getCachedData","setCachedData","_callee22","governanceContractName","_context22","map","_e$returnValues2","getProposals","_callee24","voted_by","filter_by_state","startBlock","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref30","_ref31","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args24","_context24","p","state","find","Array","from","n","reverse","asyncForEach","_ref32","_callee23","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref33","_ref34","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","_context23","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","transactionHash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x16","_x17","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","name","size","Component","DashboardMenu","logout","buyModalOpened","isHover","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","governanceRoute","baseRoute","dashboardRoute","availableStrategies","visibleLinks","menuLink","isVisible","visible","showMobile","mobile","isMobile","isDarkTheme","themeMode","darkModeEnabled","isProdEnv","checkUrlOrigin","isChristmas","strToMoment","format","logoSrc","logoHeight","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","height","pb","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","src","position","borderBottom","theme","colors","divider","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","isInteractive","py","pr","mx","boxShadow","display","borderRadius","justifySelf","handleClick","isDashboard","goToSection","px","onMouseEnter","onMouseLeave","_HoverImage_HoverImage__WEBPACK_IMPORTED_MODULE_9__","hoverOn","noHover","hover","imageProps","mr","alignSelf","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_14__","style","overflowY","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","my","key","route","href","onClick","closeMenu","textDecoration","border","selected","backgroundColor","align","icon","whiteSpace","setThemeMode","HoverImage","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","networkId","networkConfig","config","requiredNetwork","getRequiredNetwork","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","outerColor","isSearchable","innerProps","customOptionProps","pl","notInteractive","noShadow","options","CustomOptionValue","imageSrc","data","provider","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","bg","innerxProps","cursor","isCorrectNetwork","isActive","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonProps","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","notificationsParams","getStoredItem","setLocalStorage","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","oneWeekAgoBlock","polygonBridgeEnabled","enabled","includes","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","currTime","end","latestFeedDate","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","snapshotProposalBaseUrl","body","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","transactions","status","completed","polygonBridgeBaseUrl","tx","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","textOverflow","AccountModal","balances","loadBalances","regenerator_default","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","viewOnly","rows","renderBalances","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","requiredNetworkChanged","accountInizialized","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","toggleMenu","menuOpened","alt","borderRight","ShortHash","src_Notifications_Notifications","setGovModal","connectAndValidateAccount","components_AccountModal","RoundButton","alignContent","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","newState","claimCallback","claimRewards","currentNetworkId","getRequiredNetworkId","bgLayer","mainColor","background","titleProps","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DashboardHeader","loadData","networkChanged","menuRightBorder","src_MenuAccount_MenuAccount","hoverColor","components_GovModal","list"],"mappings":"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","file":"static/js/1.c90833bf.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestedAmount = async (account=null) => {\n    let vestedAmount = this.functionsUtil.BNify(0);\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n      const governanceTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',governanceTokenName.toUpperCase()]);\n      let [\n        vestingEnd,\n        lastUpdate,\n        vestingBegin,\n        vestingAmount,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall('VestingContract','vestingEnd'),\n        this.functionsUtil.genericContractCall('VestingContract','lastUpdate'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingBegin'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingAmount')\n      ]);\n\n      if (vestingAmount && vestingBegin && vestingEnd && lastUpdate){\n        vestingEnd = this.functionsUtil.BNify(vestingEnd);\n        lastUpdate = this.functionsUtil.BNify(lastUpdate);\n        vestingBegin = this.functionsUtil.BNify(vestingBegin);\n        vestingAmount = this.functionsUtil.BNify(vestingAmount);\n        const blockTimestamp = this.functionsUtil.BNify(parseInt(Date.now()/1000));\n\n        if (blockTimestamp.gt(vestingEnd)) {\n          vestedAmount = await this.functionsUtil.getContractBalance(governanceTokenName,account);\n        } else {\n          vestedAmount = vestingAmount.times(blockTimestamp.minus(this.functionsUtil.BNify(lastUpdate))).div(vestingEnd.minus(vestingBegin));\n        }\n        vestedAmount = this.functionsUtil.fixTokenDecimals(vestedAmount,governanceTokenConfig.decimals);\n      }\n    }\n    return vestedAmount;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  claimVestedTokens = async (account=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','claim',[],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n    await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n      const p = proposals[i];\n\n      if (!p || !p.id){\n        return;\n      }\n\n      const proposalId = parseInt(p.id);\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      const [\n        endBlockInfo,\n        queuedBlockInfo,\n        createdBlockInfo,\n        canceledBlockInfo,\n        executedBlockInfo,\n      ] = await Promise.all([\n        p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n        queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n        createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n        canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n        executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n      ]);\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n      p.description = p.description.replace(/\\n/g,\"<br />\")\n\n      // Overwrite proposal details\n      const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n      if (proposalDetails){\n        Object.keys(proposalDetails).forEach( attr => {\n          p[attr] = proposalDetails[attr];\n        });\n      }\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals,3600);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      proposals = proposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    buyModalOpened: false,\n    isHover: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceRoute = governanceConfig.baseRoute;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + '/' + Object.keys(this.props.availableStrategies)[0];\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig([\n      \"dashboard\",\n      \"theme\",\n      \"darkModeEnabled\"\n    ]);\n\n    const isProdEnv = this.functionsUtil.checkUrlOrigin();\n    const isChristmas = this.functionsUtil.strToMoment().format('DD-MM') === '24-12';\n    let logoSrc = isProdEnv ? (!isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\") : (!isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\");\n\n    let logoHeight = '42px';\n    if (isChristmas && isProdEnv){\n      logoHeight = '62px';\n      logoSrc = !isDarkTheme ? \"images/logo-gradient-christmas.svg\" : \"images/logo-dark-christmas.svg\";\n    }\n\n    return (\n      <Flex p={0} height={\"100%\"} flexDirection={\"column\"}>\n        <Flex\n          p={4}\n          pb={2}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              src={logoSrc}\n              height={logoHeight}\n              position={\"relative\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Box\n          mb={3}\n          pb={3}\n          width={1}\n          justifyContent={\"center\"}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <DashboardCard\n            {...this.props}\n            isInteractive={true}\n            cardProps={{\n              py: 1,\n              pr: 1,\n              mx: 'auto',\n              mb: [0, 3],\n              width: 0.8,\n              boxShadow: 0,\n              display: \"flex\",\n              borderRadius: 1,\n              justifySelf: \"center\",\n              justifyContent: \"center\",\n            }}\n            handleClick={e => this.props.isDashboard ? this.props.goToSection(governanceRoute, false) : this.props.goToSection(dashboardRoute, false) }\n          >\n            <Flex\n              px={2}\n              py={1}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              onMouseEnter={e => this.setState({ isHover: true })}\n              onMouseLeave={e => this.setState({ isHover: false })}\n            >\n              <HoverImage\n                hoverOn={this.state.isHover}\n                noHover={'images/sidebar/switch.svg'}\n                hover={'images/sidebar/switchHover.svg'}\n                imageProps={{\n                  mr: 2,\n                  width: \"16px\",\n                  height: \"16px\",\n                  display: \"inline-flex\"\n                }}\n              />\n              <Text\n                fontSize={1}\n                color={\"text\"}\n                fontWeight={500}\n              >\n                Switch to {this.props.isDashboard ? 'Governance' : 'Dashboard'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n        </Box>\n        {\n          this.props.isMobile && (\n            <Flex\n              width={'82%'}\n              alignSelf={'center'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        <Flex\n          px={3}\n          height={'100%'}\n          style={{\n            overflowY:'scroll'\n          }}\n          flexDirection={\"column\"}\n        >\n          {\n            visibleLinks.map((menuLink, menuIndex) => {\n              const isExternalLink = menuLink.isExternalLink;\n              const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n              const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n              const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n              return (\n                <Box\n                  width={\"auto\"}\n                  my={[1, \"8px\"]}\n                  key={`menu-${menuIndex}`}\n                >\n                  <LinkComponent\n                    to={menuLink.route}\n                    href={menuLink.route}\n                    onClick={this.props.closeMenu}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Flex\n                      py={2}\n                      px={3}\n                      borderRadius={2}\n                      flexDirection={\"row\"}\n                      alignItems={\"center\"}\n                      border={menuLink.selected ? 2 : null}\n                      backgroundColor={menuLink.selected ? \"menuHover\" : \"transparent\"}\n                    >\n                      <Flex\n                        py={1}\n                        width={1}\n                        alignItems={\"center\"}\n                        flexDirection={\"row\"}\n                        justifyContent={\"flex-start\"}\n                      >\n                        {\n                          menuLink.image ? (\n                            <Image\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              align={\"center\"}\n                              height={[\"1.2em\",\"1.6em\"]}\n                              src={menuLink.selected ? activeImage : inactiveImage}\n                            />\n                          ) : menuLink.icon && (\n                            <Icon\n                              name={menuLink.icon}\n                              color={\n                                menuLink.selected\n                                  ? \"menuIconActive\"\n                                  : isDarkTheme\n                                    ? \"white\"\n                                    : \"dark-gray\"\n                              }\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              size={ this.props.isMobile ? \"1.2em\" : \"1.6em\"}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          color={\"text\"}\n                          fontSize={[1,2]}\n                          textAlign={\"center\"}\n                          style={{\n                            whiteSpace: \"nowrap\"\n                          }}\n                        >\n                          {menuLink.label}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </LinkComponent>\n                </Box>\n              );\n            })\n          }\n        </Flex>\n\n        {darkModeEnabled && (\n          <Flex\n            my={2}\n            width={\"auto\"}\n            height={\"auto\"}\n            flexDirection={\"column\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Link\n              style={{ textDecoration: \"none\" }}\n              onClick={e =>\n                this.props.setThemeMode(\n                  this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                )\n              }\n            >\n              <Flex\n                p={2}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Icon\n                  mr={2}\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  color={\"copyColor\"}\n                  name={\"Brightness2\"}\n                />\n                <Flex\n                  px={\"0.2em\"}\n                  width={\"3.4em\"}\n                  height={\"1.6em\"}\n                  alignItems={\"center\"}\n                  borderRadius={\"1.6em\"}\n                  backgroundColor={\"cellText\"}\n                  justifyContent={this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"}\n                >\n                  <Box\n                    width={\"1.3em\"}\n                    height={\"1.3em\"}\n                    borderRadius={\"1.3em\"}\n                    backgroundColor={\"copyColor\"}\n                  ></Box>\n                </Flex>\n                <Icon\n                  ml={2}\n                  size={\"1.4em\"}\n                  align={\"center\"}\n                  name={\"WbSunny\"}\n                  color={\"copyColor\"}\n                />\n              </Flex>\n            </Link>\n          </Flex>\n        )}\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import { Image } from \"rimble-ui\"\nimport React, { Component } from 'react'\nclass HoverImage extends Component {\n\n    render() {\n        return (\n            <Image\n                src={this.props.hoverOn ? this.props.hover : this.props.noHover}\n                {...this.props.imageProps}\n            />\n        )\n    }\n}\nexport default HoverImage;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks: [],\n    defaultNetwork: null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks() {\n\n    if (!this.props.networkInitialized) {\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network', 'availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network', 'enabledNetworks']);\n    const activeNetworks = enabledNetworks.map(networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value: networkId,\n        config: networkConfig,\n        label: networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find(network => network.value === requiredNetwork.id);\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId) {\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized) {\n      this.setState({\n        defaultNetwork: null\n      }, () => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex: '1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          bg={\"cardBg\"}\n          px={0}\n        >\n          <Flex\n            {...props.innerxProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{ cursor: 'pointer' }}\n            justifyContent={'flex-start'}\n            bg={\"cardBg\"}\n\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        outerColor={\"cardBg\"}\n        name={'network'}\n        isDashboard={true}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px: 1,\n          py: 0,\n          height: '42px',\n          boxShadow: 0,\n          borderRadius: 0,\n          border: 0,\n          backgroundColor: \"cardBg\"\n\n        }, this.props.innerProps)}\n        customOptionProps={{\n          px: 0,\n          pl: 3,\n          pr: 0\n        }}\n        notInteractive=\"true\"\n        noShadow=\"true\"\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n        <DashboardCard\n          {...this.props}\n          cardProps={{\n            boxShadow: 0,\n            borderRadius: 0,\n            border: 0,\n            px: [2, 3],\n            display: 'flex',\n            width: [1, 'auto'],\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'cardBg',\n\n            height: (this.props.innerProps && this.props.innerProps.height) || '42px',\n          }}\n          isInteractive={false}\n          isActive={false}\n        >\n          <Loader size={'20px'} />\n        </DashboardCard>\n      );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"input\":\"CryptoInput_input__3X3pI\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened: false,\n    notifications: [],\n    mouseOverBell: false,\n    unreadNotifications: 0,\n    lastOpenTimestamp: null,\n    mouseOverNotifications: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened) {\n      this.setState({\n        tabOpened: false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length > 0) {\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged) {\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter(n => n.timestamp > this.state.lastOpenTimestamp).length : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp() {\n    const lastOpenTimestamp = Date.now();\n\n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams', notificationsParams, true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications() {\n\n    // Get stored lastOpenTimestamp for notifications\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools', 'batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools', 'polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network', 'blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null, 'Active', oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account, 'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter(n => (n.enabled && n.start <= currTime && n.end > currTime));\n\n    // Show latest Substack for 1 week\n    if (latestFeed) {\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7, 'd'))) {\n        notifications.push({\n          link: latestFeed.link,\n          image: '/images/substack.png',\n          timestamp: latestFeedDate._d.getTime(),\n          title: this.functionsUtil.htmlDecode(latestFeed.title),\n          text: this.functionsUtil.htmlDecode(latestFeed.content),\n          date: latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network', 'providers', 'snapshot', 'urls', 'proposals']);\n\n    if (activeSnapshotProposals) {\n      activeSnapshotProposals.forEach(p => {\n        const text = p.body.replace(/^[#]*/, '');\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image: '/images/snapshot.png',\n          timestamp: p.start * 1000,\n          link: snapshotProposalBaseUrl + p.id,\n          title: p.title,\n          date: this.functionsUtil.strToMoment(p.start * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals) {\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance', 'baseRoute']) + '/proposals/';\n      governanceProposals.forEach(p => {\n        notifications.push(\n          {\n            text: p.title,\n            iconProps: {\n              color: '#00acff'\n            },\n            icon: 'LightbulbOutline',\n            timestamp: p.timestamp * 1000,\n            title: 'Governance Proposal',\n            hash: governanceProposalUrl + p.id,\n            date: this.functionsUtil.strToMoment(p.timestamp * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits) {\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach(batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp * 1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon: 'DoneAll',\n          title: 'Batch Deposit Executed',\n          hash: batchDepositBaseUrl + batchToken,\n          iconProps: {\n            color: this.props.theme.colors.transactions.status.completed\n          },\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions) {\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter(tx => tx.action === 'Withdraw' && tx.included && !tx.exited);\n      polygonWithdrawalsToExit.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(10, 'd'))) {\n          const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Withdraw Completed',\n            hash: polygonBridgeBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter(tx => tx.action === 'Deposit' && tx.included);\n      polygonCompletedDeposits.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1, 'd'))) {\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Deposit Completed',\n            hash: depositBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell) {\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications) {\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab() {\n    this.setState((prevState) => ({\n      tabOpened: !prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification) {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link) {\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications > 0;\n    const iconColor = hasUnreadNotifications ? '#0239FF' : 'dashboardBg';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            color={iconColor}\n            name={'Notifications'}\n            {...this.props.iconProps}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell, (hasUnreadNotifications ? styles.ring : null), (this.state.tabOpened || this.state.notifications.length > 0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications &&\n            <Box\n              className={styles.counter}\n            >\n              {this.state.notifications.length}\n            </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n          <DashboardCard\n            cardProps={{\n              style: {\n                right: 0,\n                maxHeight: '21em',\n                overflow: 'scroll',\n                position: 'absolute',\n                top: this.props.isMobile ? '2.8em' : '3em',\n              },\n              minWidth: ['91vw', '22em'],\n              onMouseOut: (e) => this.setMouseOverNotifications(false),\n              onMouseOver: (e) => this.setMouseOverNotifications(true),\n            }}\n          >\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              {\n                this.state.notifications.length > 0 ?\n                  this.state.notifications.map((n, index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration: 'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={e => this.openNotification(n)}\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification, this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index < this.state.notifications.length - 1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                  : (\n                    <Text\n                      py={2}\n                      textAlign={'center'}\n                    >\n                      There are no notifications.\n                    </Text>\n                  )\n              }\n            </Flex>\n          </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport { Flex, Icon, Image, Text, Link, Loader } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null,\n    logout: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountInizialized || contractsInitialized) {\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState({\n          isModalOpen: null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance() {\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', 'IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled) {\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setState({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\", false, null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\", walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        mr={[0,5]}\n        bg={\"cardBg\"}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          px={[2,0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                ml={1}\n                mr={2}\n                width={'12%'}\n              >\n                <Icon\n                  size={\"2.4em\"}\n                  color={\"copyColor\"}\n                  onClick={this.props.toggleMenu}\n                  name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.isMobile && (\n              <Flex\n                mx={2}\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          {\n            this.props.isMobile && (\n              <Flex\n                width={'87%'}\n                justifyContent={\"space-between\"}\n              >\n                <Link\n                  style={{\n                    width:'80%',\n                    display:'flex',\n                    overflow:'hidden',\n                    textDecoration:'none'\n                  }}\n                  onClick={e => this.toggleModal(\"account\")}\n                >\n                  <Flex\n                    p={0}\n                    width={'100%'}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={[\"center\", \"flex-start\"]}\n                  >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                  </Flex>\n                </Link>\n                <Notifications\n                  flexProps={{ p: 2 }}\n                  iconProps={{ p: 1, size: \"2.5em\" }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              pr={[2,0]}\n              style={{\n                flex: \"1 1 auto\"\n              }}\n              width={[1, \"auto\"]}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                mr={3}\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.toggleModal(\"account\")}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        mr={2}\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"copyColor\"}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Link\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.props.setGovModal(true)}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  <Image\n                    mr={2}\n                    width={\"1.7em\"}\n                    height={\"1.7em\"}\n                    display={\"inline-flex\"}\n                    src={`images/tokens/IDLE.svg`}\n                  />\n                  {\n                    this.state.idleTokenBalance ? (\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1, 2]}\n                        color={\"copyColor\"}\n                      >\n                        {this.state.idleTokenBalance.toFixed(2)} IDLE\n                      </Text>\n                    ) : <Loader size={'20px'} />\n                  }\n                </Flex>\n              </Link>\n              <Flex\n                ml={3}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  onClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n                >\n                  <Flex\n                    p={0}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                    onMouseEnter={e => this.setState({ isHover: true })}\n                    onMouseLeave={e => this.setState({ isHover: false })}\n                  >\n                    <HoverImage\n                      hoverOn={this.state.isHover}\n                      noHover={'images/logout.svg'}\n                      hover={'images/logoutHover.svg'}\n                      imageProps={{\n                        mx: 2,\n                        width: \"24px\",\n                        height: \"24px\",\n                        display: \"inline-flex\"\n                      }}\n                    />\n                  </Flex>\n                </Link>\n                <Notifications\n                  {...this.props}\n                  iconProps={{\n                    size: \"2.1em\"\n                  }}\n                  flexProps={{\n                    ml: 2\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        px={2}\n        width={1}\n        mr={[0,5]}\n      >\n        <Flex\n          width={1}\n          alignItems={\"center\"}\n          style={{ justifyContent: \"flex-start\" }}\n          justifyContent={[\"flex-start\", \"flex-end\"]}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={1}\n                justifyContent={['space-between', 'flex-start']}\n              >\n                <NetworkIndicator\n                  innerProps={{\n                    px: 1,\n                    py: 0,\n                    width: ['100%', 'auto'],\n                    height: ['45px', '54px']\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={\"row\"}\n          alignItems={[\"center\"]}\n          justifyContent={\"flex-end\"}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              width:'auto',\n              boxShadow: \"none\",\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            <Flex\n              mr={2}\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"flex-start\"}\n            >\n              <Image\n                ml={0}\n                pl={0}\n                mr={[2, 3]}\n                align={\"center\"}\n                height={\"1.4em\"}\n                src={\"images/sidebar/plug_white.svg\"}\n              />\n              <Text\n                pr={1}\n                mr={2}\n                fontWeight={3}\n                color={\"white\"}\n                fontSize={[2]}\n                alignContent={\"center\"}\n                justifyContent={\"center\"}\n              >\n                Connect to Idle\n              </Text>\n            </Flex>\n          </RoundButton>\n          <Notifications\n            {...this.props}\n            iconProps={{\n              size: \"2.2em\"\n            }}\n            flexProps={{\n              ml: 2\n            }}\n          />\n        </Flex>\n      </Flex >\n    );\n  }\n}\n\nexport default MenuAccount;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (accountChanged || requiredNetworkChanged || contractsInitialized){\n      this.loadTokenInfo();\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetworkId);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                {\n                  governanceEnabled && (\n                    <Link\n                      href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                    >\n                      <Flex\n                        zIndex={10}\n                        position={'relative'}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          color={'white'}\n                          fontWeight={400}\n                        >\n                          Go to governance\n                        </Text>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'white'}\n                          name={\"OpenInNew\"}\n                        />\n                      </Flex>\n                    </Link>\n                  )\n                }\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport { Box, Flex, Text, Button } from \"rimble-ui\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box >\n        <Flex\n          py={2}\n          width={1}\n          bg={\"cardBg\"}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n          borderBottom={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n            goToSection={this.props.goToSection.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) && (\n            <DashboardCard\n              cardProps={{\n                p: 2,\n                mt: 3,\n                width: 1\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                flexDirection={[\"column\", \"row\"]}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={\"15px\"}\n                  color={\"flashColor\"}\n                  textAlign={\"center\"}\n                >\n                  IDLE Governance Token is now available,\n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={\"primary\"}\n                    fontSize={\"15px\"}\n                    hoverColor={\"primary\"}\n                    href={\n                      \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                    }\n                  >\n                    discover more\n                  </ExtLink>\n                  ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                  claim.\n                </Text>\n                <Button\n                  ml={[0, 2]}\n                  mt={[2, 0]}\n                  size={\"small\"}\n                  mainColor={\"blue\"}\n                  onClick={e => this.setGovModal(true)}\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};"],"sourceRoot":""}