{"version":3,"sources":["AssetField/AssetField.js","ExtLink/ExtLink.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","RoundButton/RoundButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","CustomField/CustomField.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","GenericSelector/GenericSelector.js","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","defiScoreDisabled","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","ExtLink","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","target","rel","children","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","text","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","cardProps","py","px","transition","cursor","overflow","mt","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","transactionsList","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","FlexLoader","minHeight","textProps","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundButton","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","button","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","isDisabled","image","align","imageProps","useIconOnly","iconColor","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","hashChanged","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","checkLimit","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","approveDescription","balanceSelectorInfo","placeholder","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","maxDate","isAfter","currTime","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","totalSupply","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","abs","tokenName","totalClaimedUser","blockInfo","claimedAmount","returnValues","recipient","getBlockInfo","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","depositTimestamp","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","claim","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","getNexusMutualCoverages","coverage","validClaimableCoverFromParam","urlParams","param3","cover","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","underlying","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","contractAddress","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","toWei","textDecoration","activeColor","reset","utils","toTwosComplement","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","coverAsset","claimableAmount","maxCoveredAmount","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","Fragment","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","depositedTokens","tokensToMigrate","aggregatedValues","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getTokensToMigrate","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","amountLentToken","tokenWeight","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","nexusMutualConfig","batchDepositConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","h4","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","route","ActiveCoverages","AssetsList","visibleOnDesktop","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","Migrate","useMetaTx","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","expirationDate","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","12","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","protocol","aprTooltipMode","distributionMode","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","tranches","AA","hex","rgb","baseName","features","long","stake","unstake","cantUnstake","cantWithdraw","BB","strategies","best","visible","comingSoon","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","to","notifications","tools","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","yieldTokenCoverGracePeriod","NexusMutualDistributor","incidentsInfo","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","_args5","tranchesBalance","protocolConfig","tranche","trancheConfig","trancheTokenBalance","tranchePool","tranchePrice","trancheUserInfo","trancheApy","poolShare","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","orderedTokensBalance","_args8","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","acc","getTrancheRewardTokensInfo","_ref20","_callee15","stakingRewards","tokensDistribution","_context15","_ref21","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref22","_ref23","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","apr2apy","_x9","_ref24","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref25","_ref26","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref27","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref28","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref29","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref30","_callee20","_context20","_x20","_x21","_x22","_ref31","_callee21","_ref32","_ref33","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","_callee24","_args24","_context24","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref38","allAvailableTokens","_args25","_context25","processStoredTxs","_ref39","_callee26","_args26","_context26","_x25","_ref40","_callee27","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref41","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenAddress","_ref42","_callee31","minedTxs","_context31","_ref43","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","_ref44","_callee28","_context28","getTransactionReceipt","_x31","_x32","baseTokensConfig","t2","_ref45","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref46","_callee38","txsToProcess","_args38","_context38","_ref47","_callee37","_context37","_ref48","_callee36","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref49","_callee33","_context33","_x39","_x40","_ref50","_callee34","_context34","_x41","_x42","raw","_ref51","_callee35","_context35","_x43","_x44","decodeLog","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref52","_callee39","error_callback","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref53","_callee40","apiKeyIndex","_args40","_context40","_x46","_ref54","_callee41","return_data","_args41","_context41","_x47","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee42","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref56","_callee44","googleEventsInfo","originOk","currentNetwork","_args44","_context44","_ref57","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref58","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","negativeSign","Number","getSnapshotProposals","_callee48","activeOnly","validProposals","_args48","_context48","addr","msg","_ref60","_callee47","checkedStrategies","_context47","metadata","_ref61","_callee46","_context46","symbol","_x55","_x54","_ref62","_callee49","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","_x56","getTokenExchangeRate","_ref63","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","_ref64","_callee51","_context51","_x59","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee52","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref67","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref68","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","_ref69","_callee56","oldContractBalance","oldContractTokenDecimals","oldContractName","_context56","_x63","_x64","_ref70","_callee57","eventName","_args57","_context57","_x65","_x66","estimateMethodGasUsage","_ref71","_callee58","_contract$methods","functionCall","gasLimit","_ref72","_ref73","_args58","_context58","getGasPrice","estimateGas","_x67","_x68","_ref74","_callee59","callback_receipt","_contract$methods2","_context59","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref75","_callee60","biconomyInfo","res","_context60","x-api-key","_x74","sendTxWithPermit","_ref76","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref77","_callee62","tokenAddress","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref78","_callee64","_context64","_ref79","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref80","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref81","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref82","_callee67","erc20Name","spender","deadline","domain","domainData","_context67","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","_ref83","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args68","_context68","net","getId","allowed","_x105","_x106","_x107","_ref84","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref85","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","_ref86","_callee71","contractAddr","walletAddr","_ref87","_ref88","allowance","_context71","getAllowance","_x120","_x121","_x122","_ref89","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","getTrancheStakedBalance","_ref90","_callee73","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref91","_callee75","_context75","_ref92","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref93","_callee76","field","_args76","_context76","loadTrancheField","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref94","_callee77","formatValue","addTokenName","idleStrategyAddress","idleGovTokenConfig","_ref95","_ref96","virtualPrice","_ref97","_ref98","staked1","lastPrice1","_ref99","_ref100","deposited1","lastPrice","_ref101","_ref102","redeemable1","staked2","_ref103","_ref104","trancheApy2","deposited3","_ref105","_ref106","trancheFee","_ref107","_ref108","deposited4","redeemable3","_ref109","_ref110","deposited2","redeemable2","_ref111","_ref112","secondsFromFirstTx","rewardsTokensInfo","_ref113","_ref114","rewardsTokens","incentiveTokens","_args77","_context77","Strategy","getTokenTotalSupply","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","_ref115","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref116","_ref117","curveAvgBuyPrice","curveTokenBalance","_ref118","_ref119","amountLentCurve1","redeemableBalanceCurve","_ref120","_ref121","earningPerYear","_ref122","_ref123","amountLent1","redeemableBalance1","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref124","_ref125","tokenPriceFirstDeposit","_ref126","_ref127","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref128","_ref129","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref130","_ref131","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref132","_ref133","amountLentCurve2","redeemableBalanceCurve1","_ref134","_ref135","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref136","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref137","_callee80","_ref138","_ref139","priceWFee","_args80","_context80","eq","_x151","_x152","_ref140","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","useLocalStorage","_ref141","_callee82","_ref142","_ref143","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","_args84","_context84","_ref145","_callee83","coverageTokens","protocolImage","_context83","_x156","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","protocolImageDark","coverDetails","validUntil","_ref146","_callee86","_ref147","_ref148","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","buyer","_ref149","_callee85","claimSubmittedEvent","_ref150","_ref151","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimablePrice","_ref152","_ref153","_context85","productId","incidentDate","curr","priceBefore","underlyingConfig","findIndex","_x158","_x157","_ref154","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","_args89","_context89","_ref156","_callee88","_ref157","_ref158","_context88","_x160","_ref159","_callee90","fixDecimals","_args90","_context90","_x161","_ref160","_callee91","_ref161","_ref162","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref163","_callee92","_args92","_context92","_x164","_ref164","_callee93","_args93","_context93","_x165","_ref165","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref166","_callee95","_context95","_x168","_x169","getAprs","_ref167","_callee96","_context96","addresses","_x170","genericIdleCall","_ref168","_callee97","callParams","_args97","_context97","_x171","_ref169","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref170","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref171","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref173","_callee102","_context102","getBlock","_x180","_ref174","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref175","_callee104","_args104","_context104","_x183","_x184","_ref176","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref177","_callee106","_args106","_context106","_x187","_x188","getUnlentBalance","_ref178","_callee107","unlentBalance","_context107","_x189","_ref179","_callee108","_args108","_context108","_x190","_ref180","_callee110","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref184","_ref185","_args110","_context110","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref181","_callee109","_ref182","_ref183","protocolBalance","protocolAllocation","_context109","_x192","_x193","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x191","_ref186","_callee111","pairAddresses","_ref187","_ref188","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref189","_ref190","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context111","_x194","_x195","_ref191","_callee112","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context112","_x196","_x197","_ref192","_callee113","unires","_context113","_x198","_x199","getCurveDepositedTokens","_ref193","_callee114","idleTokensBalances","remainingCurveTokens","_args114","_context114","_x200","getCurveUnevenTokenAmounts","_ref194","_callee115","amounts","max_burn_amount","unevenAmounts","_context115","getCurveDepositContract","_x201","_x202","_callee116","curveRatesInfo","_context116","strategyTokens","getCurveAPYContract","_callee117","blocksForPrevTokenPrice","_ref197","_ref198","prevTokenPrice","blocksMultiplier","curveAPR","_context117","getCurveTokenSupply","_callee118","_context118","getCurvePoolContract","_callee119","_args119","_context119","_callee120","_args120","_context120","_ref202","_callee121","_ref203","_ref204","_context121","_x203","_callee122","depositContractInfo","_context122","getCurveZapContract","_callee123","zapContractInfo","_context123","_callee124","poolContractInfo","_context124","getCurveSwapContract","_callee125","_context125","getCurveIdleTokensAmounts","_callee127","max_slippage","curveTokenSupply","curveTokenShare","_args127","_context127","_ref210","_callee126","curveIdleTokens","_context126","_x204","getCurveTokensAmounts","_callee129","useCoinIndex","_args129","_context129","_ref212","_callee128","_ref213","_ref214","totalTokenSupply","_context128","_x205","getCurveAmounts","_ref215","_callee131","_args131","_context131","_ref216","_callee130","_context130","_x208","_x206","_x207","getCurveTokenAmount","_ref217","_callee132","_args132","_context132","_x209","getCurveSlippage","_ref218","_callee133","uneven_amounts","_ref219","_ref220","Sv","_args133","_context133","_x210","_x211","_ref221","_callee134","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref222","_ref223","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args134","_context134","_x212","_callee136","_args136","_context136","_ref225","_callee135","_ref226","_ref227","_context135","_x213","getStkAaveApr","_ref228","_callee137","aaveConversionRate","stkAaveAPR","stkAaveValue","_args137","_context137","_x214","_x215","getCompAPR","_ref229","_callee138","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args138","_context138","_x216","_x217","getCompSpeed","_ref230","_callee139","cTokenAddress","compSpeed","_context139","_x218","_ref231","_callee140","cTokenInfo","compoundAllocationPerc","_ref232","_ref233","cTokenTotalSupply","compoundPoolShare","_args140","_context140","_x219","_callee142","_args142","_context142","_ref235","_callee141","_ref236","_ref237","_context141","_x220","_callee144","_args144","_context144","_ref239","_callee143","_ref240","_ref241","compApr","_context143","_x221","getTokensCsv","_callee147","csv","_context147","prototype","sum","pv","cv","avg","_ref243","_callee146","_context146","_ref244","_callee145","header","aprAvg","scoreAvg","lastRow","_context145","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x223","_x222","_callee149","_args149","_context149","_ref246","_callee148","compTokenBalance","_context148","_x224","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref247","_callee151","govTokensUserDistribution","_args151","_context151","_ref248","_callee150","_context150","_x226","_x225","_ref249","_callee153","govTokensDistribution","tokenGovTokens","_args153","_context153","_ref250","_callee152","govSpeed","_context152","_x228","_x227","_ref251","_callee155","_args155","_context155","_ref252","_callee154","_ref253","_ref254","_ref255","_ref256","cTokenConfig","_context154","_x231","_x229","_x230","_callee157","_args157","_context157","_ref258","_callee156","tokenConversionRate","fromTokenConfig","_context156","_x232","_callee158","checkShowBalance","govTokensEarnings","_args158","_context158","govTokenAmount","getGovTokensIndexes","_ref260","_callee160","govTokensAmounts","_context160","getGovTokensUserAmounts","_ref261","_callee159","_context159","getGovTokenAddessByIndex","_x235","_x236","_x233","_x234","_ref262","_callee161","_context161","_x237","_x238","_ref263","_callee162","_context162","_x239","_x240","_callee165","govTokenConfigForced","_args165","_context165","_ref265","_callee164","_context164","_ref266","_callee163","_context163","_x242","_x243","_x241","_callee166","_args166","_context166","_callee167","_ref269","_ref270","gain","fees","_args167","_context167","_ref271","_callee168","_args168","_context168","_x244","getTotalTVL","_callee169","tokensTVL","_context169","getTokensTVL","totalTVL","tokenTVL","_callee173","_context173","_ref274","_callee172","_context172","_ref275","_callee171","oldTokenTVL","idleTokenName","_ref276","_ref277","_ref281","_ref282","oldTokenPrice","oldTotalSupply","_context171","_ref278","_callee170","_ref279","_ref280","govTokenConversionRate","govTokenBalanceConverted","_context170","_x247","_x246","_x245","getSubstackLatestFeed","_callee174","endpointInfo","idleSubstackFeed","latestFeed","_context174","items","getAggregatedStats","_callee175","totalAUM","_args175","_context175","getAggregatedStats_chain","_callee179","avgAPR","_args179","_context179","_ref286","_callee178","_context178","_ref287","_callee177","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context177","_ref288","_callee176","_ref289","_ref290","_context176","_x250","_x249","_x248","getTokenApy","_ref291","_callee180","_context180","_x251","_callee183","_args183","_context183","_ref293","_callee182","_context182","_ref294","_callee181","_ref295","_context181","_x253","_x252","getProtocolsTokensBalances","_callee185","tokenBalances","minTokenBalance","protocolsTokens","_args185","_context185","_ref297","_callee184","tokenContract","_context184","_x254","_ref298","_callee186","_args186","_context186","_x255","_x256","_x257","getAvgAPYStats","_ref299","_callee187","apiResults","_args187","_context187","_x258","_x259","_ref300","_callee188","_conversionRate","_args188","_context188","_x260","_x261","_ref301","_callee189","_ref302","_ref303","_context189","protocolScore","getTokenScoreApi","_x262","_x263","_ref304","_callee190","_context190","_x264","_x265","_ref305","_callee193","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args193","_context193","_ref306","_callee192","addrIndex","protocolApr","protocolApy","govTokenAPR","_context192","_ref307","_callee191","_context191","_x269","_x267","_x268","_x266","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref19","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.45b5088f.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         isDisabled={this.props.isDisabled}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\n// import Tranches from '../Tranches/Tranches';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      12:{\n        description:'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield','idleFEIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  tranches:{\n    AA:{\n      color:{\n        // hex:'#00ff06',\n        hex:'#00a9fe',\n        rgb:[0, 169, 254],\n        hsl:['200', '100%', '50%']\n      },\n      type:'AA',\n      route:'senior',\n      icon:'Security',\n      baseName:'senior',\n      name:'Senior Tranche',\n      features:[\n        'Covered by Junior tranches funds',\n        'Minimized risk exposure',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds\\' coverage given by Junior Tranches',\n        deposit:'By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    },\n    BB:{\n      color:{\n        hex:'#ff9900',\n        rgb:[255, 153, 0],\n        hsl:['36', '100%', '50%']\n      },\n      type:'BB',\n      route:'junior',\n      icon:'TrendingUp',\n      baseName:'junior',\n      name:'Junior Tranche',\n      features:[\n        'Leverage yield using Senior tranches funds',\n        'Higher risk exposure by protecting senior tranches',\n        'No locking period or epochs',\n        'Auto-Reinvest accrued tokens',\n        'Stake to receive $IDLE tokens'\n      ],\n      description:{\n        long:'The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches',\n        deposit:'By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.',\n        stake:'Stake your tranche tokens to earn additional rewards and boost the APY.',\n        unstake:'By unstaking your tranche tokens you will no more get additional rewards.',\n        withdraw:'You can withdraw your funds at any time from the tranche.',\n        cantUnstake:'To unstake your funds you just need to wait 10 blocks after your last stake transaction.',\n        cantWithdraw:'To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.'\n      }\n    }\n  },\n  strategies:{\n    /*\n    tranches:{\n      token:'DAI',\n      visible:true,\n      type:'tranche',\n      protocol:'idle',\n      color:'#f32121',\n      comingSoon:false,\n      title:'Tranches',\n      addGovTokens:true,\n      titlePostfix:null,\n      iconName:'Whatshot',\n      component: Tranches,\n      govTokensEnabled:true,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/tranches-on.png',\n      iconInactive:'images/strategies/tranches-off.png',\n      iconInactiveDark:'images/strategies/tranches-white.png',\n      desc:'Diversify your risk profile with dynamic tranched yield derivatives',\n      descShort:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.',\n      descLong:'Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles. A Junior tranche receives a larger portion of the yield generated by the underlying pool, and therefore a Senior tranche has a lower yield. This is because the senior tranches have first lien on the underlying assets – they are in line to be repaid first, in case of default (hack, loss of funds). Junior tranches have a second lien or no lien at all. These products allow to tranche a spectrum of risks related to underlying assets and smart contract failures. In this way, risk-tolerant users can get higher returns for taking an higher risk, while risk-averse users will receive protection in exchange of a share of their profits with their risk-tolerant equivalents.',\n    },\n    */\n    best:{\n      token:'DAI',\n      visible:true,\n      color:'#f32121',\n      type:'strategy',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      visible:true,\n      color:'#2196F3',\n      type:'strategy',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      FEI:{\n        decimals:18,\n        enabled:false,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-07-30',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:false,\n        enabled:false,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  events:{\n    DAI:{\n      fields:{\n        to:'dst',\n        from:'src',\n        value:'wad'\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI','FEI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest',TTL=null) => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,TTL);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldInfo.props}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}