{"version":3,"sources":["utilities/GovernanceUtil.js","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","StatsCard/StatsCard.js","CardIconButton/CardIconButton.js","DashboardMenu/DashboardMenu.js","ConnectBox/ConnectBox.js","utilities/components/TooltipModal.js","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DelegateVesting/DelegateVesting.js","DashboardHeader/DashboardHeader.js","MenuAccount/MenuAccount.module.scss","Notifications/Notifications.module.scss","CryptoInput/CryptoInput.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestingContract","_callee3","vestingContract","_args3","_context3","parseInt","initContract","VesterABI","delegateVesting","_callee4","delegate","callback","callbackReceipt","_args4","_context4","contractMethodSendWrapper","getVestingAmount","_callee5","vestingAmount","_args5","_context5","getCurrentDelegate","_callee6","_args6","_context6","getCurrentVotes","_callee7","votes","_args7","_context7","getVotingPeriod","_callee8","votingPeriod","_context8","getTimelockDelay","_callee9","delay","_context9","queueProposal","_ref10","_callee10","proposalId","_args10","_context10","toBN","_x","apply","executeProposal","_ref11","_callee11","_args11","_context11","_x2","proposeAndVoteFor","_ref12","_callee12","targets","values","signatures","calldatas","description","batcher","contract","txs","_context12","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref13","_callee13","_args13","_context13","_x8","_x9","_x10","_x11","_x12","_ref14","_callee14","support","_args14","_context14","_x13","_x14","setDelegate","_ref15","_callee15","_args15","_context15","_x15","getDelegatesChanges","_callee16","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context16","eth","getBlockNumber","Math","min","push","getContractPastEvents","Promise","all","reduce","delegations","d","getDelegatesVotesChanges","_callee17","_context17","getDelegates","_callee18","limit","_ref19","_ref20","all_votes","delegateAccounts","delegates","_args18","_context18","getVotes","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","forEach","e","_e$returnValues","returnValues","newBalance","keys","sort","b","index","rank","toFixed","vote_weight","parseFloat","proposals","filter","v","voter","toLowerCase","splice","getProposalParams","_callee19","govContractName","_ref22","_ref23","proposalThreshold","proposalMaxOperations","params","_context19","getCachedData","setCachedData","_callee20","governanceContractName","_context20","map","_e$returnValues2","getProposals","_callee22","voted_by","filter_by_state","enumerateProposalState","proposalCount","proposalGets","proposalStateGets","_arr","_i","i","_ref26","_ref27","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_args22","_context22","p","state","find","Array","from","n","reverse","asyncForEach","_ref28","_callee21","createdEvent","canceledEvent","executedEvent","queuedEvent","createdBlockInfo","createdState","activeState","canceledBlockInfo","canceledState","queuedBlockInfo","succeededState","queuedState","executedBlockInfo","executedState","endBlockInfo","endState","_createdEvent$returnV","_context21","id","states","getBlock","end_time","timestamp","start_time","trx_hash","transactionHash","s","endBlock","title","split","replace","shift","join","eta","actions","executed","canceled","forVotes","proposer","startBlock","againstVotes","_x16","_x17","Breadcrumb","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","width","alignItems","handleClick","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","height","iconSize","iconName","text","ml","fontSize","fontWeight","color","hoverColor","onClick","isMobile","path","link","pathLink","Component","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","key","goToSection","RoundIconButton","assign","borderRadius","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","name","size","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","flexDirection","justifyContent","titleMinHeight","h4","mb","textAlign","lineHeight","value","toString","valueProps","children","label","mt","labelTooltip","placement","message","CardIconButton","py","px","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","my","useIconOnly","align","icon","iconColor","mr","backgroundColor","iconBgColor","transactions","actionBg","redeem","textProps","DashboardMenu","buyModalOpened","setState","_this2","menu","visibleLinks","menuLink","showMobile","mobile","isDarkTheme","themeMode","darkModeEnabled","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_router_dom__WEBPACK_IMPORTED_MODULE_9__","position","src","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","inactiveImage","imageInactiveDark","imageInactive","route","href","textDecoration","selected","image","bgColor","setThemeMode","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TooltipModal","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","React","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","updateLastOpenTimestamp","notificationsChanged","JSON","stringify","Date","now","notificationsParams","getStoredItem","setLocalStorage","getSnapshotProposals","getBatchedDeposits","activeSnapshotProposals","governanceProposals","batchedDeposits","currTime","snapshotProposalBaseUrl","enabled","start","end","msg","payload","body","authorIpfsHash","date","_this3","strToMoment","utc","format","governanceProposalUrl","iconProps","hash","batchDepositConfig","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","status","completed","notification","openWindow","window","location","_this4","hasUnreadNotifications","react_default","index_es","zIndex","flexProps","onMouseOut","setMouseOverBell","onMouseOver","toggleTab","bind","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","top","setMouseOverNotifications","openNotification","dark","borderBottom","AccountModal","logout","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","token","setConnector","connectorName","context","accountChanged","acccount","section","rows","renderBalances","boxShadow","tokenIndex","AssetField","tokenConfig","fieldInfo","ModalCard","address","ethInput","ethInputDark","toolName","toolConfig","mx","Footer","error","ButtonLoader","buttonText","isLoading","asyncToGenerator","gradientButton","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","objectSpread","getIdleGovToken","loadIdleTokenBalance","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","governanceRoute","governanceEnabled","dashboardRoute","display","alt","ShortHash","src_Notifications_Notifications","flex","balanceButton","setGovModal","isDashboard","RoundButton","isGovernance","components_AccountModal","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","tx","eventData","getTransactionError","newState","claimCallback","claimRewards","action","bgLayer","background","titleProps","gt","pb","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","lte","DelegateVesting","newDelegate","delegatee","currentDelegate","delegateAddressValid","delegateDifferentWallet","vestingContractDelegated","delegatesChanges","lastDelegateTx","delegator","pop","toDelegate","revoke","repeat","checkAddress","loadData","target","div","type","required","borderColor","placeholder","onChange","changeDelegate","checked","setDelegateDifferentWallet","DashboardHeader","govModalOpened","src_MenuAccount_MenuAccount","src_DelegateVesting_DelegateVesting","components_GovModal","module","exports","list","newLink","newPill","mainInput","button","newPillContainerAnim"],"mappings":"0KAwmBeA,IA5lBb,SAAAA,EAAYC,GAAM,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAH,GAAAG,KAJlBF,MAAQ,GAIUE,KAHlBG,cAAgB,KAGEH,KAKlBI,SAAW,SAAAN,GACTC,EAAKD,MAAQA,EAETC,EAAKI,cACPJ,EAAKI,cAAcC,SAASL,EAAKD,OAEjCC,EAAKI,cAAgB,IAAIE,IAAcN,EAAKD,QAX9BE,KAelBM,eAfkBL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAeD,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAGTP,EAAgB,mBAChBC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QALzC,CAAAL,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SAMNV,GANM,cASTC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cATnEP,EAAAE,KAAA,EAUSpB,EAAKI,cAAcsB,oBAAoBX,EAAa,eAV7D,YAUXC,EAVWE,EAAAS,MAAA,CAAAT,EAAAE,KAAA,gBAYbJ,EAAchB,EAAKI,cAAcwB,iBAAiBZ,EAAY,IAZjDE,EAAAM,OAAA,SAaNxB,EAAKI,cAAcyB,8BAA8BhB,EAAcG,EAAY,OAbrE,eAAAE,EAAAM,OAAA,SAgBR,MAhBQ,yBAAAN,EAAAY,SAAAlB,EAAAX,SAfCA,KAkClB8B,iBAlCkB7B,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkCC,SAAAqB,IAAA,IAAAC,EAAApB,EAAAC,EAAAC,EAAAmB,EAAAC,EAAAC,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,YAEjBa,GAFwBA,EAAPE,EAAAG,OAAA,QAAAC,IAAAJ,EAAA,GAAAA,EAAA,GAAe,OAEFnC,EAAKD,MAAMkC,SAFxB,CAAAI,EAAAjB,KAAA,YAMTP,EANS,oBAAA2B,OAM2BP,KACpCnB,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QARzC,CAAAc,EAAAjB,KAAA,eAAAiB,EAAAb,OAAA,SASNV,GATM,cAYTC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAZnEY,EAAAjB,KAAA,GAaOpB,EAAKI,cAAcqC,mBAAmB1B,EAAckB,GAb3D,aAaTC,EAbSG,EAAAV,OAcC3B,EAAKI,cAAckB,MAAMY,GAASX,QAdnC,CAAAc,EAAAjB,KAAA,gBAAAiB,EAAAb,OAAA,SAeNxB,EAAKI,cAAcyB,8BAA8BhB,EAAcb,EAAKI,cAAckB,MAAMY,KAflF,eAAAG,EAAAb,OAAA,SAkBV,MAlBU,yBAAAa,EAAAP,SAAAE,EAAA/B,SAlCDA,KAuDlByC,mBAvDkBxC,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAuDG,SAAAgC,IAAA,IAAAV,EAAAW,EAAAC,EAAAT,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cACnBa,GAD0BA,EAAPY,EAAAP,OAAA,QAAAC,IAAAM,EAAA,GAAAA,EAAA,GAAe,OACJ7C,EAAKD,MAAMkC,QADtBa,EAAA1B,KAAA,EAEWpB,EAAKI,cAAcsB,oBAAoB,gBAAgB,mBAAmB,CAACO,IAFtF,UAEbW,EAFaE,EAAAnB,KAIe,IAA9BoB,SAASH,GAJM,CAAAE,EAAA1B,KAAA,eAAA0B,EAAAtB,OAAA,SAKV,MALU,cAAAsB,EAAA1B,KAAA,EAQbpB,EAAKD,MAAMiD,aAAa,kBAAkBJ,EAAgBK,GAR7C,cAAAH,EAAAtB,OAAA,SASZoB,GATY,yBAAAE,EAAAhB,SAAAa,EAAA1C,SAvDHA,KAmElBiD,gBAnEkBhD,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAmEA,SAAAwC,IAAA,IAAAlB,EAAAmB,EAAAC,EAAAC,EAAAC,EAAAnB,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAOa,EAAPsB,EAAAjB,OAAA,QAAAC,IAAAgB,EAAA,GAAAA,EAAA,GAAe,KAAKH,EAApBG,EAAAjB,OAAA,QAAAC,IAAAgB,EAAA,GAAAA,EAAA,GAA6B,KAAKF,EAAlCE,EAAAjB,OAAA,QAAAC,IAAAgB,EAAA,GAAAA,EAAA,GAA2C,KAAKD,EAAhDC,EAAAjB,OAAA,QAAAC,IAAAgB,EAAA,GAAAA,EAAA,GAAgE,KAChFtB,EAAUA,GAAoBjC,EAAKD,MAAMkC,QADzBuB,EAAApC,KAAA,EAEapB,EAAK0C,mBAAmBT,GAFrC,WAAAuB,EAAA7B,KAAA,CAAA6B,EAAApC,KAAA,gBAAAoC,EAAApC,KAAA,GAKDpB,EAAKI,cAAcqD,0BAA0B,kBAAkB,cAAc,CAACL,GAAUC,EAASC,GALhG,eAAAE,EAAAhC,OAAA,SAAAgC,EAAA7B,MAAA,eAAA6B,EAAAhC,OAAA,SAOT,MAPS,yBAAAgC,EAAA1B,SAAAqB,EAAAlD,SAnEAA,KA6ElByD,iBA7EkBxD,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA6EC,SAAAgD,IAAA,IAAA1B,EAAA2B,EAAAC,EAAAzB,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACjBa,GADwBA,EAAP4B,EAAAvB,OAAA,QAAAC,IAAAsB,EAAA,GAAAA,EAAA,GAAe,OACF7D,EAAKD,MAAMkC,QADxB6B,EAAA1C,KAAA,EAEYpB,EAAK0C,mBAAmBT,GAFpC,WAAA6B,EAAAnC,KAAA,CAAAmC,EAAA1C,KAAA,gBAAA0C,EAAA1C,KAAA,EAIWpB,EAAKI,cAAcsB,oBAAoB,kBAAkB,iBAJpE,YAIXkC,EAJWE,EAAAnC,MAAA,CAAAmC,EAAA1C,KAAA,gBAAA0C,EAAAtC,OAAA,SAMNxB,EAAKI,cAAckB,MAAMsC,IANnB,eAAAE,EAAAtC,OAAA,SASV,MATU,yBAAAsC,EAAAhC,SAAA6B,EAAA1D,SA7EDA,KAyFlB8D,mBAzFkB7D,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAyFG,SAAAqD,IAAA,IAAA/B,EAAApB,EAAAC,EAAAC,EAAAqC,EAAAa,EAAA7B,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,YAEnBa,GAF0BA,EAAPgC,EAAA3B,OAAA,QAAAC,IAAA0B,EAAA,GAAAA,EAAA,GAAe,OAEJjE,EAAKD,MAAMkC,SAFtB,CAAAiC,EAAA9C,KAAA,YAMXP,EANW,sBAAA2B,OAM2BP,KACtCnB,EAAad,EAAKI,cAAciB,8BAA8BR,IAPnD,CAAAqD,EAAA9C,KAAA,eAAA8C,EAAA1C,OAAA,SASRV,GATQ,cAYXC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAZjEyC,EAAA9C,KAAA,GAaMpB,EAAKI,cAAcsB,oBAAoBX,EAAc,YAAa,CAACkB,IAbzE,eAaXmB,EAbWc,EAAAvC,KAAAuC,EAAA1C,OAAA,SAeVxB,EAAKI,cAAcyB,8BAA8BhB,EAAcuC,IAfrD,eAAAc,EAAA1C,OAAA,SAkBZ,MAlBY,yBAAA0C,EAAApC,SAAAkC,EAAA/D,SAzFHA,KA8GlBkE,gBA9GkBjE,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA8GA,SAAAyD,IAAA,IAAAnC,EAAApB,EAAAC,EAAAC,EAAAsD,EAAAC,EAAAlC,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAsD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,YAEhBa,GAFuBA,EAAPqC,EAAAhC,OAAA,QAAAC,IAAA+B,EAAA,GAAAA,EAAA,GAAe,OAEDtE,EAAKD,MAAMkC,SAFzB,CAAAsC,EAAAnD,KAAA,YAKRP,EALQ,mBAAA2B,OAK2BP,KACnCnB,EAAad,EAAKI,cAAciB,8BAA8BR,IANtD,CAAA0D,EAAAnD,KAAA,eAAAmD,EAAA/C,OAAA,SAQLV,GARK,cAWRC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAXpE8C,EAAAnD,KAAA,GAYMpB,EAAKI,cAAcsB,oBAAoBX,EAAc,kBAAmB,CAACkB,IAZ/E,aAYRoC,EAZQE,EAAA5C,OAaA3B,EAAKI,cAAckB,MAAM+C,GAAO9C,QAbhC,CAAAgD,EAAAnD,KAAA,gBAAAmD,EAAA/C,OAAA,SAcLxB,EAAKI,cAAcyB,8BAA8BhB,EAAcb,EAAKI,cAAckB,MAAM+C,KAdnF,eAAAE,EAAA/C,OAAA,SAkBT,MAlBS,yBAAA+C,EAAAzC,SAAAsC,EAAAnE,SA9GAA,KAmIlBuE,gBAnIkBtE,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAmIA,SAAA8D,IAAA,IAAA5D,EAAAC,EAAAC,EAAA2D,EAAA,OAAAjE,EAAAC,EAAAO,KAAA,SAAA0D,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAvD,MAAA,UAEVP,EAFU,iBAGVC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QAJxC,CAAAoD,EAAAvD,KAAA,eAAAuD,EAAAnD,OAAA,SAKPV,GALO,cAQVC,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eARlEkD,EAAAvD,KAAA,EASSpB,EAAKI,cAAcsB,oBAAoBX,EAAa,gBAT7D,YASZ2D,EATYC,EAAAhD,MAAA,CAAAgD,EAAAvD,KAAA,gBAWdsD,EAAe1E,EAAKI,cAAckB,MAAMoD,GAX1BC,EAAAnD,OAAA,SAYPxB,EAAKI,cAAcyB,8BAA8BhB,EAAc6D,EAAa,OAZrE,eAAAC,EAAAnD,OAAA,SAeT,MAfS,yBAAAmD,EAAA7C,SAAA2C,EAAAxE,SAnIAA,KAqJlB2E,iBArJkB1E,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAqJC,SAAAkE,IAAA,IAAAhE,EAAAC,EAAAgE,EAAA,OAAArE,EAAAC,EAAAO,KAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAA3D,MAAA,UAEXP,EAFW,qBAGXC,EAAad,EAAKI,cAAciB,8BAA8BR,KACjDb,EAAKI,cAAckB,MAAMR,GAAYS,QAJvC,CAAAwD,EAAA3D,KAAA,eAAA2D,EAAAvD,OAAA,SAKRV,GALQ,cAAAiE,EAAA3D,KAAA,EAQCpB,EAAKI,cAAcsB,oBAAoB,WAAW,SARnD,YAQboD,EARaC,EAAApD,MAAA,CAAAoD,EAAA3D,KAAA,gBAUf0D,EAAQ9E,EAAKI,cAAckB,MAAMwD,GAVlBC,EAAAvD,OAAA,SAWRxB,EAAKI,cAAcyB,8BAA8BhB,EAAciE,EAAM,OAX7D,eAAAC,EAAAvD,OAAA,SAcV,MAdU,yBAAAuD,EAAAjD,SAAA+C,EAAA5E,SArJDA,KAsKlB+E,cAtKkB,eAAAC,EAAA/E,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAsKF,SAAAuE,EAAOC,GAAP,IAAA9B,EAAAC,EAAAvC,EAAAqE,EAAAhD,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAoE,GAAA,cAAAA,EAAAlE,KAAAkE,EAAAjE,MAAA,cAAkBiC,EAAlB+B,EAAA9C,OAAA,QAAAC,IAAA6C,EAAA,GAAAA,EAAA,GAA2B,KAAK9B,EAAhC8B,EAAA9C,OAAA,QAAAC,IAAA6C,EAAA,GAAAA,EAAA,GAAgD,KACxDrE,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eADpE4D,EAAAjE,KAAA,EAERpB,EAAKI,cAAcqD,0BAA0B1C,EAAa,QAAQ,CAACf,EAAKI,cAAckF,KAAKH,IAAa9B,EAASC,GAFzG,wBAAA+B,EAAAvD,SAAAoD,EAAAjF,SAtKE,gBAAAsF,GAAA,OAAAN,EAAAO,MAAAvF,KAAAmC,YAAA,GAAAnC,KA2KlBwF,gBA3KkB,eAAAC,EAAAxF,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA2KA,SAAAgF,EAAOR,GAAP,IAAA9B,EAAAC,EAAAvC,EAAA6E,EAAAxD,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA4E,GAAA,cAAAA,EAAA1E,KAAA0E,EAAAzE,MAAA,cAAkBiC,EAAlBuC,EAAAtD,OAAA,QAAAC,IAAAqD,EAAA,GAAAA,EAAA,GAA2B,KAAKtC,EAAhCsC,EAAAtD,OAAA,QAAAC,IAAAqD,EAAA,GAAAA,EAAA,GAAgD,KAC1D7E,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eADlEoE,EAAAzE,KAAA,EAEVpB,EAAKI,cAAcqD,0BAA0B1C,EAAa,UAAU,CAACf,EAAKI,cAAckF,KAAKH,IAAa9B,EAASC,GAFzG,wBAAAuC,EAAA/D,SAAA6D,EAAA1F,SA3KA,gBAAA6F,GAAA,OAAAJ,EAAAF,MAAAvF,KAAAmC,YAAA,GAAAnC,KAgLlB8F,kBAhLkB,eAAAC,EAAA9F,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAgLE,SAAAsF,EAAOC,EAASC,EAAQC,EAAYC,EAAWC,GAA/C,IAAAC,EAAAxF,EAAAyF,EAAAC,EAAA,OAAAhG,EAAAC,EAAAO,KAAA,SAAAyF,GAAA,cAAAA,EAAAvF,KAAAuF,EAAAtF,MAAA,OACZmF,EAAU,IAAII,IAAQ3G,EAAKD,MAAM6G,KAAK,8CAEtC7F,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAC5E+E,EAAWxG,EAAKI,cAAcyG,kBAAkB9F,GAEhD0F,EAAM,CACV,CACEK,GAAGN,EAASO,SACZC,OAAOR,EAASS,QAAQC,QACxBC,KAAK,CAACjB,EAASC,EAAQC,EAAYC,EAAWC,IAEhD,CACEQ,GAAGN,EAASO,SACZC,OAAOR,EAASS,QAAQG,SACxBD,KAAK,CAACnH,EAAKI,cAAckB,MAAM,IAAI,KAIvCiF,EAAQE,GAnBU,wBAAAC,EAAA5E,SAAAmE,EAAAhG,SAhLF,gBAAAoH,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAzB,EAAAR,MAAAvF,KAAAmC,YAAA,GAAAnC,KAsMlBiH,QAtMkB,eAAAQ,EAAAxH,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAsMR,SAAAgH,EAAOzB,EAASC,EAAQC,EAAYC,EAAWC,GAA/C,IAAAjD,EAAAC,EAAAvC,EAAA6G,EAAAxF,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA4G,GAAA,cAAAA,EAAA1G,KAAA0G,EAAAzG,MAAA,cAA4DiC,EAA5DuE,EAAAtF,OAAA,QAAAC,IAAAqF,EAAA,GAAAA,EAAA,GAAqE,KAAKtE,EAA1EsE,EAAAtF,OAAA,QAAAC,IAAAqF,EAAA,GAAAA,EAAA,GAA0F,KAC5F7G,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAD1EoG,EAAAzG,KAAA,EAEKpB,EAAKD,MAAM0D,0BAA0B1C,EAAc,UAAW,CAACmF,EAASC,EAAQC,EAAYC,EAAWC,GAAc,KAAMjD,EAAUC,GAF1I,cAAAuE,EAAArG,OAAA,SAAAqG,EAAAlG,MAAA,wBAAAkG,EAAA/F,SAAA6F,EAAA1H,SAtMQ,gBAAA6H,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAR,EAAAlC,MAAAvF,KAAAmC,YAAA,GAAAnC,KA2MlBmH,SA3MkB,eAAAe,EAAAjI,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA2MP,SAAAyH,EAAOjD,EAAWkD,GAAlB,IAAAhF,EAAAC,EAAAvC,EAAAuH,EAAAlG,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAA0BiC,EAA1BiF,EAAAhG,OAAA,QAAAC,IAAA+F,EAAA,GAAAA,EAAA,GAAmC,KAAKhF,EAAxCgF,EAAAhG,OAAA,QAAAC,IAAA+F,EAAA,GAAAA,EAAA,GAAwD,KACjEnD,EAAanF,EAAKI,cAAckF,KAAKH,GAC/BpE,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eAFzE8G,EAAAnH,KAAA,EAGIpB,EAAKD,MAAM0D,0BAA0B1C,EAAc,WAAY,CAACoE,EAAYkD,GAAU,KAAMhF,EAAUC,GAH1G,cAAAiF,EAAA/G,OAAA,SAAA+G,EAAA5G,MAAA,wBAAA4G,EAAAzG,SAAAsG,EAAAnI,SA3MO,gBAAAuI,EAAAC,GAAA,OAAAN,EAAA3C,MAAAvF,KAAAmC,YAAA,GAAAnC,KAiNlByI,YAjNkB,eAAAC,EAAAzI,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAiNJ,SAAAiI,EAAOxF,GAAP,IAAAC,EAAAC,EAAAvC,EAAA8H,EAAAzG,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAA6H,GAAA,cAAAA,EAAA3H,KAAA2H,EAAA1H,MAAA,cAAgBiC,EAAhBwF,EAAAvG,OAAA,QAAAC,IAAAsG,EAAA,GAAAA,EAAA,GAAyB,KAAKvF,EAA9BuF,EAAAvG,OAAA,QAAAC,IAAAsG,EAAA,GAAAA,EAAA,GAA8C,KACpD9H,EAAef,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cADtEqH,EAAA1H,KAAA,EAECpB,EAAKD,MAAM0D,0BAA0B1C,EAAc,WAAY,CAACqC,GAAW,KAAMC,EAAUC,GAF5F,cAAAwF,EAAAtH,OAAA,SAAAsH,EAAAnH,MAAA,wBAAAmH,EAAAhH,SAAA8G,EAAA3I,SAjNI,gBAAA8I,GAAA,OAAAJ,EAAAnD,MAAAvF,KAAAmC,YAAA,GAAAnC,KAsNlB+I,oBAtNkB9I,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAsNI,SAAAsI,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/I,EAAAC,EAAAO,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAAAqI,EAAArI,KAAA,EAEUpB,EAAKD,MAAM6G,KAAK8C,IAAIC,iBAF9B,OASpB,IAPMT,EAFcO,EAAA9H,KAIdwH,EAAmB,GAEnBC,EAAYpJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eAC7D4H,EAAwBrJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAElF6H,EAAcF,EAAWE,EAAcJ,EAAiBI,GAJ3C,IAKdC,EAAUK,KAAKC,IAAIP,EALL,IAK+BJ,GACnDC,EAAiBW,KAAK9J,EAAKI,cAAc2J,sBAAsBV,EAAsB,kBAAmB,CAACD,UAAWE,EAAaC,aAX/G,OAAAE,EAAArI,KAAA,GAcU4I,QAAQC,IAAId,GAdtB,eAcdK,EAdcC,EAAA9H,KAAA8H,EAAAjI,OAAA,SAgBbgI,EAAgBU,OAAQ,SAACC,EAAYC,GAE1C,OADAD,EAAcA,EAAY3H,OAAO4H,IAEjC,KAnBkB,yBAAAX,EAAA3H,SAAAmH,EAAAhJ,SAtNJA,KA4OlBoK,yBA5OkBnK,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KA4OS,SAAA2J,IAAA,IAAApB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA/I,EAAAC,EAAAO,KAAA,SAAAsJ,GAAA,cAAAA,EAAApJ,KAAAoJ,EAAAnJ,MAAA,cAAAmJ,EAAAnJ,KAAA,EAEKpB,EAAKD,MAAM6G,KAAK8C,IAAIC,iBAFzB,OASzB,IAPMT,EAFmBqB,EAAA5I,KAInBwH,EAAmB,GAEnBC,EAAYpJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,eAC7D4H,EAAwBrJ,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,cAElF6H,EAAcF,EAAWE,EAAcJ,EAAiBI,GAJ3C,IAKdC,EAAUK,KAAKC,IAAIP,EALL,IAK+BJ,GACnDC,EAAiBW,KAAK9J,EAAKI,cAAc2J,sBAAsBV,EAAsB,uBAAwB,CAACD,UAAWE,EAAaC,aAX/G,OAAAgB,EAAAnJ,KAAA,GAcK4I,QAAQC,IAAId,GAdjB,eAcnBK,EAdmBe,EAAA5I,KAAA4I,EAAA/I,OAAA,SAgBlBgI,EAAgBU,OAAQ,SAACC,EAAYC,GAE1C,OADAD,EAAcA,EAAY3H,OAAO4H,IAEjC,KAnBuB,yBAAAG,EAAAzI,SAAAwI,EAAArK,SA5OTA,KAkQlBuK,aAlQkBtK,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAkQH,SAAA8J,IAAA,IAAAC,EAAA7J,EAAAC,EAAA6J,EAAAC,EAAAC,EAAA7J,EAAAmJ,EAAAW,EAAAC,EAAAC,EAAA5I,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAAOsJ,EAAPM,EAAA1I,OAAA,QAAAC,IAAAyI,EAAA,GAAAA,EAAA,GAAa,KAGpBnK,EAHO,iBAIPC,EAAad,EAAKI,cAAciB,8BAA8BR,IAJvD,CAAAoK,EAAA7J,KAAA,eAAA6J,EAAAzJ,OAAA,SAMJV,GANI,cAAAmK,EAAA7J,KAAA,EAaH4I,QAAQC,IAAI,CACpBjK,EAAKkL,WACLlL,EAAKO,iBACLP,EAAKqK,6BAhBM,cAAAM,EAAAM,EAAAtJ,KAAAiJ,EAAA1K,OAAAiL,EAAA,EAAAjL,CAAAyK,EAAA,GAUXE,EAVWD,EAAA,GAWX5J,EAXW4J,EAAA,GAYXT,EAZWS,EAAA,GAmBPE,EAAmB,GACzBX,EAAYiB,QAAQ,SAAAC,GAAK,IAAAC,EACUD,EAAEE,aAA3BnI,EADekI,EACflI,SAAUoI,EADKF,EACLE,WAClBV,EAAiB1H,GAAYoI,IAG3BT,EAAY,GAChB7K,OAAOuL,KAAKX,GAAkBM,QAAQ,SAACnJ,GACrC,IAAMoC,GAASyG,EAAiB7I,GAClB,IAAVoC,GACJ0G,EAAUjB,KAAK,CACbzF,MAAOA,EAAM,KACbjB,SAAUnB,MAId8I,EAAUW,KAAK,SAAChL,EAAGiL,GACjB,OAAOjL,EAAE2D,MAAQsH,EAAEtH,MAAQ,GAAK,IAGlC0G,EAAUK,QAAS,SAAChB,EAAEwB,GACpBxB,EAAEyB,KAAOD,EAAM,EACfxB,EAAE/F,MAAQ+F,EAAE/F,MAAMyH,QAAQ,GAC1B1B,EAAE2B,aAAsB3B,EAAE/F,MAAQ2H,WAAWhL,GAA5B,KAA2C8K,QAAQ,GAAK,IACzE1B,EAAE6B,UAAYpB,EAAUqB,OAAQ,SAAAC,GAAC,OAAKA,EAAEC,OAAShC,EAAEhH,UAAY+I,EAAEC,MAAMC,gBAAkBjC,EAAEhH,SAASiJ,gBAAiB/J,SAGvHtC,EAAKI,cAAcyB,8BAA8BhB,EAAckK,GAEjD,OAAVL,IACFK,EAAYA,EAAUuB,OAAO,EAAE5B,IAjDpBO,EAAAzJ,OAAA,SAoDNuJ,GApDM,yBAAAE,EAAAnJ,SAAA2I,EAAAxK,SAlQGA,KAyTlBsM,kBAzTkBrM,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAyTE,SAAA6L,IAAA,IAAA3L,EAAAC,EAAA2L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArM,EAAAC,EAAAO,KAAA,SAAA8L,GAAA,cAAAA,EAAA5L,KAAA4L,EAAA3L,MAAA,UAGZP,EAHY,sBAIZC,EAAad,EAAKI,cAAc4M,cAAcnM,IAJlC,CAAAkM,EAAA3L,KAAA,eAAA2L,EAAAvL,OAAA,SAMTV,GANS,cASZ2L,EAAkBzM,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eATnEsL,EAAA3L,KAAA,EAaR4I,QAAQC,IAAI,CACpBjK,EAAKI,cAAcsB,oBAAoB+K,EAAgB,qBACvDzM,EAAKI,cAAcsB,oBAAoB+K,EAAgB,2BAfvC,cAAAC,EAAAK,EAAApL,KAAAgL,EAAAzM,OAAAiL,EAAA,EAAAjL,CAAAwM,EAAA,GAWhBE,EAXgBD,EAAA,GAYhBE,EAZgBF,EAAA,GAkBdC,IACFA,EAAoB5M,EAAKI,cAAckB,MAAMsL,IAGzCE,EAAS,CACbF,oBACAC,yBAxBgBE,EAAAvL,OAAA,SA2BXxB,EAAKI,cAAc6M,cAAcpM,EAAciM,IA3BpC,yBAAAC,EAAAjL,SAAA0K,EAAAvM,SAzTFA,KAuVlBiL,SAvVkBhL,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAuVP,SAAAuM,IAAA,IAAArM,EAAAC,EAAAqM,EAAA9I,EAAA,OAAA5D,EAAAC,EAAAO,KAAA,SAAAmM,GAAA,cAAAA,EAAAjM,KAAAiM,EAAAhM,MAAA,UAGHP,EAHG,aAIHC,EAAad,EAAKI,cAAc4M,cAAcnM,IAJ3C,CAAAuM,EAAAhM,KAAA,eAAAgM,EAAA5L,OAAA,SAMAV,GANA,cASHqM,EAAyBnN,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eATnF2L,EAAAhM,KAAA,EAWSpB,EAAKI,cAAc2J,sBAAsBoD,EAAuB,WAAY,CAAC/D,UAAW,EAAGG,QAAS,WAX7G,cAWLlF,EAXK+I,EAAAzL,QAcP0C,EAAQA,EAAMgJ,IAAK,SAAAhC,GAAK,IAAAiC,EAMlBjC,EAAEE,aAJFa,EAFkBkB,EAElBlB,MAKJ,MAAO,CACL/H,MARoBiJ,EAGlBjJ,MAMF+H,QACA/D,QAVoBiF,EAIlBjF,QAOFlD,WAXoBmI,EAKlBnI,eAnBCiI,EAAA5L,OAAA,SA8BFxB,EAAKI,cAAc6M,cAAcpM,EAAcwD,IA9B7C,yBAAA+I,EAAAtL,SAAAoL,EAAAjN,SAvVOA,KAwXlBsN,aAxXkBrN,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAwXH,SAAA6M,IAAA,IAAAC,EAAAC,EAAA7M,EAAAC,EAAA6M,EAAAR,EAAAS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9J,EAAA4H,EAAAmC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArM,UAAA,OAAA3B,EAAAC,EAAAO,KAAA,SAAAyN,GAAA,cAAAA,EAAAvN,KAAAuN,EAAAtN,MAAA,UAAOqM,EAAPgB,EAAAnM,OAAA,QAAAC,IAAAkM,EAAA,GAAAA,EAAA,GAAgB,KAAKf,EAArBe,EAAAnM,OAAA,QAAAC,IAAAkM,EAAA,GAAAA,EAAA,GAAqC,KAG5C5N,EAAgB,iBAClBC,EAAad,EAAKI,cAAciB,8BAA8BR,IAJrD,CAAA6N,EAAAtN,KAAA,eAMPsM,IACF5M,EAAaA,EAAWoL,OAAQ,SAAAyC,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMvC,gBAAkBqB,EAAgBrB,iBAEzFoB,IACF3M,EAAaA,EAAWoL,OAAQ,SAAAyC,GAAC,OAAKA,EAAEtK,MAAMwK,KAAM,SAAA1C,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMC,gBAAkBoB,EAASpB,mBAV/FqC,EAAAlN,OAAA,SAYJV,GAZI,cAeP6M,EAAyB,SAACiB,GAE9B,MADuB,CAAC,UAAW,SAAU,WAAY,WAAY,YAAa,SAAU,UAAW,YACjFA,IAGlBzB,EAAyBnN,EAAKI,cAAcqB,gBAAgB,CAAC,aAAa,YAAY,eApB/EiN,EAAAtN,KAAA,GAqBepB,EAAKI,cAAcsB,oBAAoByL,EAAuB,iBArB7E,WAqBPS,EArBOc,EAAA/M,KAAA,CAAA+M,EAAAtN,KAAA,gBAAAsN,EAAAlN,OAAA,SAwBJ,IAxBI,QA6Bb,IAFMqM,EAAe,GACfC,EAAoB,GA5BbC,EA6BGe,MAAMC,KAAKD,MAAM/L,SAAS6K,IAAgB,SAACoB,EAAEf,GAAH,OAASA,EAAE,IAArED,EAAA,EAAAA,EAAAD,EAAAzL,OAAA0L,IAAWC,EAA8DF,EAAAC,GACvEH,EAAa/D,KAAK9J,EAAKI,cAAcsB,oBAAoByL,EAAuB,YAAY,CAACc,KAC7FH,EAAkBhE,KAAK9J,EAAKI,cAAcsB,oBAAoByL,EAAuB,QAAQ,CAACc,KA/BnF,OAAAS,EAAAtN,KAAA,GA0CH4I,QAAQC,IAAI,CACpBjK,EAAKkL,WACLlB,QAAQC,IAAI4D,GACZ7D,QAAQC,IAAI6D,GACZ9N,EAAKI,cAAc2J,sBAAsBoD,EAAuB,iBAAkB,CAAC/D,UAAW,EAAGG,QAAS,WAC1GvJ,EAAKI,cAAc2J,sBAAsBoD,EAAuB,kBAAmB,CAAC/D,UAAW,EAAGG,QAAS,WAC3GvJ,EAAKI,cAAc2J,sBAAsBoD,EAAuB,mBAAoB,CAAC/D,UAAW,EAAGG,QAAS,WAC5GvJ,EAAKI,cAAc2J,sBAAsBoD,EAAuB,mBAAoB,CAAC/D,UAAW,EAAGG,QAAS,aAjDjG,WAAA2E,EAAAQ,EAAA/M,KAAAwM,EAAAjO,OAAAiL,EAAA,EAAAjL,CAAAgO,EAAA,GAmCX7J,EAnCW8J,EAAA,GAoCXlC,EApCWkC,EAAA,GAqCXC,EArCWD,EAAA,GAsCXE,EAtCWF,EAAA,GAuCXG,EAvCWH,EAAA,GAwCXI,EAxCWJ,EAAA,GAyCXK,EAzCWL,EAAA,GAoDRlC,EApDQ,CAAAyC,EAAAtN,KAAA,gBAAAsN,EAAAlN,OAAA,UAqDJ,GArDI,eAwDbyK,EAAUgD,UACVb,EAAea,UACfZ,EAAqBY,UACrBX,EAAsBW,UACtBV,EAAuBU,UACvBT,EAAuBS,UA7DVP,EAAAtN,KAAA,GA+DPpB,EAAKI,cAAc8O,aAAajD,EAAhC,eAAAkD,EAAAjP,OAAAM,EAAA,EAAAN,CAAAO,EAAAC,EAAAC,KAA2C,SAAAyO,EAAOT,EAAEV,GAAT,IAAA9I,EAAAkK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/J,EAAAF,EAAAF,EAAAC,EAAAE,EAAA,OAAA5F,EAAAC,EAAAO,KAAA,SAAAqP,GAAA,cAAAA,EAAAnP,KAAAmP,EAAAlP,MAAA,cACzC+D,EAAapC,SAAS4L,EAAE4B,IACxBlB,EAAef,EAAsBL,GACrCqB,EAAgBf,EAAuBM,KAAM,SAAAxD,GAAC,OAAKtI,SAASsI,EAAEE,aAAagF,MAAQpL,IACnFoK,EAAgBf,EAAuBK,KAAM,SAAAxD,GAAC,OAAKtI,SAASsI,EAAEE,aAAagF,MAAQpL,IACnFqK,EAAcnB,EAAqBQ,KAAM,SAAAxD,GAAC,OAAKtI,SAASsI,EAAEE,aAAagF,MAAQpL,IAGrFwJ,EAAE6B,OAAS,GARoCF,EAAAlP,KAAA,EAWhBpB,EAAKD,MAAM6G,KAAK8C,IAAI+G,SAASpB,EAAa/F,aAX1B,UAWzCmG,EAXyCa,EAAA3O,KAYzC+N,EAAe,CACnBd,MAAO,UACPtF,YAAa+F,EAAa/F,YAC1BoH,SAAUjB,EAAiBkB,UAC3BC,WAAYnB,EAAiBkB,UAC7BE,SAAUxB,EAAayB,iBAEzBnC,EAAE6B,OAAO1G,KAAK4F,GAGRC,EAAc,CAClBe,SAAU,KACVG,SAAU,KACVjC,MAAO,SACPtF,YAAa+F,EAAa/F,YAC1BsH,WAAYlB,EAAakB,YAE3BjC,EAAE6B,OAAO1G,KAAK6F,IAGVL,EAhC2C,CAAAgB,EAAAlP,KAAA,gBAAAkP,EAAAlP,KAAA,GAiCbpB,EAAKD,MAAM6G,KAAK8C,IAAI+G,SAASnB,EAAchG,aAjC9B,QAiCvCsG,EAjCuCU,EAAA3O,KAkCvCkO,EAAgB,CACpBa,SAAU,KACV9B,MAAO,WACPtF,YAAagG,EAAchG,YAC3BsH,WAAYhB,EAAkBe,UAC9BE,SAAUvB,EAAcwB,iBAG1BnC,EAAE6B,OAAO7B,EAAE6B,OAAOlO,OAAO,GAAGoO,SAAWd,EAAkBe,UACzDhC,EAAE6B,OAAO1G,KAAK+F,GA3C+BS,EAAAlP,KAAA,qBA8CzCoO,EA9CyC,CAAAc,EAAAlP,KAAA,gBAAAkP,EAAAlP,KAAA,GA+CbpB,EAAKD,MAAM6G,KAAK8C,IAAI+G,SAASjB,EAAYlG,aA/C5B,QA+CrCwG,EA/CqCQ,EAAA3O,KAgDrCoO,EAAiB,CACrBW,SAAU,KACVG,SAAU,KACVjC,MAAO,YACPtF,YAAakG,EAAYlG,YACzBsH,WAAYd,EAAgBa,WAGxBX,EAAc,CAClBU,SAAU,KACV9B,MAAO,SACPtF,YAAakG,EAAYlG,YACzBuH,SAAUrB,EAAYsB,gBACtBF,WAAYd,EAAgBa,WAI9BhC,EAAE6B,OAAO7B,EAAE6B,OAAOlO,OAAO,GAAGoO,SAAWZ,EAAgBa,UAEvDhC,EAAE6B,OAAO1G,KAAKiG,GAEdpB,EAAE6B,OAAO1G,KAAKkG,GArE6B,YAyEzCT,EAzEyC,CAAAe,EAAAlP,KAAA,gBAAAkP,EAAAlP,KAAA,GA0EXpB,EAAKD,MAAM6G,KAAK8C,IAAI+G,SAASlB,EAAcjG,aA1EhC,QA0ErC2G,EA1EqCK,EAAA3O,KA2ErCuO,EAAgB,CACpBQ,SAAU,KACV9B,MAAO,WACPtF,YAAaiG,EAAcjG,YAC3BsH,WAAYX,EAAkBU,UAC9BE,SAAUtB,EAAcuB,iBAG1BnC,EAAE6B,OAAO7B,EAAE6B,OAAOlO,OAAO,GAAGoO,SAAWT,EAAkBU,UACzDhC,EAAE6B,OAAO1G,KAAKoG,GApF6B,WAyF/CvB,EAAEC,MAAQjB,EAAuBS,EAAeH,IAC7BU,EAAE6B,OAAO3B,KAAM,SAAAkC,GAAC,OAAKA,EAAEnC,QAAUD,EAAEC,QA1FP,CAAA0B,EAAAlP,KAAA,gBAAAkP,EAAAlP,KAAA,GA4FlBpB,EAAKD,MAAM6G,KAAK8C,IAAI+G,SAAS9B,EAAEqC,UA5Fb,QA4FvCb,EA5FuCG,EAAA3O,KA6FvCyO,EAAW,CACfxB,MAAOD,EAAEC,MACT8B,SAAU,KACVG,SAAU,KACVvH,YAAaqF,EAAEqC,SACfJ,WAAYT,EAAaQ,WAG3BhC,EAAE6B,OAAO7B,EAAE6B,OAAOlO,OAAO,GAAGoO,SAAWP,EAAaQ,UACpDhC,EAAE6B,OAAO1G,KAAKsG,GAtG+B,QAyG/CzB,EAAEtK,MAAQA,EAAM6H,OAAQ,SAAAC,GAAC,OAAKpJ,SAASoJ,EAAEhH,cAAcA,IAzGRkL,EA2GiBhB,EAAa9D,aAArEjF,EA3GuC+J,EA2GvC/J,YAAaF,EA3G0BiK,EA2G1BjK,WAAYF,EA3GcmK,EA2GdnK,QAASC,EA3GKkK,EA2GLlK,OAAQE,EA3GHgK,EA2GGhK,UAClDsI,EAAEgC,UAAYlB,EAAmBA,EAAiBkB,UAAY,KAI9DhC,EAAEsC,MAAQ3K,EAAY4K,MAAM,iBAAY,GAAGC,QAAQ,KAAK,KAAO,WAC/DxC,EAAErI,YAAcA,EAAY4K,MAAM,cAClCvC,EAAErI,YAAY8K,QACdzC,EAAErI,YAAcqI,EAAErI,YAAY+K,KAAK,MASnCpF,EAAUgC,GAAK,CACbqD,IAAI3C,EAAE2C,IACNC,QAAQ,CACNpL,SACAD,UACAG,YACAD,cAEFmK,GAAGpL,EACH8L,MAAMtC,EAAEsC,MACRrC,MAAMD,EAAEC,MACRvK,MAAMsK,EAAEtK,MACRmM,OAAO7B,EAAE6B,OACTgB,SAAS7C,EAAE6C,SACXR,SAASrC,EAAEqC,SACXS,SAAS9C,EAAE8C,SACXC,SAAS/C,EAAE+C,SACXC,SAAShD,EAAEgD,SACXhB,UAAUhC,EAAEgC,UACZiB,WAAWjD,EAAEiD,WACbtL,YAAYqI,EAAErI,YACduL,aAAalD,EAAEkD,cAjJ8B,yBAAAvB,EAAAxO,SAAAsN,EAAAnP,SAA3C,gBAAA6R,EAAAC,GAAA,OAAA5C,EAAA3J,MAAAvF,KAAAmC,YAAA,IA/DO,eAoNbpC,EAAKI,cAAcyB,8BAA8BhB,EAAcoL,GAI3DyB,IACFzB,EAAYA,EAAUC,OAAQ,SAAAyC,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMvC,gBAAkBqB,EAAgBrB,iBAGvFoB,IACFxB,EAAYA,EAAUC,OAAQ,SAAAyC,GAAC,OAAKA,EAAEtK,MAAMwK,KAAM,SAAA1C,GAAC,OAAKA,EAAEC,OAASD,EAAEC,MAAMC,gBAAkBoB,EAASpB,mBA7N3FqC,EAAAlN,OAAA,SAgONyK,GAhOM,yBAAAyC,EAAA5M,SAAA0L,EAAAvN,SAvXbA,KAAKI,SAASN,kHCTZiS,mLACK,IAAAhS,EAAAC,KAEDgS,IAAmBhS,KAAKF,MAAMkS,eAEpC,OACEC,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACEC,MAAO,EACP9B,GAAI,aACJ+B,WAAY,UAGVrS,KAAKF,MAAMwS,aACVL,EAAAxR,EAAAyR,cAACK,EAAA,EAAD,CACEC,YAAa,CACXC,OAAO,EACPL,MAAM,OACNM,OAAO,QAETC,SAAU,QACVC,SAAU,YACVN,YAAatS,KAAKF,MAAMwS,cAI3BtS,KAAKF,MAAM+S,MAAQ7S,KAAKF,MAAM+S,KAAKxQ,OAAO,GACzC4P,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACEW,GAAI,CAAC,EAAE,GACPC,SAAU,CAAC,EAAE,GACbC,WAAY,EACZC,MAAO,WACPC,WAAY,YACZC,QAASnT,KAAKF,MAAMwS,aAEpBtS,KAAKF,MAAM+S,QAIZ7S,KAAKF,MAAMsT,UAAYpB,IAAmBhS,KAAKF,MAAMuT,MAAQrT,KAAKF,MAAMuT,KAAKhR,OAAO,GACpFrC,KAAKF,MAAMuT,KAAKjG,IAAI,SAACiG,EAAK1H,GACxB,IAAM2H,EAAOvT,EAAKD,MAAMyT,UAAYxT,EAAKD,MAAMyT,SAAS5H,IAAkB,KACpE6H,EAAYF,EAAOG,IAAOC,IAChC,OACEzB,EAAAxR,EAAAyR,cAACsB,EAAD,CACEG,GAAI,CAAC,EAAE,GACPb,GAAI,CAAC,EAAE,GACPE,WAAY,EACZD,SAAU,CAAC,EAAE,GACbG,WAAY,YACZU,MAAS7T,EAAKD,MAAMsT,SAMhB,KAN2B,CAC7BS,SAAS,MACTC,SAAU,SACVC,WAAY,SACZC,aAAc,WACdC,WAAU,aAAA1R,OAAexC,EAAKD,MAAMoU,MAAMC,OAAOC,UAEnDC,IAAG,mBAAA9R,OAAqBoJ,GACxBsH,MAAOK,EAAO,WAAa,YAC3BH,QAASG,EAAO,SAAAlI,GAAC,OAAIrL,EAAKD,MAAMwU,YAAYhB,IAAQ,MAEnDD,aA5DMG,aAsEVzB,mHCtETwC,mLAEF,IAAM/B,EAAcvS,OAAOuU,OAAO,CAChC9F,EAAE,EACF+D,OAAO,EACPL,MAAM,OACNM,OAAO,OACP+B,aAAa,MACbC,UAAU,eACVC,SAAS3U,KAAKF,MAAM6U,UACpB3U,KAAKF,MAAM0S,aAIb,OAFAA,EAAYoC,SAAWpC,EAAYJ,MAGhCyC,EAAApU,EAAAyR,cAAC4C,EAAA,EAAD,CACEtC,YAAaA,EACbF,YAAatS,KAAKF,MAAMwS,aAExBuC,EAAApU,EAAAyR,cAAC6C,EAAA,EAAD,CACE9B,MAAO,YACP+B,KAAMhV,KAAKF,MAAM8S,SACjBqC,KAAOjV,KAAKF,MAAM6S,SAAW3S,KAAKF,MAAM6S,SAAW,kBAtBhCa,aA6Bfe,iJC5BTW,6MAGJ/U,cAAgB,gFAGVH,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,4JAK9CE,KAAKmV,iMAGkBC,EAAUC,mEACjCrV,KAAKmV,kJAIL,OACEG,EAAA7U,EAAAyR,cAACqD,EAAA,EAAD,CACEC,UAAW,CACT9G,EAAE,EACF+G,UAAUzV,KAAKF,MAAM2V,UAAYzV,KAAKF,MAAM2V,UAAY,CAAC,QAAQ,WAGnEH,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACEtD,MAAO,EACPC,WAAY,aACZsD,cAAe,SACfC,eAAgB,cAEhBN,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACErD,WAAY,aACZoD,UAAYzV,KAAKF,MAAM+V,eAAiB7V,KAAKF,MAAM+V,eAAiB,CAAC,OAAO,SAE5EP,EAAA7U,EAAAyR,cAACwD,EAAA,EAAQI,GAAT,CACEC,GAAI,CAAC,EAAE,GACP/C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbiD,UAAW,OACX/C,MAAO,YACPgD,WAAY,WAEXjW,KAAKF,MAAMkR,QAIe,qBAArBhR,KAAKF,MAAMoW,OAA8C,OAArBlW,KAAKF,MAAMoW,OAAkBlW,KAAKF,MAAMoW,MAAMC,WAAW9T,OAAO,GAC1GiT,EAAA7U,EAAAyR,cAACwD,EAAA,EAADzV,OAAAuU,OAAA,CACEyB,WAAY,EACZlD,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,GACfC,MAAO,aACHjT,KAAKF,MAAMsW,YAEdpW,KAAKF,MAAMoW,OAIhBlW,KAAKF,MAAMuW,SACTrW,KAAKF,MAAMuW,SACX,KAG2B,qBAArBrW,KAAKF,MAAMwW,OAA8C,OAArBtW,KAAKF,MAAMwW,OAAkBtW,KAAKF,MAAMwW,MAAMH,WAAW9T,OAAO,GAC1GiT,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACEa,GAAI,CAAC,EAAE,GACPlE,WAAY,SACZsD,cAAe,OAEfL,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACE3C,SAAU,EACVC,WAAY,EACZC,MAAO,UAENjT,KAAKF,MAAMwW,OAGXtW,KAAKF,MAAM0W,cAAgBxW,KAAKF,MAAM0W,aAAanU,OAAO,GACzDiT,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACEe,UAAW,MACXC,QAAS1W,KAAKF,MAAM0W,cAEpBlB,EAAA7U,EAAAyR,cAACwD,EAAA,EAAD,CACE5C,GAAI,EACJkC,KAAM,OACNC,KAAM,MACNhC,MAAO,yBA3FPO,aAyGT0B,kHC1GTyB,mLAEF,IAAMnB,EAAYvV,OAAOuU,OAAO,CAC9BoC,GAAG,EACHxE,MAAM,OACNyE,GAAG,CAAC,OAAO,IACX7W,KAAKF,MAAM0V,WAEb,OACGvD,EAAAxR,EAAAyR,cAAC4E,EAAA,EAAD,CACEtB,UAAWA,EACXuB,eAAe,EACfC,SAAUhX,KAAKF,MAAMkX,SACrB1E,YAAatS,KAAKF,MAAMwS,aAExBL,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACE8E,GAAI,EACJ5E,WAAY,SACZsD,cAAe,MACfC,eAAgB,UAGf5V,KAAKF,MAAMoX,YACTjF,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACEgF,MAAO,SACPnC,KAAMhV,KAAKF,MAAMsX,KACjBnC,KAAOjV,KAAKF,MAAMsT,SAAW,QAAU,QACvCH,MAAQjT,KAAKF,MAAMuX,UAAYrX,KAAKF,MAAMuX,UAAY,WAGzDpF,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACEmF,GAAI,EACJ5I,EAAG,CAAC,MAAM,OACV+F,aAAc,MACdpC,WAAY,SACZuD,eAAgB,SAChB2B,gBAAkBvX,KAAKF,MAAM0X,YAAcxX,KAAKF,MAAM0X,YAAcxX,KAAKF,MAAMoU,MAAMC,OAAOsD,aAAaC,SAASC,QAElH1F,EAAAxR,EAAAyR,cAACC,EAAA,EAAD,CACEgF,MAAO,SACPnC,KAAMhV,KAAKF,MAAMsX,KACjBnC,KAAOjV,KAAKF,MAAMsT,SAAW,QAAU,QACvCH,MAAQjT,KAAKF,MAAMuX,UAAYrX,KAAKF,MAAMuX,UAAY,YAK5DpF,EAAAxR,EAAAyR,cAACC,EAAA,EAADlS,OAAAuU,OAAA,CACExB,WAAY,EACZD,SAAU,CAAC,EAAE,IACT/S,KAAKF,MAAM8X,WAEd5X,KAAKF,MAAM+S,eApDIW,aA4DdmD,2JC1DTkB,6MACJlJ,MAAQ,CACNmJ,gBAAe,KAIjB3X,cAAgB,gFAGVH,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,iDAI9BgY,GAChB9X,KAAK+X,SAAS,CACZD,wKAKF9X,KAAKmV,iMAGkBC,EAAWC,mEAClCrV,KAAKmV,kJAGE,IAAA6C,EAAAhY,KACP,IAAKA,KAAKF,MAAMmY,KAAK5V,OACnB,OAAO,KAGT,IAAM6V,EAAelY,KAAKF,MAAMmY,KAAKhM,OAAO,SAAAkM,GAC1C,IAAMC,OAAiC9V,IAApB6V,EAASE,QAAwBF,EAASE,OAC7D,OAAQL,EAAKlY,MAAMsT,UAAYgF,IAGjC,IAAKF,EAAa7V,OAChB,OAAO,KAGT,IAAMiW,EAAuC,SAAzBtY,KAAKF,MAAMyY,UACzBC,EAAkBxY,KAAKG,cAAcqB,gBAAgB,CAAC,QAAQ,oBAEpE,OACEiX,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEhK,EAAG,EACHiH,cAAe,CAAC,MAAM,YAGnB3V,KAAKF,MAAMsT,UACVqF,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEhK,EAAG,EACHqH,GAAI,EACJJ,cAAe,MACftD,WAAY,SACZuD,eAAgB,UAEhB6C,EAAAhY,EAAAyR,cAACyG,EAAA,EAAD,CAAY9R,GAAG,KACb4R,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEE,SAAU,WACVlG,OAAQ,CAAC,OAAO,QAChBmG,IAAOP,EAA2C,wBAA7B,+BAM7BJ,EAAa9K,IAAI,SAAC+K,EAASW,GACzB,IACMC,EADiBZ,EAASa,eACOC,IAAUC,IAC3CC,EAAgBb,GAAeH,EAASiB,kBAAoBjB,EAASiB,kBAAoBjB,EAASkB,cACxG,OACEZ,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEzB,GAAI,CAAC,EAAE,GACP5C,IAAG,QAAA9R,OAAUuW,GACb1G,MAAO,CAAC,EAAE8F,EAAa7V,OAAO,SAE9BoW,EAAAhY,EAAAyR,cAAC6G,EAAD,CACElS,GAAIsR,EAASmB,MACbC,KAAMpB,EAASmB,MACf1F,MAAO,CAAC4F,eAAe,SAEvBf,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACE9B,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACPpC,aAAc,CAAC,EAAE,GACjBkB,cAAe,MACftD,WAAY,SACZI,OAAQ0F,EAASsB,SAAW,EAAI,KAChClC,gBAAkBY,EAASsB,SAAW,YAAc,eAEpDhB,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEtG,MAAO,EACPC,WAAY,SACZsD,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAEzBuC,EAASuB,OACRjB,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEpB,GAAI,CAAC,EAAE,GACPxE,GAAI,CAAC,EAAE,GACPiD,GAAI,CAAC,EAAE,GACPoB,MAAO,SACPzE,OAAQ,CAAC,QAAQ,SACjBmG,IAAMV,EAASsB,SAAWtB,EAASuB,MAAQP,IAG9ChB,EAASf,MACRqB,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEpB,GAAI,CAAC,EAAE,GACPxE,GAAI,CAAC,EAAE,GACPiD,GAAI,CAAC,EAAE,GACPoB,MAAO,SACPnC,KAAMmD,EAASf,KACfnC,KAAO+C,EAAKlY,MAAMsT,SAAW,QAAU,QACvCH,MAAQkF,EAASsB,SAAWtB,EAASwB,QAAU,cAGnDlB,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACE1F,WAAY,EACZC,MAAO,YACP+C,UAAW,SACXjD,SAAU,CAAC,OAAO,GAClBa,MAAO,CACLG,WAAW,WAGZoE,EAAS7B,aAUxBkC,IAAoBxY,KAAKF,MAAMsT,UAC7BqF,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEzB,GAAI,CAAC,EAAE,GACP7E,MAAO,CAAC,EAAE8F,EAAa7V,OAAO,SAE9BoW,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACE9E,MAAO,CAAC4F,eAAe,QACvBrG,QAAU,SAAA/H,GAAC,OAAI4M,EAAKlY,MAAM8Z,aAAsC,UAAzB5B,EAAKlY,MAAMyY,UAAwB,OAAS,WAEnFE,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACE9B,GAAI,CAAC,EAAE,GACPC,GAAI,CAAC,EAAE,GACPpC,aAAc,CAAC,EAAE,GACjBkB,cAAe,MACftD,WAAY,SACZkF,gBAAiB,eAEjBkB,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEtG,MAAO,EACPC,WAAY,SACZsD,cAAe,CAAC,SAAS,OACzBC,eAAgB,CAAC,SAAS,eAGC,UAAzB5V,KAAKF,MAAMyY,UACTE,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEpB,GAAI,CAAC,EAAE,GACPxE,GAAI,CAAC,EAAE,GACPiD,GAAI,CAAC,EAAE,GACP3D,MAAO,QACPM,OAAQ,QACRsC,KAAM,UACNmC,MAAO,SACP0B,IAAK,+BAGPJ,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACEpB,GAAI,CAAC,EAAE,GACPxE,GAAI,CAAC,EAAE,GACPiD,GAAI,CAAC,EAAE,GACPd,KAAM,QACND,KAAM,UACNmC,MAAO,SACPlE,MAAO,cAIbwF,EAAAhY,EAAAyR,cAACwG,EAAA,EAAD,CACE1F,WAAY,EACZC,MAAO,YACP+C,UAAW,SACXjD,SAAU,CAAC,OAAO,GAClBa,MAAO,CACLG,WAAW,WAGa,UAAzB/T,KAAKF,MAAMyY,UAAwB,qBAAuB,6BArMrD/E,aAuQbqE,0JCvQTgC,6MAGJ1Z,cAAgB,gFAGVH,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,4JAK9CE,KAAKmV,iMAGkBC,EAAUC,mEACjCrV,KAAKmV,kJAIL,OACEG,EAAA7U,EAAAyR,cAAC4H,EAAA,EAAD,CACEtE,UAAW,CACT9G,EAAE,EACF6H,GAAG,IAGLjB,EAAA7U,EAAAyR,cAAC6H,EAAA,EAAD,CACE1H,WAAY,SACZsD,cAAe,UAEfL,EAAA7U,EAAAyR,cAAC6H,EAAA,EAAD,CACE9E,KAAM,QACND,KAAM,QACN/B,MAAO,aAETqC,EAAA7U,EAAAyR,cAAC6H,EAAA,EAAD,CACExD,GAAI,EACJxD,SAAU,EACVE,MAAO,WACP+C,UAAW,UAJb,uDAQAV,EAAA7U,EAAAyR,cAAC8H,EAAA,EAAD,CACExH,YAAa,CACX+D,GAAG,EACHnE,MAAM,CAAC,EAAE,KAEXE,YAAatS,KAAKF,MAAMma,2BAL1B,oBA9CezG,aA6DVqG,0JC7DTK,cAcJ,SAAAA,EAAYpa,GAAO,IAAAC,EAAA,OAAAE,OAAAka,EAAA,EAAAla,CAAAD,KAAAka,IACjBna,EAAAE,OAAAma,EAAA,EAAAna,CAAAD,KAAAC,OAAAoa,EAAA,EAAApa,CAAAia,GAAAI,KAAAta,KAAMF,KAbR6O,MAAQ,GAYW5O,EATnBI,cAAgB,KASGJ,EAKnBwa,mBALmBta,OAAAua,EAAA,EAAAva,CAAAwa,EAAAha,EAAAC,KAKE,SAAAC,IAAA,OAAA8Z,EAAAha,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnBpB,EAAKoV,YADc,wBAAAlU,EAAAY,SAAAlB,EAAAX,SALFD,EASnB2a,WATmBza,OAAAua,EAAA,EAAAva,CAAAwa,EAAAha,EAAAC,KASN,SAAAqB,IAAA,OAAA0Y,EAAAha,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACXpB,EAAKD,MAAM4a,aADA,wBAAAtY,EAAAP,SAAAE,EAAA/B,SAPXD,EAAKoV,YAFYpV,2EAPbC,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,yDAmB9C,OACEwV,EAAA7U,EAAAyR,cAACyI,EAAA,EAAD,CACEC,OAAQ5a,KAAKF,MAAM8a,QAEnBtF,EAAA7U,EAAAyR,cAAC2I,EAAA,EAAD,CACEhH,SAAU,CAAC,QAAQ,SACnBiH,UAAW9a,KAAKF,MAAM4a,YAEtBpF,EAAA7U,EAAAyR,cAAC2I,EAAA,EAAUE,OAAX,CACEC,GAAI,EACJhK,MAAOhR,KAAKF,MAAMkR,QAGpBsE,EAAA7U,EAAAyR,cAAC2I,EAAA,EAAUI,KAAX,KACE3F,EAAA7U,EAAAyR,cAACyI,EAAA,EAAD,CACEvI,MAAO,EACPuD,cAAe,UAEfL,EAAA7U,EAAAyR,cAACyI,EAAA,EAAD,CACE5H,SAAU,EACViD,UAAW,OACX/C,MAAO,YACPiI,wBAAyB,CAAEC,OAAQnb,KAAKF,MAAMsb,YAIlD9F,EAAA7U,EAAAyR,cAACyI,EAAA,EAAD,CACE1D,GAAI,EACJ5E,WAAY,SACZsD,cAAe,SACfC,eAAgB,UAEhBN,EAAA7U,EAAAyR,cAACmJ,EAAA,EAAD,CACE/I,YAAatS,KAAK0a,WAClBlI,YAAa,CACXJ,MAAM,CAAC,OAAO,SAHlB,qBA7DakJ,IAAM9H,WA6ElB0G,6OCkQAqB,6MA5Ub5M,MAAQ,CACN6M,WAAU,EACVC,cAAc,GACdC,eAAc,EACdC,oBAAoB,EACpBC,kBAAkB,KAClBC,wBAAuB,KAIzB1b,cAAgB,OAChB2b,eAAiB,gFAGX9b,KAAK8b,eACP9b,KAAK8b,eAAe1b,SAASJ,KAAKF,OAElCE,KAAK8b,eAAiB,IAAIjc,IAAeG,KAAKF,OAEhDE,KAAKG,cAAgBH,KAAK8b,eAAe3b,mKAIzCH,KAAKmV,YACLnV,KAAK+b,yMAGkB3G,EAAUC,kFACjCrV,KAAKmV,YAEqBC,EAAU4G,aAAehc,KAAKF,MAAMkc,YACrChc,KAAKF,MAAMkc,aAAehc,KAAK2O,MAAMkN,yBAA2B7b,KAAK2O,MAAM+M,eAAiB1b,KAAK2O,MAAM6M,WAC9Hxb,KAAK+X,SAAS,CACZyD,WAAU,IAIWnG,EAAUmG,YAAcxb,KAAK2O,MAAM6M,WACpCxb,KAAK2O,MAAM6M,WAAaxb,KAAK2O,MAAM8M,cAAcpZ,OAAO,IAG9ErC,KAAKG,cAAc8b,yBAAyB,CAC1CC,cAAe,gBACfC,YAAa,WACbC,WAAY,KAGdpc,KAAKqc,2BAGDC,EAAuBC,KAAKC,UAAUnH,EAAUoG,iBAAmBc,KAAKC,UAAUxc,KAAK2O,MAAM8M,gBAClEpG,EAAUuG,oBAAsB5b,KAAK2O,MAAMiN,mBAC5CU,KACxBX,EAAsB3b,KAAK2O,MAAMiN,kBAAoB5b,KAAK2O,MAAM8M,cAAcxP,OAAQ,SAAA8C,GAAC,OAAIA,EAAE2B,UAAUsH,EAAKrJ,MAAMiN,oBAAoBvZ,OAAUrC,KAAK2O,MAAM8M,cAAcpZ,OAC/KrC,KAAK+X,SAAS,CACZ4D,gLAMJ,IAAMC,EAAoBa,KAAKC,MAGzBC,EAAsB3c,KAAKG,cAAcyc,cAAc,uBAAsB,EAAK,IACxFD,EAAoBf,kBAAoBA,EACxC5b,KAAKG,cAAc0c,gBAAgB,sBAAsBF,GAAoB,GAE7E3c,KAAK+X,SAAS,CACZ6D,sNAOIe,EAAsB3c,KAAKG,cAAcyc,cAAc,uBAAsB,EAAK,IAClFhB,EAAoBe,EAAoBf,mBAAqB,cAOzD7R,QAAQC,IAAI,CACpBhK,KAAKG,cAAc2c,sBAAqB,GACxC9c,KAAK8b,eAAexO,aAAa,KAAK,UACtCtN,KAAKG,cAAc4c,mBAAmB/c,KAAKF,MAAMkC,QAAQ,iDANzDgb,OACAC,OACAC,OAOIC,EAAWV,KAAKC,MAGhBU,EAA0Bpd,KAAKG,cAAcqB,gBAAgB,CAAC,UAAU,YAAY,WAAW,OAAO,cACxGia,EAAgBzb,KAAKG,cAAcqB,gBAAgB,CAAC,kBAAkByK,OAAQ,SAAA8C,GAAC,OAAKA,EAAEsO,SAAWtO,EAAEuO,OAAOH,GAAYpO,EAAEwO,IAAIJ,IAEhIH,EAAwB7R,QAAS,SAAAuD,GAC7B,IAAMmE,EAAOnE,EAAE8O,IAAIC,QAAQC,KAAKxM,QAAQ,QAAQ,IAEhDuK,EAAc5R,KAAK,CACjBgJ,OACA6G,MAAM,uBACN1I,MAAM,oBACNN,UAA8B,IAApBhC,EAAE8O,IAAIC,QAAQH,MACxBhK,KAAK8J,EAAwB1O,EAAEiP,eAC/BC,KAAKC,EAAK1d,cAAc2d,YAAgC,IAApBpP,EAAE8O,IAAIC,QAAQH,OAAYS,MAAMC,OAAO,8BAK3EC,EAAwBje,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,cAAc,cAC7Fyb,EAAoB9R,QAAS,SAAAuD,GAC3B+M,EAAc5R,KACZ,CACEgJ,KAAKnE,EAAEsC,MACPkN,UAAU,CACRjL,MAAM,WAERmE,KAAK,mBACL1G,UAAsB,IAAZhC,EAAEgC,UACZM,MAAM,sBACNmN,KAAKF,EAAsBvP,EAAE4B,GAC7BsN,KAAKC,EAAK1d,cAAc2d,YAAwB,IAAZpP,EAAEgC,WAAgBqN,MAAMC,OAAO,8BAMnEI,EAAqBpe,KAAKG,cAAcqB,gBAAgB,CAAC,QAAQ,iBACjE6c,EAAsBre,KAAKG,cAAcqB,gBAAgB,CAAC,YAAY,cAAhD,UAAAe,OAAwE6b,EAAmB9E,MAA3F,KAC5BrZ,OAAOuL,KAAK0R,GAAiB/R,QAAS,SAAAmT,GACpC,IAAMC,EAAYrB,EAAgBoB,GAC5B5N,EAA8C,IAAlC6N,EAAUC,cAAcC,UACpC5L,EAAI,iBAAAtQ,OAAoBgc,EAAUG,aAAa7S,QAAQ,GAAnD,KAAAtJ,OAAyD+b,GACnE7C,EAAc5R,KAAK,CACjBgJ,OACAnC,YACA0G,KAAK,UACLpG,MAAM,yBACNmN,KAAKE,EAAoBC,EACzBJ,UAAU,CACRjL,MAAM4K,EAAK/d,MAAMoU,MAAMC,OAAOsD,aAAakH,OAAOC,WAEpDhB,KAAKC,EAAK1d,cAAc2d,YAAYpN,GAAWqN,MAAMC,OAAO,8BAIhEvC,EAAgBA,EAAchQ,KAAK,SAAChL,EAAEiL,GAAH,OAAUjL,EAAEiQ,UAAYhF,EAAEgF,UAAY,GAAK,IAE9E1Q,KAAK+X,SAAS,CACZ0D,gBACAG,kKAIaF,GACf1b,KAAK+X,SAAS,CACZ2D,oEAIsBG,GACxB7b,KAAK+X,SAAS,CACZ8D,+DAKF7b,KAAK+X,SAAS,SAAC1C,GAAD,MAAgB,CAC5BmG,WAAWnG,EAAUmG,sDAIRqD,GAQf,OANA7e,KAAKG,cAAc8b,yBAAyB,CAC1CC,cAAe,gBACfC,YAAa,oBACbC,WAAYyC,EAAavL,MAAQuL,EAAaV,OAG5CU,EAAavL,KACRtT,KAAKG,cAAc2e,WAAWD,EAAavL,QACzCuL,EAAaV,OACfY,OAAOC,SAASb,KAAOU,EAAaV,uCAMtC,IAAAc,EAAAjf,KACDkf,EAAyBlf,KAAK2O,MAAMgN,oBAAoB,EACxDtE,EAAY6H,EAAyB,UAAY,WACvD,OACEC,EAAA1e,EAAAyR,cAACkN,EAAA,EAADnf,OAAAuU,OAAA,CACE6K,OAAQ,IACRzG,SAAU,YACN5Y,KAAKF,MAAMwf,WAEfH,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPwG,SAAU,WACV2G,WAAY,SAACnU,GAAD,OAAO6T,EAAKO,kBAAiB,IACzCC,YAAa,SAACrU,GAAD,OAAO6T,EAAKO,kBAAiB,KAE1CL,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnK,KAAM,QACNhC,MAAOoE,EACPrC,KAAM,gBACN7B,QAASnT,KAAK0f,UAAUC,KAAK3f,MAC7B4f,UAAW,CAACC,IAAOC,KAAMZ,EAAyBW,IAAOE,KAAO,KAAO/f,KAAK2O,MAAM6M,WAAaxb,KAAK2O,MAAM8M,cAAcpZ,OAAO,EAAIwd,IAAOG,OAAS,QAGnJd,GACEC,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEQ,UAAWC,IAAOI,SAEjBjgB,KAAK2O,MAAM8M,cAAcpZ,SAKhCrC,KAAK2O,MAAM6M,WACT2D,EAAA1e,EAAAyR,cAACgO,EAAA,EAAD,CACE1K,UAAW,CACT5B,MAAM,CACJuM,MAAM,EACNC,UAAU,OACVtM,SAAS,SACT8E,SAAS,WACTyH,IAAIrgB,KAAKF,MAAMsT,SAAW,QAAU,OAEtCwB,SAAS,CAAC,OAAO,QACjB2K,WAAW,SAACnU,GAAD,OAAO6T,EAAKqB,2BAA0B,IACjDb,YAAY,SAACrU,GAAD,OAAO6T,EAAKqB,2BAA0B,MAGpDnB,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPuD,cAAe,UAGf3V,KAAK2O,MAAM8M,cAAcpZ,OAAO,EAC9BrC,KAAK2O,MAAM8M,cAAcrO,IAAK,SAAC2B,EAAEpD,GAAH,OAC5BwT,EAAA1e,EAAAyR,cAAC+G,EAAA,EAAD,CACErF,MAAO,CACL4F,eAAe,QAEjBnF,IAAG,gBAAA9R,OAAkBoJ,GACrBwH,QAAU,SAAA/H,GAAC,OAAI6T,EAAKsB,iBAAiBxR,KAErCoQ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACExI,GAAI,EACJC,GAAI,EACJlB,cAAe,MACfiK,UAAW,CAACC,IAAOhB,aAAsC,SAAzBI,EAAKnf,MAAMyY,UAAuBsH,IAAOW,KAAO,MAChFC,aAAc9U,EAAMsT,EAAKtQ,MAAM8M,cAAcpZ,OAAO,EAAtC,aAAAE,OAAuD0c,EAAKnf,MAAMoU,MAAMC,OAAOC,SAAY,MAEzG+K,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACExK,SAAU,MACVvC,WAAY,SACZuD,eAAgB,UAGd7G,EAAEqI,KACA+H,EAAA1e,EAAAyR,cAACkN,EAAA,EAADnf,OAAAuU,OAAA,CACEQ,KAAMjG,EAAEqI,KACRnC,KAAM,QACNhC,MAAO,aACHlE,EAAEmP,YAENnP,EAAE2K,OACJyF,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEvG,IAAK9J,EAAE2K,MACPtH,MAAO,QACPM,OAAQ,WAKhByM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,EACJgB,SAAU,SACV6B,cAAe,UAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErM,SAAU,EACVkD,WAAY,IACZhD,MAAO,WAENlE,EAAEiC,OAELmO,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErM,SAAU,EACVkD,WAAY,IACZhD,MAAO,YACPW,MAAO,CACLE,SAAS,SACTC,WAAW,SACXC,aAAa,aAGdjF,EAAE8D,MAELsM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErM,SAAU,EACVkD,WAAY,IACZhD,MAAO,YAENlE,EAAE6O,WAObuB,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACExI,GAAI,EACJZ,UAAW,UAFb,yCA9TUxC,qECoQbkN,6MAhQb/R,MAAQ,CACNgS,QAAQ,EACRC,SAAU,QAGZC,kCAAe,SAAAlgB,IAAA,IAAAigB,EAAA,OAAAE,EAAArgB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAERpB,EAAKD,MAAMihB,qBAAwBhhB,EAAKD,MAAMkhB,sBAAyBjhB,EAAKD,MAAMkC,SAAmC,OAAxBjC,EAAK4O,MAAMiS,SAFhG,CAAA3f,EAAAE,KAAA,eAAAF,EAAAM,OAAA,UAGJ,GAHI,OAMPqf,EAAW,GACC3gB,OAAOuL,KAAKzL,EAAKD,MAAMihB,oBAAoBE,MAEnD9V,QAAS,SAAA+V,GACjB,IAAMC,EAAS,GACfA,EAAOtX,KAAKqX,GACZjhB,OAAOuL,KAAKzL,EAAKD,MAAMihB,qBAAqB5V,QAAS,SAAAiW,GACnD,IAAMC,EAAgBthB,EAAKD,MAAMihB,oBAAoBK,GAAUF,GAC3DG,GACFF,EAAOtX,KAAKwX,EAAcC,KAAKC,SAInCX,EAAS/W,KAAKsX,KAGhBphB,EAAKgY,SAAS,CACZ6I,aAvBW,wBAAA3f,EAAAY,SAAAlB,EAAAX,WA4BfG,cAAgB,OA6BhBqhB,mDAAe,SAAAzf,EAAO0f,GAAP,OAAAX,EAAArgB,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,cAEbpB,EAAKI,cAAc8b,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,WAGwB,oBAA5Bpc,EAAKD,MAAM0hB,cACpBzhB,EAAKD,MAAM0hB,aAAaC,GARbrf,EAAAjB,KAAA,EAWApB,EAAKD,MAAM4hB,QAAQF,aAAaC,GAXhC,cAAArf,EAAAb,OAAA,SAAAa,EAAAV,MAAA,wBAAAU,EAAAP,SAAAE,EAAA/B,0IA3BTA,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,oDAK9CE,KAAKmV,wDAILnV,KAAKmV,YACLnV,KAAK6gB,0DAGYzL,GACjBpV,KAAKmV,YAEL,IAAMwM,EAAiBvM,EAAUwM,WAAa5hB,KAAKF,MAAMkC,QACnDgf,GAAwB5L,EAAU4L,sBAAwBhhB,KAAKF,MAAMkhB,uBACvC5L,EAAU2L,qBAAuB/gB,KAAKF,MAAMihB,qBAC9CY,GAAkBX,IAClDhhB,KAAK6gB,+JAmBP7gB,KAAK+X,SAAS,CACZ4I,QAAO,IAGT3gB,KAAKF,MAAM6gB,kBACL3gB,KAAKwhB,aAAa,gJAIdK,GACV7hB,KAAKF,MAAMwU,YAAYuN,GACvB7hB,KAAKF,MAAM4a,8CAGL,IAAA1C,EAAAhY,KACN,GAAIA,KAAKF,MAAMkC,QAAQ,CAErB,IAAM8f,EAAQ7hB,OAAOuL,KAAKxL,KAAKF,MAAMihB,qBAAqB1e,OAAO,EAC3D0f,EAAiB/hB,KAAK2O,MAAMiS,UAAY5gB,KAAK2O,MAAMiS,SAASxT,IAAK,SAAC+T,EAAOnT,GAC7E,OACEmR,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7I,GAAI,EACJnE,MAAO,EACP4P,UAAW,EACX3N,IAAK,WAAWrG,EAChBqE,WAAY,SACZsD,cAAe,OAGXwL,EAAO/T,IAAK,SAACmU,EAAMU,GAAP,OACV9C,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EAAE0P,EACTnM,cAAe,MACftB,IAAK,iBAAiBkN,EACtB3L,eAAgB,cAEhBuJ,EAAA1e,EAAAyR,cAACgQ,EAAA,EAAD,CACEX,MAAOA,EACPY,YAAa,CACXZ,MAAMA,GAERa,UAAW,CACTpN,KAAK,OACLlV,MAAM,CACJwX,GAAG,CAAC,EAAE,GACNxE,GAAG,CAAC,EAAE,GACNV,MAAM,CAAC,QAAQ,OACfM,OAAO,CAAC,QAAQ,WAItByM,EAAA1e,EAAAyR,cAACgQ,EAAA,EAADjiB,OAAAuU,OAAA,GACMwD,EAAKlY,MADX,CAEEyhB,MAAOA,EACPY,YAAa,CACXZ,MAAMA,GAERa,UAAW,CACTpN,KAAK,eACLlV,MAAM,CACJiT,SAAS,CAAC,EAAE,GACZC,WAAW,IACXC,MAAM,sBAa1B,OACEkM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CAAOxE,OAAQ5a,KAAKF,MAAM8a,QACxBuE,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAD,CAAWvH,UAAW9a,KAAKF,MAAM4a,YAC/ByE,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAUtH,OAAX,CAAkB/J,MAAO,qBACzBmO,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAUpH,KAAX,KACEkE,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZD,MAAO,CAAC,OAAQ,QAChBuD,cAAe,SACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACP2D,GAAI,CAAC,EAAE,GACP1D,WAAY,SACZsD,cAAe,SACf9B,SAAU,CAAC,OAAO,QAClB+B,eAAgB,WAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPkQ,QAAStiB,KAAKF,MAAMkC,QACpB4d,UAAqC,UAAzB5f,KAAKF,MAAMyY,UAAwBsH,IAAO0C,SAAW1C,IAAO2C,gBAG5ErD,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACP2D,GAAI,CAAC,EAAE,GACP1D,WAAY,SACZsD,cAAe,SACf9B,SAAU,CAAC,OAAO,SAElBsL,EAAA1e,EAAAyR,cAACkN,EAAA,EAAQtJ,GAAT,CACE7C,MAAO,YACP+C,UAAW,UAFb,aAME+L,GAEJ5C,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACP2D,GAAI,CAAC,EAAE,GACP1D,WAAY,SACZsD,cAAe,SACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAQtJ,GAAT,CACEC,GAAI,EACJ9C,MAAO,YACP+C,UAAW,UAHb,UAOAmJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPC,WAAY,SACZuD,eAAgB,SAChBD,cAAe,CAAC,SAAS,QA5DrB,CAAC,WAAW,aA+DJvI,IAAK,SAAAqV,GACb,IAAMC,EAAa1K,EAAK7X,cAAcqB,gBAAgB,CAAC,QAAQihB,IAC/D,OACEtD,EAAA1e,EAAAyR,cAACyE,EAAA,EAAD1W,OAAAuU,OAAA,GACMwD,EAAKlY,MADX,CAEEuU,IAAG,QAAA9R,OAAUkgB,GACbjN,UAAW,CACTmN,GAAG,CAAC,EAAE,GACN1L,GAAG,CAAC,EAAE,GACN7E,MAAM,OACNwC,SAAS,CAAC,MAAM,SAElBwC,KAAMsL,EAAWtL,KACjBvE,KAAM6P,EAAWpM,MACjBhE,YAAc,SAAAlH,GAAC,OAAI4M,EAAK1D,YAAL,SAAA/R,OAA0BmgB,EAAWpJ,kBAUxE6F,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAUO,OAAX,MACI5iB,KAAKF,MAAM4hB,QAAQ1B,QAAWhgB,KAAKF,MAAM4hB,QAAQmB,OAAS7iB,KAAKF,MAAM4hB,QAAQD,gBAC7EtC,EAAA1e,EAAAyR,cAAC4Q,EAAA,EAAD,CACEC,WAAY,gBACZC,UAAWhjB,KAAK2O,MAAMgS,OACtBrO,YAAWrS,OAAAgjB,EAAA,EAAAhjB,CAAA6gB,EAAArgB,EAAAC,KAAG,SAAAwC,IAAA,OAAA4d,EAAArgB,EAAAO,KAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EAAoB6W,EAAK2I,SAAzB,wBAAApd,EAAA1B,SAAAqB,EAAAlD,SACdwS,YAAa,CAACoN,UAAUC,IAAOqD,eAAezO,aAAa,OAAO8B,GAAG,CAAC,EAAE,GAAG3B,SAAS,CAAC,OAAO,SAASK,KAAK,CAAC,OAAO,gBAShI,OAAO,YA9PgBqG,IAAM9H,WC8RlB2P,6MA1RbxU,MAAQ,CACNyU,YAAa,KACbC,iBAAkB,QAIpBC,aAAe,OACfnjB,cAAgB,OAgDhBojB,YAAc,SAACC,GACbzjB,EAAKgY,SAAS,SAAApJ,GAAK,OAAA1O,OAAAwjB,EAAA,EAAAxjB,CAAA,GAAS0O,EAAT,CAAgByU,YAAczU,EAAMyU,cAAcI,EAAY,KAAOA,kFA9CpFxjB,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,OAG9CE,KAAKsjB,aAAetjB,KAAKG,cAAcujB,uKAIvC1jB,KAAKmV,YACLnV,KAAK2jB,4MAGkBvO,EAAUC,mEACjCrV,KAAKmV,YACkBC,EAAUpT,UAAYhC,KAAKF,MAAMkC,SAEtDhC,KAAK2jB,qSAKqB3jB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAY,OAAO,oCAE7E6hB,EAAmBrjB,KAAKG,cAAckB,MAAM,YAItC0I,QAAQC,IAAI,CACpBhK,KAAKsjB,aAAaM,WAAW5jB,KAAKF,MAAMkC,SACxChC,KAAKsjB,aAAaO,mBAAmB7jB,KAAKF,MAAMkC,qDAJhDC,OACA6hB,OAME7hB,GAAW6hB,IACbT,EAAmBrjB,KAAKG,cAAckB,MAAMY,GAAS8hB,KAAKD,sBAGrD9jB,KAAK+X,SAAS,CACnBsL,uDAGG,0IAOA,IAAArL,EAAAhY,KACDgkB,EAAiBhkB,KAAKG,cAAcyc,cAAc,kBAAiB,EAAM,MACzEqH,EAAgBD,EAAiBhkB,KAAKG,cAAcqB,gBAAgB,CAAC,aAAawiB,EAAe5X,gBAAkB,KACnH8X,EAAaD,GAAiBA,EAAc7M,KAAO6M,EAAc7M,KAAO4M,EAAc,GAAAzhB,OAAMyhB,EAAe5X,cAArB,QAA2C,KAEjI+X,EAAkBnkB,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,cACnE4iB,EAAoBpkB,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,YACrE6iB,EAAiBrkB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAY,cAAc,IAAIvB,OAAOuL,KAAKxL,KAAKF,MAAMihB,qBAAqB,GAErI,OACE/gB,KAAKF,MAAMkC,QACTmd,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPuD,cAAe,CAAC,SAAS,OACzBtD,WAAY,CAAC,aAAa,WAE1B8M,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,CAAC,EAAE,GACPJ,cAAe,MACftD,WAAY,SACZD,MAAO,CAAC,EAAE,eACVwD,eAAgB,iBAEhBuJ,EAAA1e,EAAAyR,cAACgO,EAAA,EAADjgB,OAAAuU,OAAA,GACMxU,KAAKF,MADX,CAEE0V,UAAW,CACToB,GAAG,EACHC,GAAG,CAAC,EAAE,GACNS,GAAG,CAAC,EAAE,GACNgN,QAAQ,OACRlS,MAAM,CAAC,EAAE,SAEX2E,eAAe,EACfzE,YAAa,SAAAlH,GAAC,OAAI4M,EAAKuL,YAAY,cAEnCpE,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE1Q,EAAG,EACH0D,MAAO,EACPC,WAAY,SACZsD,cAAe,MACfC,eAAgB,CAAC,SAAS,eAGxBqO,EACE9E,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAE,GACPlF,MAAO,MACPM,OAAQ,MACR4R,QAAS,cACTzL,IAAG,UAAAtW,OAAY2hB,GACfK,IAAKP,EAAe5X,gBAGtB+S,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAE,GACPrC,KAAM,MACNhC,MAAO,YACP+B,KAAM,kBAIZmK,EAAA1e,EAAAyR,cAACsS,EAAA,EAAD,CACEzR,SAAU,EACVC,WAAY,EACZC,MAAO,YACPkL,KAAMne,KAAKF,MAAMkC,YAKrBhC,KAAKF,MAAMsT,UACT+L,EAAA1e,EAAAyR,cAACuS,EACKzkB,KAAKF,QAIjBqf,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,CAAC,EAAE,GACPc,MAAO,CACL8Q,KAAK,YAEPtS,MAAO,CAAC,EAAE,QACVC,WAAY,SACZsD,cAAe,MACfC,eAAgB5V,KAAK2O,MAAM0U,iBAAmB,gBAAkB,YAG9DrjB,KAAK2O,MAAM0U,kBACTlE,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACExL,MAAO,CACL4F,eAAe,QAEjB3C,GAAI,EACJ+I,UAAWC,IAAO8E,cAClBxR,QAAU,SAAA/H,GAAC,OAAI4M,EAAKlY,MAAM8kB,aAAY,KAEtCzF,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZK,OAAQ,CAAC,OAAO,QAChBkD,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,EACJlF,MAAO,QACPM,OAAQ,QACR4R,QAAS,cACTzL,IAAG,2BAELsG,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnM,MAAO,QACPF,SAAU,CAAC,EAAE,GACbC,WAAY,KAEXhT,KAAK2O,MAAM0U,iBAAiBxX,QAAQ,GALvC,WAURsT,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,OACPC,WAAY,SACZsD,cAAe,MACfC,eAAgB,YAGdwO,GAAqBpkB,KAAKF,MAAM+kB,YAC9B1F,EAAA1e,EAAAyR,cAAC4S,EAAA,EAAD,CACEtS,YAAa,CACXkC,UAAU,SACVd,MAAM,CACJxB,MAAM,OACNM,OAAO1S,KAAKF,MAAMsT,SAAW,OAAS,QAExC6B,KAAKjV,KAAKF,MAAMsT,SAAW,QAAU,UAEvCd,YAAc,SAAClH,GAAQ4M,EAAKlY,MAAMwU,YAAY6P,GAAgB,KAE9DhF,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZsD,cAAe,OAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAE,GACPrC,KAAM,QACNhC,MAAO,QACP+B,KAAM,cAERmK,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEpM,WAAY,EACZC,MAAO,QACPF,SAAU,CAAC,EAAE,IAHf,gBASF/S,KAAKF,MAAMilB,cACb5F,EAAA1e,EAAAyR,cAAC4S,EAAA,EAAD,CACEtS,YAAa,CACXkC,UAAU,SACVd,MAAM,CACJxB,MAAM,OACNM,OAAO1S,KAAKF,MAAMsT,SAAW,OAAS,QAExC6B,KAAKjV,KAAKF,MAAMsT,SAAW,QAAU,UAEvCd,YAAc,SAAClH,GAAQ4M,EAAKlY,MAAMwU,YAAY+P,GAAe,KAE7DlF,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZsD,cAAe,OAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,CAAC,EAAE,GACPrC,KAAM,QACNhC,MAAO,QACP+B,KAAM,cAERmK,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEpM,WAAY,EACZC,MAAO,QACPF,SAAU,CAAC,EAAE,IAHf,gBAYL/S,KAAKF,MAAMsT,UACV+L,EAAA1e,EAAAyR,cAACuS,EAADxkB,OAAAuU,OAAA,GACMxU,KAAKF,MADX,CAEEwf,UAAW,CACTxM,GAAG,QAMfqM,EAAA1e,EAAAyR,cAAC8S,EAAD/kB,OAAAuU,OAAA,GACMxU,KAAKF,MADX,CAEE8a,OAAiC,YAAzB5a,KAAK2O,MAAMyU,YACnB1I,WAAY,SAAAtP,GAAC,OAAI4M,EAAKuL,YAAY,gBAItCpE,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPwD,eAAgB,cAEhBuJ,EAAA1e,EAAAyR,cAACyE,EAAA,EAAD1W,OAAAuU,OAAA,CACE4C,KAAM,SACFpX,KAAKF,MAFX,CAGE+S,KAAM,UACNP,YAAatS,KAAKF,MAAMma,qCApRVzG,sBC+TXyR,6MAjUbtW,MAAQ,CACNuW,MAAM,KACNjjB,QAAQ,KACRkjB,SAAS,KACTrB,UAAU,KACVsB,WAAY,CACVC,OAAO,KACPC,SAAQ,MAKZnlB,cAAgB,OAChBmjB,aAAe,OAYfiC,mCAAgB,SAAA5kB,IAAA,IAAA6kB,EAAAC,EAAAxjB,EAAA6hB,EAAAoB,EAAA,OAAApE,EAAArgB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAIJ4I,QAAQC,IAAI,CACpBjK,EAAKujB,aAAaM,WAAW7jB,EAAKD,MAAMkC,SACxCjC,EAAKujB,aAAaO,mBAAmB9jB,EAAKD,MAAMkC,WANpC,OAAAwjB,EAAAvkB,EAAAS,KAAA+jB,EAAAxlB,OAAAylB,EAAA,EAAAzlB,CAAAulB,EAAA,GAEZvjB,EAFYwjB,EAAA,GAGZ3B,EAHY2B,EAAA,GASVP,EAAQnlB,EAAKI,cAAckB,MAAM,GACjCY,GAAW6hB,IACboB,EAAQnlB,EAAKI,cAAckB,MAAMY,GAAS8hB,KAAKD,IAGjD/jB,EAAKgY,SAAS,CACZmN,QACAjjB,UACA6hB,cAjBY,wBAAA7iB,EAAAY,SAAAlB,EAAAX,WAgDhB2lB,2BAAQ,SAAA5jB,IAAA,IAAAqB,EAAAC,EAAA,OAAAyd,EAAArgB,EAAAO,KAAA,SAAAoB,GAAA,cAAAA,EAAAlB,KAAAkB,EAAAjB,MAAA,OACAiC,EAAW,SAACwiB,EAAG/C,GAEnB,IAAMgD,EAAY,CAChB1J,YAAa,QACbD,cAAe,aACfE,WAAYwJ,EAAGjH,OAASiH,EAAGjH,OAASkE,GAGlCA,IACFgD,EAAUzJ,WAAarc,EAAKI,cAAc2lB,oBAAoBjD,KAI5DA,GAA8B,UAArBgD,EAAUlH,SACrB5e,EAAKI,cAAc8b,yBAAyB4J,GAG9C,IAAME,EAAW,CACfX,WAAY,CACVC,OAAO,KACPC,SAAQ,GAEVH,SAASS,EAAGjH,OAASiH,EAAGjH,OAAS,SAGjB,YAAdiH,EAAGjH,SACLoH,EAAS9jB,QAAUlC,EAAK4O,MAAMmV,UAC9BiC,EAASjC,UAAY/jB,EAAKsB,MAAM,GAEQ,oBAA7BtB,EAAKD,MAAMkmB,eACpBjmB,EAAKD,MAAMkmB,iBAIfjmB,EAAKgY,SAASgO,IAGV1iB,EAAkB,SAACuiB,GACvB,IAAMP,EAASO,EAAG/U,gBAClB9Q,EAAKgY,SAAS,SAAC1C,GAAD,MAAgB,CAC5B+P,WAAWnlB,OAAAwjB,EAAA,EAAAxjB,CAAA,GACNoV,EAAU+P,WADL,CAERC,eAKNtlB,EAAKujB,aAAa2C,aAAa7iB,EAASC,GAExCtD,EAAKgY,SAAS,SAAC1C,GAAD,MAAgB,CAC5B+P,WAAWnlB,OAAAwjB,EAAA,EAAAxjB,CAAA,GACNoV,EAAU+P,WADL,CAERE,SAAQ,OArDN,wBAAAljB,EAAAP,SAAAE,EAAA/B,WA0DR0a,iDAAa,SAAAhY,EAAOwjB,GAAP,OAAApF,EAAArgB,EAAAO,KAAA,SAAA6B,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,OACXpB,EAAKD,MAAM4a,aADA,wBAAA7X,EAAAhB,SAAAa,EAAA1C,0IAnHPA,KAAKG,cACPH,KAAKG,cAAcC,SAASJ,KAAKF,OAEjCE,KAAKG,cAAgB,IAAIE,IAAcL,KAAKF,OAG9CE,KAAKsjB,aAAetjB,KAAKG,cAAcujB,+DAyBvC1jB,KAAKmV,YACLnV,KAAKulB,4DAILvlB,KAAKmV,uDAGYC,EAAUC,GAC3BrV,KAAKmV,gKAQLnV,KAAK+X,SAAS,CACZoN,SAAS,KACTC,WAAY,CACVC,OAAO,KACPC,SAAQ,wIAoEZ,OACEnG,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACExE,OAAQ5a,KAAKF,MAAM8a,QAEnBuE,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAD,CACE8D,SAAS,EACTzR,UAAW,QACXb,SAAU,CAAC,OAAO,SAClBiH,UAAW9a,KAAKF,MAAM4a,WACtB0L,WAAY,4FAEZjH,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAUtH,OAAX,CACEC,GAAI,EACJqL,WAAY,CACVpT,MAAM,SAERjC,MAAO,oBACPyP,aAAc,oCAGhBtB,EAAA1e,EAAAyR,cAACmQ,EAAA,EAAUpH,KAAX,CACEpE,GAAI,GAEJsI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPC,WAAY,SACZsD,cAAe,SACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7I,GAAI,EACJnE,MAAO,MACPM,OAAQ,MACRmG,IAAK,2BAEPsG,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7I,GAAI,EACJxD,SAAU,EACVE,MAAO,QACPD,WAAY,KAEXhT,KAAK2O,MAAMuW,MAAQllB,KAAK2O,MAAMuW,MAAMrZ,QAAQ,GAAK,KAEpDsT,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJhD,SAAU,EACVE,MAAO,QACPD,WAAY,IACZgD,UAAW,UAGThW,KAAK2O,MAAMmV,WAAa9jB,KAAK2O,MAAMmV,UAAUwC,GAAG,GAAK,iEAAmE,+DAG5HnH,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEmH,GAAI,EACJxQ,GAAI,EACJ3D,MAAO,EACPuD,cAAe,SACf8K,aAAc,mCAEdtB,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJ3D,MAAO,EACPuD,cAAe,MACfC,eAAgB,iBAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnM,MAAO,QACPD,WAAY,KAFd,YAMAmM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnM,MAAO,QACPD,WAAY,KAEXhT,KAAK2O,MAAM1M,QAAUjC,KAAK2O,MAAM1M,QAAQ4J,QAAQ,GAAK,MAG1DsT,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPuD,cAAe,MACfC,eAAgB,iBAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnM,MAAO,QACPD,WAAY,KAFd,cAMAmM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnM,MAAO,QACPD,WAAY,KAEXhT,KAAK2O,MAAMmV,UAAY9jB,KAAK2O,MAAMmV,UAAUjY,QAAQ,GAAK,MAG9DsT,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7F,KAAI,KAAAhX,OAAOvC,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,gBAE5D2d,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEC,OAAQ,GACRzG,SAAU,WACVvG,WAAY,SACZsD,cAAe,MACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErM,SAAU,EACVE,MAAO,QACPD,WAAY,KAHd,oBAOAmM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,EACJmC,KAAM,MACNhC,MAAO,QACP+B,KAAM,iBAMZmK,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJ3D,MAAO,EACPiN,OAAQ,GACRzG,SAAU,WACVvG,WAAY,SACZuD,eAAgB,UAGd5V,KAAK2O,MAAMmV,WAAa9jB,KAAK2O,MAAMmV,UAAUwC,GAAG,GAE9CtmB,KAAK2O,MAAMyW,YAAcplB,KAAK2O,MAAMyW,WAAWE,QAC7CnG,EAAA1e,EAAAyR,cAACsU,EAAA,EAAD,CACEC,UAAW,QACX9f,KAAM3G,KAAKF,MAAM6G,KACjB+f,gBAAiB,YACjBC,qBAAsB,QACtBC,SAAQ,qBACRzI,KAAMne,KAAK2O,MAAMyW,WAAWC,OAC5BwB,WAAU,8BACVC,kBAAmB9mB,KAAK8mB,kBAAkBnH,KAAK3f,QAGjDmf,EAAA1e,EAAAyR,cAAC4S,EAAA,EAAD,CACEtS,YAAa,CACXS,MAAM,OACNb,MAAM,CAAC,EAAE,OACTsC,UAAU,QACVqS,cAAc,OACdpS,UAAU3U,KAAK2O,MAAMmV,WAAa9jB,KAAK2O,MAAMmV,UAAUkD,IAAI,IAE7D1U,YAAatS,KAAK2lB,MAAMhG,KAAK3f,OAR/B,SAcFmf,EAAA1e,EAAAyR,cAAC4S,EAAA,EAAD,CACEtS,YAAa,CACXS,MAAM,OACNb,MAAM,CAAC,EAAE,OACTsC,UAAU,QACVqS,cAAc,QAEhBzU,YAAatS,KAAK0a,WAAWiF,KAAK3f,OAPpC,qBA5SCsb,IAAM9H,WCiadyT,6MAjabtY,MAAQ,CACNyW,WAAW,CACTC,OAAO,KACPC,SAAQ,GAEV4B,YAAY,GACZC,UAAU,KACVxjB,cAAc,KACdyjB,gBAAgB,KAChBC,sBAAqB,EACrBC,yBAAwB,EACxBC,0BAAyB,KAI3BjE,aAAe,OACfnjB,cAAgB,OAChB2b,eAAiB,gFAGX9b,KAAK8b,eACP9b,KAAK8b,eAAe1b,SAASJ,KAAKF,OAElCE,KAAK8b,eAAiB,IAAIjc,IAAeG,KAAKF,OAGhDE,KAAKG,cAAgBH,KAAK8b,eAAe3b,cACzCH,KAAKsjB,aAAetjB,KAAKG,cAAcujB,uLAIX1jB,KAAKG,cAAcqB,gBAAgB,CAAC,YAAY,OAAO,cACxDxB,KAAKF,MAAMkC,yCAK1B+H,QAAQC,IAAI,CACpBhK,KAAK8b,eAAe/S,sBACpB/I,KAAK8b,eAAehY,mBAAmB9D,KAAKF,MAAMkC,SAClDhC,KAAK8b,eAAerZ,mBAAmBzC,KAAKF,MAAMkC,iDANlDwlB,OACAJ,OACAzkB,OAQEwkB,EAAY,KACZxjB,EAAgB,KAChB4jB,GAA2B,GAE3B5kB,oCAEoB3C,KAAK8b,eAAerY,iBAAiBzD,KAAKF,MAAMkC,iBAAtE2B,SAGM8jB,EAAiBD,EAAiBvb,OAAQ,SAAA9B,GAAC,OAAKA,EAAEmB,aAAaoc,UAAUtb,gBAAkBzJ,EAAgByJ,gBAAkBub,MACnIR,IAAYM,GAAiBA,EAAenc,aAAasc,WACzDL,EAA2BJ,GAA2B,+CAAdA,mCAGnCnnB,KAAK+X,SAAS,CACnBoP,YACAxjB,gBACAyjB,kBACAG,+DAGG,6RA4DaM,kCAEhB1kB,EAAWnD,KAAK2O,MAAM2Y,wBAA0BtnB,KAAK2O,MAAMuY,YAAclnB,KAAKF,MAAMkC,QACpF6lB,IACF1kB,EAAW,KAAK,IAAI2kB,OAAO,KAGP9nB,KAAKG,cAAc4nB,aAAa5kB,6CAE7C,UAGHC,EAAW,SAACwiB,EAAG/C,GAEnB,IAAMgD,EAAY,CAChB3J,cAAe,aACfC,YAAa,mBAGX0G,IACFgD,EAAUzJ,WAAapE,EAAK7X,cAAc2lB,oBAAoBjD,KAI5DA,GAA8B,UAArBgD,EAAUlH,SACrB3G,EAAK7X,cAAc8b,yBAAyB4J,GAG9C,IAAME,EAAW,CACfX,WAAY,CACVC,OAAO,KACPC,SAAQ,IAIsB,YAAdM,EAAGjH,SAErBoH,EAASoB,UAAUhkB,EACnB4iB,EAASuB,yBAAwB,EACjCvB,EAASwB,0BAA0BM,EACnC7P,EAAKgQ,YAGPhQ,EAAKD,SAASgO,IAGV1iB,EAAkB,SAACuiB,GACvB,IAAMP,EAASO,EAAG/U,gBAClBmH,EAAKD,SAAS,SAAC1C,GAAD,MAAgB,CAC5B+P,WAAWnlB,OAAAwjB,EAAA,EAAAxjB,CAAA,GACNoV,EAAU+P,WADL,CAERC,eAKNrlB,KAAK8b,eAAe7Y,gBAAgBjD,KAAKF,MAAMkC,QAAQmB,EAASC,EAASC,GAEzErD,KAAK+X,SAAS,SAAC1C,GAAD,MAAgB,CAC5B+P,WAAWnlB,OAAAwjB,EAAA,EAAAxjB,CAAA,GACNoV,EAAU+P,WADL,CAERE,SAAQ,iJAKCla,GACb,IAAM8b,EAAc9b,EAAE6c,OAAO/R,MACvBmR,EAAuBrnB,KAAKG,cAAc4nB,aAAab,GAC7DlnB,KAAK+X,SAAS,CACZmP,cACAG,4EAIuBC,GACzBtnB,KAAK+X,SAAS,CACZuP,gLAKFtnB,KAAK+X,SAAS,CACZqN,WAAY,CACVC,OAAO,KACPC,SAAQ,4PAMZtlB,KAAKmV,YACLnV,KAAKgoB,gMAGkB5S,EAAUC,mEACjCrV,KAAKmV,YACkBC,EAAUpT,UAAYhC,KAAKF,MAAMkC,SAEtDhC,KAAKgoB,iJAIA,IAAAnK,EAAA7d,KACP,OAAOA,KAAK2O,MAAMhL,cAChBwb,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE1Q,EAAG,EACH6H,GAAI,EACJnE,MAAO,EACPK,OAAQ,EACRgC,aAAc,EACdpC,WAAY,SACZsD,cAAe,SACfC,eAAgB,SAChB2B,gBAAiB,eAEjB4H,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPC,WAAY,SACZsD,cAAe,SACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJhD,SAAU,EACVC,WAAY,IACZC,MAAO,aACP+C,UAAW,UALb,YAOYhW,KAAK2O,MAAMhL,cAAcukB,IAAI,MAAMrc,QAAQ,GAPvD,IAO4D7L,KAAKG,cAAcqB,gBAAgB,CAAC,aAAa,QAAQ,cAPrH,4BAUGxB,KAAK2O,MAAM4Y,0BAA4BvnB,KAAK2O,MAAMwY,YAAcnnB,KAAK2O,MAAM2Y,wBAC1EnI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJ/C,WAAY,IACZC,MAAO,aACPF,SAAU,OACViD,UAAW,UALb,yCAOyChW,KAAK2O,MAAMwY,WAGpDhI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPC,WAAY,SACZsD,cAAe,SACfC,eAAgB,UAEhBuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJ/C,WAAY,IACZD,SAAU,OACVE,MAAO,aACP+C,UAAW,UAGThW,KAAK2O,MAAM2Y,wBAA0B,iDAAmD,qFAI1FtnB,KAAK2O,MAAM2Y,yBACTnI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJ1D,WAAY,SACZsD,cAAe,UAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPC,WAAY,SACZsD,cAAe,OAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnK,KAAM,QACND,KAAOhV,KAAK2O,MAAM0Y,qBAAuB,WAAa,WACtDpU,MAAQjT,KAAK2O,MAAM0Y,qBAAuBrnB,KAAKF,MAAMoU,MAAMC,OAAOsD,aAAakH,OAAOC,UAAY,aAEpGO,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,EACJE,WAAY,IACZD,SAAU,OACViD,UAAW,OACX/C,MAAO,cALT,4BAUFkM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7I,GAAI,EACJnE,MAAO,EACPC,WAAY,SACZsD,cAAe,OAEfwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnK,KAAM,QACND,KAAM,WACN/B,MAAO,aAETkM,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,EACJE,WAAY,IACZD,SAAU,OACVE,MAAO,aACP+C,UAAW,QALb,wBAkBdhW,KAAK2O,MAAM2Y,yBACTnI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,EACJnM,IAAK,EACLue,KAAM,OACNC,UAAU,EACV3T,aAAc,EACdzB,WAAY,IACZgD,UAAW,SACX5D,MAAO,CAAC,OAAO,QACfiW,YAAa,aACb9Q,gBAAiB,SACjByK,UAAW,kBACX9L,MAAOlW,KAAK2O,MAAMuY,YAClBoB,YAAW,0BACXC,SAAUvoB,KAAKwoB,eAAe7I,KAAK3f,MACnCyS,OAAM,aAAAlQ,OAAevC,KAAKF,MAAMoU,MAAMC,OAAOC,WAKjDpU,KAAK2O,MAAMyW,YAAcplB,KAAK2O,MAAMyW,WAAWE,QAC7CnG,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEhN,MAAO,EACPuD,cAAe,UAEfwJ,EAAA1e,EAAAyR,cAACsU,EAAA,EAAD,CACE7f,KAAM3G,KAAKF,MAAM6G,KACjBigB,SAAQ,wBACRzI,KAAMne,KAAK2O,MAAMyW,WAAWC,OAC5BwB,WAAU,iCACVC,kBAAmB9mB,KAAK8mB,kBAAkBnH,KAAK3f,SAGhDA,KAAK2O,MAAM4Y,2BAA6BvnB,KAAK2O,MAAM2Y,wBACtDnI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnK,KAAM,QACNP,UAAW,MACXvB,QAAU,SAAA/H,GAAC,OAAIyS,EAAK5a,iBAAgB,KAHtC,qBAiBEjD,KAAK2O,MAAM4Y,0BAA4BvnB,KAAK2O,MAAM2Y,0BACpDnI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEnK,KAAM,QACNP,UAAW,OACXvB,QAAU,SAAA/H,GAAC,OAAIyS,EAAK5a,iBAAgB,IACpC0R,SAAW3U,KAAK2O,MAAM2Y,0BAA4BtnB,KAAK2O,MAAM0Y,sBAJ/D,oBAUJlI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE7I,GAAI,EACJ6R,UAAU,EACVnV,MAAO,UACPqD,MAAK,+BACLmS,QAASzoB,KAAK2O,MAAM2Y,wBACpBiB,SAAW,SAAAnd,GAAC,OAAIyS,EAAK6K,2BAA2Btd,EAAE6c,OAAOQ,aAG3D,YA/ZsBjV,aCIxBmV,6MAEJha,MAAQ,CACNmV,UAAU,KACVngB,cAAc,KACdilB,gBAAe,KAIjBtF,aAAe,OACfnjB,cAAgB,OAChB2b,eAAiB,OAiCjB0F,mDAAe,SAAA7gB,EAAO8gB,GAAP,OAAAX,EAAArgB,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEbpB,EAAKI,cAAc8b,yBAAyB,CAC1CE,YAAa,SACbD,cAAe,YAGsB,oBAA5Bnc,EAAKD,MAAM0hB,cACpBzhB,EAAKD,MAAM0hB,aAAaC,GARbxgB,EAAAE,KAAA,EAWApB,EAAKD,MAAM4hB,QAAQF,aAAaC,GAXhC,cAAAxgB,EAAAM,OAAA,SAAAN,EAAAS,MAAA,wBAAAT,EAAAY,SAAAlB,EAAAX,0IA9BTA,KAAK8b,eACP9b,KAAK8b,eAAe1b,SAASJ,KAAKF,OAElCE,KAAK8b,eAAiB,IAAIjc,IAAeG,KAAKF,OAGhDE,KAAKG,cAAgBH,KAAK8b,eAAe3b,cACzCH,KAAKsjB,aAAetjB,KAAKG,cAAcujB,uKAIvC1jB,KAAKmV,YACLnV,KAAKgoB,gMAGkB5S,EAAUC,mEACjCrV,KAAKmV,sQAIuBnV,KAAKG,cAAcqB,gBAAgB,CAAC,YAAY,OAAO,cACxDxB,KAAKF,MAAMkC,wCACZhC,KAAKsjB,aAAaO,mBAAmB7jB,KAAKF,MAAMkC,uBAAlE8hB,2BACC9jB,KAAK+X,SAAS,CACnB+L,+CAGG,+OAkBP9jB,KAAKF,MAAMwU,YAAY,KAAI,yIAGjBsU,GACV5oB,KAAK+X,SAAS,CACZ6Q,oDAIK,IAAA5Q,EAAAhY,KACP,OACEmf,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACErJ,GAAI,GAEJoJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEmH,GAAI,EACJnU,MAAO,EACPuD,cAAe,MACfC,eAAgB,gBAChBvD,WAAY,CAAC,WAAW,UACxBoO,aAAY,aAAAle,OAAevC,KAAKF,MAAMoU,MAAMC,OAAOC,UAEnD+K,EAAA1e,EAAAyR,cAAC2W,EAAD5oB,OAAAuU,OAAA,GACMxU,KAAKF,MADX,CAEE8kB,YAAa5kB,KAAK4kB,YAAYjF,KAAK3f,UAIrCA,KAAK2O,MAAMmV,WAAa9jB,KAAK2O,MAAMmV,UAAUwC,GAAG,GAC9CnH,EAAA1e,EAAAyR,cAACgO,EAAA,EAAD,CACE1K,UAAW,CACT9G,EAAE,EACF6H,GAAG,EACHnE,MAAM,GAER4E,UAAU,EACVD,eAAe,GAEfoI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZuD,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEpM,WAAY,IACZD,SAAU,OACVE,MAAO,aACP+C,UAAW,UAJb,0CAOEmJ,EAAA1e,EAAAyR,cAAC+G,EAAA,EAAD,CACEnG,GAAI,EACJE,WAAY,IACZC,MAAO,UACPF,SAAU,OACVG,WAAY,UACZqG,KAAM,uEANR,iBAPF,cAgBwBvZ,KAAK2O,MAAMmV,UAAUjY,QAAQ,GAhBrD,0BAkBAsT,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,CAAC,EAAE,GACPyD,GAAI,CAAC,EAAE,GACPtB,KAAM,QACNP,UAAW,OACXvB,QAAU,SAAA/H,GAAC,OAAI4M,EAAK4M,aAAY,KALlC,eAWF5kB,KAAKF,MAAM+kB,aACb1F,EAAA1e,EAAAyR,cAACgO,EAAA,EAAD,CACE1K,UAAW,CACT9G,EAAE,EACF6H,GAAG,EACHnE,MAAM,GAER4E,UAAU,EACVD,eAAe,GAEfoI,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZuD,eAAgB,SAChBD,cAAe,CAAC,SAAS,QAEzBwJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE9H,GAAI,EACJrC,KAAM,QACNhC,MAAO,aACP+B,KAAM,qBAERmK,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEpM,WAAY,IACZD,SAAU,OACVE,MAAO,aACP+C,UAAW,UAJb,8EAQAmJ,EAAA1e,EAAAyR,cAAC+G,EAAA,EAAD,CACEnG,GAAI,EACJE,WAAY,IACZC,MAAO,UACPF,SAAU,OACVG,WAAY,UACZqG,KAAMvZ,KAAKG,cAAcqB,gBAAgB,CAAC,cAE1C2d,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACE/M,WAAY,SACZsD,cAAe,MACfC,eAAgB,UAHlB,mBAMEuJ,EAAA1e,EAAAyR,cAACkN,EAAA,EAAD,CACEtM,GAAI,EACJmC,KAAM,QACNhC,MAAO,UACP+B,KAAM,cAVV,QAoBRhV,KAAKF,MAAMilB,cACT5F,EAAA1e,EAAAyR,cAAC4W,EACK9oB,KAAKF,OAGfqf,EAAA1e,EAAAyR,cAAC6W,EAAD9oB,OAAAuU,OAAA,GACMxU,KAAKF,MADX,CAEE8a,OAAQ5a,KAAK2O,MAAMia,eACnB5C,cAAehmB,KAAKgoB,SAASrI,KAAK3f,MAClC0a,WAAY,SAAAtP,GAAC,OAAI4M,EAAK4M,aAAY,eArMdpR,aA4MfmV,4BCpNfK,EAAAC,QAAA,CAAkBtE,cAAA,0DCAlBqE,EAAAC,QAAA,CAAkBnJ,KAAA,4BAAAE,OAAA,8BAAAD,KAAA,4BAAAE,QAAA,+BAAAiJ,KAAA,4BAAArK,aAAA,oCAAA2B,KAAA,4yDCAlBwI,EAAAC,QAAA,CAAkBE,QAAA,6BAAAC,QAAA,6BAAA7G,SAAA,8BAAAC,aAAA,kCAAA6G,UAAA,+BAAAC,OAAA,4BAAApG,eAAA,oCAAAqG,qBAAA","file":"static/js/0.ff1ff492.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesVotesChanges()\n    ]);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    let delegates = [];\n    Object.keys(delegateAccounts).forEach((account) => {\n      const votes = +delegateAccounts[account];\n      if (votes === 0) return;\n      delegates.push({\n        votes: votes/1e18,\n        delegate: account\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n\n    let votes = await this.functionsUtil.getContractPastEvents(governanceContractName,'VoteCast', {fromBlock: 0, toBlock: 'latest'});\n\n    if (votes){\n      votes = votes.map( e => {\n        const {\n            voter,\n            votes,\n            support,\n            proposalId\n        } = e.returnValues;\n        return {\n          votes,\n          voter,\n          support,\n          proposalId\n        }\n      });\n    }\n\n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null) => {\n\n    // Check for cached data\n    const cachedDataKey = 'getProposals';\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const proposalCount = await this.functionsUtil.genericContractCall(governanceContractName,'proposalCount');\n\n    if (!proposalCount){\n      return [];\n    }\n\n    const proposalGets = [];\n    const proposalStateGets = [];\n    for (const i of Array.from(Array(parseInt(proposalCount)),(n,i) => i+1)) {\n      proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n      proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n    }\n\n    let [\n      votes,\n      proposals,\n      proposalStates,\n      proposalQueuedEvents,\n      proposalCreatedEvents,\n      proposalCanceledEvents,\n      proposalExecutedEvents,\n    ] = await Promise.all([\n      this.getVotes(),\n      Promise.all(proposalGets),\n      Promise.all(proposalStateGets),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock: 0, toBlock: 'latest'}),\n      this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock: 0, toBlock: 'latest'}),\n    ]);\n\n    if (!proposals){\n      return false;\n    }\n\n    proposals.reverse();\n    proposalStates.reverse();\n    proposalQueuedEvents.reverse();\n    proposalCreatedEvents.reverse();\n    proposalCanceledEvents.reverse();\n    proposalExecutedEvents.reverse();\n\n    await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      const proposalId = parseInt(p.id);\n      const createdEvent = proposalCreatedEvents[i];\n      const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n      const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n      // Init states array\n      p.states = [];\n\n      // Create created state\n      const createdBlockInfo = await this.props.web3.eth.getBlock(createdEvent.blockNumber);\n      const createdState = {\n        state: \"Pending\",\n        blockNumber: createdEvent.blockNumber,\n        end_time: createdBlockInfo.timestamp,\n        start_time: createdBlockInfo.timestamp,\n        trx_hash: createdEvent.transactionHash\n      };\n      p.states.push(createdState);\n\n      // Push active state\n      const activeState = {\n        end_time: null,\n        trx_hash: null,\n        state: \"Active\",\n        blockNumber: createdEvent.blockNumber,\n        start_time: createdState.start_time\n      };\n      p.states.push(activeState);\n\n      // Push canceled state\n      if (canceledEvent){\n        const canceledBlockInfo = await this.props.web3.eth.getBlock(canceledEvent.blockNumber);\n        const canceledState = {\n          end_time: null,\n          state: \"Canceled\",\n          blockNumber: canceledEvent.blockNumber,\n          start_time: canceledBlockInfo.timestamp,\n          trx_hash: canceledEvent.transactionHash\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n        p.states.push(canceledState);\n      } else {\n        // Push queued state\n        if (queuedEvent){\n          const queuedBlockInfo = await this.props.web3.eth.getBlock(queuedEvent.blockNumber);\n          const succeededState = {\n            end_time: null,\n            trx_hash: null,\n            state: \"Succeeded\",\n            blockNumber: queuedEvent.blockNumber,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          const queuedState = {\n            end_time: null,\n            state: \"Queued\",\n            blockNumber: queuedEvent.blockNumber,\n            trx_hash: queuedEvent.transactionHash,\n            start_time: queuedBlockInfo.timestamp,\n          };\n\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n          // Push Succeeded state\n          p.states.push(succeededState);\n          // Push queued state\n          p.states.push(queuedState);\n        }\n\n        // Push executed state\n        if (executedEvent){\n          const executedBlockInfo = await this.props.web3.eth.getBlock(executedEvent.blockNumber);\n          const executedState = {\n            end_time: null,\n            state: \"Executed\",\n            blockNumber: executedEvent.blockNumber,\n            start_time: executedBlockInfo.timestamp,\n            trx_hash: executedEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n          p.states.push(executedState);\n        }\n      }\n\n      // Check for defeated or expired\n      p.state = enumerateProposalState(proposalStates[i]);\n      const foundState = p.states.find( s => (s.state === p.state) );\n      if (!foundState){\n        const endBlockInfo = await this.props.web3.eth.getBlock(p.endBlock);\n        const endState = {\n          state: p.state,\n          end_time: null,\n          trx_hash: null,\n          blockNumber: p.endBlock,\n          start_time: endBlockInfo.timestamp,\n        }\n        // Update previous state end_time\n        p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n        p.states.push(endState);\n      }\n\n      p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n      const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n      p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n      \n      // Idle\n      p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n      p.description = description.split(/\\n|↵/g);\n      p.description.shift();\n      p.description = p.description.join(\"\\n\");\n\n      // Compound\n      // p.title = description.split(/# |\\n/g)[1] || 'Untitled';\n      // p.description = description.split(/# |\\n/g)[2] || 'No description.';\n\n      // console.log('getProposals',filter_by_state,cachedData);\n\n      // Save proposal\n      proposals[i] = {\n        eta:p.eta,\n        actions:{\n          values,\n          targets,\n          calldatas,\n          signatures\n        },\n        id:proposalId,\n        title:p.title,\n        state:p.state,\n        votes:p.votes,\n        states:p.states,\n        executed:p.executed,\n        endBlock:p.endBlock,\n        canceled:p.canceled,\n        forVotes:p.forVotes,\n        proposer:p.proposer,\n        timestamp:p.timestamp,\n        startBlock:p.startBlock,\n        description:p.description,\n        againstVotes:p.againstVotes\n      };\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,proposals);\n\n    // console.log('getProposals',filter_by_state,cachedData);\n\n    if (filter_by_state){\n      proposals = proposals.filter( p => (p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      proposals = proposals.filter( p => (p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n    \n    return proposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Icon, Text, Image, Link } from 'rimble-ui';\n\nclass DashboardMenu extends Component {\n  state = {\n    buyModalOpened:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setBuyModalOpened(buyModalOpened){\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length){\n      return null;\n    }\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return !this.props.isMobile || showMobile;\n    });\n\n    if (!visibleLinks.length){\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === 'dark';\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['theme','darkModeEnabled']);\n\n    return (\n      <Flex\n        p={0}\n        flexDirection={['row','column']}\n      >\n        {\n          !this.props.isMobile &&\n            <Flex\n              p={3}\n              mb={3}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <RouterLink to=\"/\">\n                <Image\n                  position={'relative'}\n                  height={['35px','38px']}\n                  src={ !isDarkTheme ? 'images/logo-gradient.svg' : 'images/logo-white.svg'}\n                />\n              </RouterLink>\n            </Flex>\n        }\n        {\n          visibleLinks.map((menuLink,menuIndex) => {\n            const isExternalLink = menuLink.isExternalLink;\n            const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n            const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n            return (\n              <Box\n                my={[0,2]}\n                key={`menu-${menuIndex}`}\n                width={[1/visibleLinks.length,'auto']}\n              >\n                <LinkComponent\n                  to={menuLink.route}\n                  href={menuLink.route}\n                  style={{textDecoration:'none'}}\n                >\n                  <Flex\n                    py={[2,3]}\n                    px={[2,3]}\n                    borderRadius={[0,2]}\n                    flexDirection={'row'}\n                    alignItems={'center'}\n                    border={menuLink.selected ? 2 : null}\n                    backgroundColor={ menuLink.selected ? 'menuHover' : 'transparent' }\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={['column','row']}\n                      justifyContent={['center','flex-start']}\n                    >\n                      {menuLink.image &&\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          height={['1.2em','1.6em']}\n                          src={ menuLink.selected ? menuLink.image : inactiveImage}\n                        />\n                      }\n                      {menuLink.icon &&\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          align={'center'}\n                          name={menuLink.icon}\n                          size={ this.props.isMobile ? '1.4em' : '1.6em' }\n                          color={ menuLink.selected ? menuLink.bgColor : 'copyColor' }\n                        />\n                      }\n                      <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                        fontSize={['11px',2]}\n                        style={{\n                          whiteSpace:'nowrap'\n                        }}\n                      >\n                        {menuLink.label}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </LinkComponent>\n              </Box>\n            );\n          })\n        }\n        {\n          darkModeEnabled && !this.props.isMobile && (\n            <Box\n              my={[0,2]}\n              width={[1/visibleLinks.length,'auto']}\n            >\n              <Link\n                style={{textDecoration:'none'}}\n                onClick={ e => this.props.setThemeMode(this.props.themeMode === 'light' ? 'dark' : 'light') }\n              >\n                <Flex\n                  py={[2,3]}\n                  px={[2,3]}\n                  borderRadius={[0,2]}\n                  flexDirection={'row'}\n                  alignItems={'center'}\n                  backgroundColor={'transparent'}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    {\n                      this.props.themeMode === 'light' ? (\n                        <Image\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          width={'1.6em'}\n                          height={'1.6em'}\n                          name={'WbSunny'}\n                          align={'center'}\n                          src={'/images/idle-mark-dark.png'}\n                        />\n                      ) : (\n                        <Icon\n                          mr={[0,3]}\n                          ml={[0,2]}\n                          mb={[1,0]}\n                          size={'1.6em'}\n                          name={'WbSunny'}\n                          align={'center'}\n                          color={'copyColor'}\n                        />\n                      )\n                    }\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                      textAlign={'center'}\n                      fontSize={['11px',2]}\n                      style={{\n                        whiteSpace:'nowrap'\n                      }}\n                    >\n                      {this.props.themeMode === 'light' ? 'Join the Dark Side' : 'Back to Light'}\n                    </Text>\n                  </Flex>\n                </Flex>\n              </Link>\n            </Box>\n          )\n        }\n        {\n        /*\n        !this.props.isMobile  &&\n          <Box\n            width={'auto'}\n            borderTop={`1px solid ${theme.colors.divider}`}\n          >\n            <Flex\n              p={[2,3]}\n              style={{\n                cursor:'pointer'\n              }}\n              borderRadius={[0,2]}\n              flexDirection={'row'}\n              alignItems={'center'}\n              onClick={ e => this.setBuyModalOpened(true) }\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={['column','row']}\n                justifyContent={['center','flex-start']}\n              >\n                <Icon\n                  mr={[0,3]}\n                  ml={[0,2]}\n                  mb={[1,0]}\n                  size={'1.6em'}\n                  align={'center'}\n                  color={'copyColor'}\n                  name={'AddCircleOutline'}\n                />\n                <Text\n                  fontWeight={3}\n                  fontSize={[0,2]}\n                  color={'copyColor'}\n                  textAlign={'center'}\n                  style={{\n                    whiteSpace:'nowrap'\n                  }}\n                >\n                  Add Funds\n                </Text>\n              </Flex>\n            </Flex>\n          </Box>\n        <BuyModal\n          {...this.props}\n          isOpen={this.state.buyModalOpened}\n          closeModal={ e => this.setBuyModalOpened(false) }\n        />\n        */\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default DashboardMenu;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened:false,\n    notifications:[],\n    mouseOverBell:false,\n    unreadNotifications:0,\n    lastOpenTimestamp:null,\n    mouseOverNotifications:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened){\n      this.setState({\n        tabOpened:false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length>0){\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged){\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter( n => n.timestamp>this.state.lastOpenTimestamp ).length  : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp(){\n    const lastOpenTimestamp = Date.now();\n    \n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams',notificationsParams,true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications(){\n\n    // Get stored lastOpenTimestamp for notifications\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams',true,{});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    // Get active snapshot proposals\n    const [\n      activeSnapshotProposals,\n      governanceProposals,\n      batchedDeposits\n    ] = await Promise.all([\n      this.functionsUtil.getSnapshotProposals(true),\n      this.governanceUtil.getProposals(null,'Active'),\n      this.functionsUtil.getBatchedDeposits(this.props.account,'executed')\n    ]);\n\n    const currTime = Date.now();\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network','providers','snapshot','urls','proposals']);\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter( n => (n.enabled && n.start<=currTime && n.end>currTime) );\n\n    activeSnapshotProposals.forEach( p => {\n        const text = p.msg.payload.body.replace(/^[#]*/,'');\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image:'/images/snapshot.png',\n          title:'Snapshot Proposal',\n          timestamp:p.msg.payload.start*1000,\n          link:snapshotProposalBaseUrl+p.authorIpfsHash,\n          date:this.functionsUtil.strToMoment(p.msg.payload.start*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n    });\n\n    // Add governance proposals\n    const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance','baseRoute'])+'/proposals/';\n    governanceProposals.forEach( p => {\n      notifications.push(\n        {\n          text:p.title,\n          iconProps:{\n            color:'#00acff'\n          },\n          icon:'LightbulbOutline',\n          timestamp:p.timestamp*1000,\n          title:'Governance Proposal',\n          hash:governanceProposalUrl+p.id,\n          date:this.functionsUtil.strToMoment(p.timestamp*1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        }\n      );\n    });\n\n    // Add Executed Batch Deposits\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+`/tools/${batchDepositConfig.route}/`;\n    Object.keys(batchedDeposits).forEach( batchToken => {\n      const batchInfo = batchedDeposits[batchToken];\n      const timestamp = batchInfo.lastExecution.timeStamp*1000;\n      const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n      notifications.push({\n        text,\n        timestamp,\n        icon:'DoneAll',\n        title:'Batch Deposit Executed',\n        hash:batchDepositBaseUrl+batchToken,\n        iconProps:{\n          color:this.props.theme.colors.transactions.status.completed\n        },\n        date:this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n      });\n    });\n\n    notifications = notifications.sort((a,b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell){\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications){\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab(){\n    this.setState((prevState) => ({\n      tabOpened:!prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification){\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link){\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications>0;\n    const iconColor = hasUnreadNotifications ? '#ffdc00' : 'cellText';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            size={'2.4em'}\n            color={iconColor}\n            name={'Notifications'}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell,(hasUnreadNotifications ? styles.ring : null),(this.state.tabOpened || this.state.notifications.length>0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications && \n              <Box\n                className={styles.counter}\n              >\n                {this.state.notifications.length}\n              </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n            <DashboardCard\n              cardProps={{\n                style:{\n                  right:0,\n                  maxHeight:'21em',\n                  overflow:'scroll',\n                  position:'absolute',\n                  top:this.props.isMobile ? '2.8em' : '3em',\n                },\n                minWidth:['91vw','20em'],\n                onMouseOut:(e) => this.setMouseOverNotifications(false),\n                onMouseOver:(e) => this.setMouseOverNotifications(true),\n              }}\n            >\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n              {\n                this.state.notifications.length>0 ?\n                  this.state.notifications.map( (n,index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration:'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={ e => this.openNotification(n) }\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification,this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index<this.state.notifications.length-1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow:'hidden',\n                              whiteSpace:'nowrap',\n                              textOverflow:'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                : (\n                  <Text\n                    py={2}\n                    textAlign={'center'}\n                  >\n                    There are no notifications.\n                  </Text>\n                )\n              }\n              </Flex>\n            </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Heading.h4\n                    mb={2}\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Tools:\n                  </Heading.h4>\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                    flexDirection={['column','row']}\n                  >\n                    {\n                      showTools.map( toolName => {\n                        const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                        return (\n                          <CardIconButton\n                            {...this.props}\n                            key={`tool_${toolName}`}\n                            cardProps={{\n                              mx:[0,2],\n                              my:[2,0],\n                              width:'auto',\n                              minWidth:['50%','auto']\n                            }}\n                            icon={toolConfig.icon}\n                            text={toolConfig.label}\n                            handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                          />\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </Flex>\n            </ModalCard.Body>\n\n            <ModalCard.Footer>\n              {(this.props.context.active || (this.props.context.error && this.props.context.connectorName)) && (\n                <ButtonLoader\n                  buttonText={'Logout wallet'}\n                  isLoading={this.state.logout}\n                  handleClick={ async () => { await this.logout() } }\n                  buttonProps={{className:styles.gradientButton,borderRadius:'2rem',mt:[4,8],minWidth:['95px','145px'],size:['auto','medium']}}\n                >\n                </ButtonLoader>\n              )}\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from 'react';\nimport styles from './MenuAccount.module.scss';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Icon, Image, Link, Text } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport Notifications from '../Notifications/Notifications';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport AccountModal from \"../utilities/components/AccountModal\";\n\nclass MenuAccount extends Component {\n\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadIdleTokenBalance();\n    }\n  }\n\n  async loadIdleTokenBalance(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled){\n      let idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed){\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n\n      return this.setState({\n        idleTokenBalance\n      });\n    }\n    return null;\n  }\n\n  toggleModal = (modalName) => {\n    this.setState(state => ({...state, isModalOpen: (state.isModalOpen===modalName ? null : modalName) }));\n  }\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem('walletProvider',false,null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig(['connectors',walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    const governanceRoute = this.functionsUtil.getGlobalConfig(['governance','baseRoute']);\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+Object.keys(this.props.availableStrategies)[0];\n\n    return (\n      this.props.account ? (\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n          alignItems={['flex-start','center']}\n        >\n          <Flex\n            mb={[2,0]}\n            flexDirection={'row'}\n            alignItems={'center'}\n            width={[1,'fit-content']}\n            justifyContent={'space-between'}\n          >\n            <DashboardCard\n              {...this.props}\n              cardProps={{\n                py:1,\n                px:[1,2],\n                mr:[2,0],\n                display:'flex',\n                width:[1,'auto']\n              }}\n              isInteractive={true}\n              handleClick={e => this.toggleModal('account')}\n            >\n              <Flex\n                p={0}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={['center','flex-start']}\n              >\n                {\n                  connectorInfo ? (\n                    <Image\n                      mr={[1,2]}\n                      width={'2em'}\n                      height={'2em'}\n                      display={'inline-flex'}\n                      src={`images/${walletIcon}`}\n                      alt={walletProvider.toLowerCase()}\n                    />\n                  ) : (\n                    <Icon\n                      mr={[1,2]}\n                      size={'2em'}\n                      color={'copyColor'}\n                      name={'AccountCircle'}\n                    />\n                  )\n                }\n                <ShortHash\n                  fontSize={2}\n                  fontWeight={3}\n                  color={'copyColor'}\n                  hash={this.props.account}\n                />\n              </Flex>\n            </DashboardCard>\n            {\n              this.props.isMobile &&\n                <Notifications\n                  {...this.props}\n                />\n            }\n          </Flex>\n          <Flex\n            ml={[0,3]}\n            style={{\n              flex:'1 1 auto'\n            }}\n            width={[1,'auto']}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={this.state.idleTokenBalance ? 'space-between' : 'flex-end'}\n          >\n            {\n              this.state.idleTokenBalance && \n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  px={2}\n                  className={styles.balanceButton}\n                  onClick={ e => this.props.setGovModal(true) }\n                >\n                  <Flex\n                    alignItems={'center'}\n                    height={['38px','42px']}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={1}\n                      width={'1.7em'}\n                      height={'1.7em'}\n                      display={'inline-flex'}\n                      src={`images/tokens/IDLE.png`}\n                    />\n                    <Text\n                      color={'white'}\n                      fontSize={[1,2]}\n                      fontWeight={500}\n                    >\n                      {this.state.idleTokenBalance.toFixed(2)} IDLE\n                    </Text>\n                  </Flex>\n                </Link>\n            }\n            <Flex\n              width={'auto'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n            >\n              {\n                governanceEnabled && this.props.isDashboard ? (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(governanceRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Governance\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                ) : this.props.isGovernance && (\n                  <RoundButton\n                    buttonProps={{\n                      mainColor:'redeem',\n                      style:{\n                        width:'auto',\n                        height:this.props.isMobile ? '38px' : '45px'\n                      },\n                      size:this.props.isMobile ? 'small' : 'medium'\n                    }}\n                    handleClick={ (e) => { this.props.goToSection(dashboardRoute,false) } }\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        mr={[1,2]}\n                        size={'1.6em'}\n                        color={'white'}\n                        name={'ExitToApp'}\n                      />\n                      <Text\n                        fontWeight={3}\n                        color={'white'}\n                        fontSize={[2,3]}\n                      >\n                        Dashboard\n                      </Text>\n                    </Flex>\n                  </RoundButton>\n                )\n              }\n              {\n                !this.props.isMobile &&\n                  <Notifications\n                    {...this.props}\n                    flexProps={{\n                      ml:2\n                    }}\n                  />\n              }\n            </Flex>\n          </Flex>\n          <AccountModal\n            {...this.props}\n            isOpen={this.state.isModalOpen==='account'}\n            closeModal={e => this.toggleModal('account') }\n          />\n        </Flex>\n      ) : (\n        <Flex\n          width={1}\n          justifyContent={'flex-start'}\n        >\n          <CardIconButton\n            icon={'Power'}\n            {...this.props}\n            text={'Connect'}\n            handleClick={this.props.connectAndValidateAccount}\n          />\n        </Flex>\n      )\n    );\n  }\n}\n\nexport default MenuAccount;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    // const txStatusChanged = prevState.txStatus !== this.state.txStatus;\n    // if (txStatusChanged && this.state.txStatus === 'success'){\n    //   this.loadTokenInfo();\n    // }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          bgLayer={true}\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.png'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Link\n                  href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                >\n                  <Flex\n                    zIndex={10}\n                    position={'relative'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={2}\n                      color={'white'}\n                      fontWeight={400}\n                    >\n                      Go to governance\n                    </Text>\n                    <Icon\n                      ml={1}\n                      size={'1em'}\n                      color={'white'}\n                      name={\"OpenInNew\"}\n                    />\n                  </Flex>\n                </Link>\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          textColor={'white'}\n                          web3={this.props.web3}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import React, { Component } from 'react';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Button, Icon, Checkbox, Input } from \"rimble-ui\";\n\nclass DelegateVesting extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    newDelegate:'',\n    delegatee:null,\n    vestingAmount:null,\n    currentDelegate:null,\n    delegateAddressValid:false,\n    delegateDifferentWallet:false,\n    vestingContractDelegated:false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const [\n        delegatesChanges,\n        currentDelegate,\n        vestingContract,\n      ] = await Promise.all([\n        this.governanceUtil.getDelegatesChanges(),\n        this.governanceUtil.getCurrentDelegate(this.props.account),\n        this.governanceUtil.getVestingContract(this.props.account)\n      ]);\n\n      // Init flags\n      let delegatee = null;\n      let vestingAmount = null;\n      let vestingContractDelegated = false;\n\n      if (vestingContract){\n        // Take vesting amount\n        vestingAmount = await this.governanceUtil.getVestingAmount(this.props.account);\n\n        // Check Vesting Contract Delegated\n        const lastDelegateTx = delegatesChanges.filter( d => (d.returnValues.delegator.toLowerCase() === vestingContract.toLowerCase() ) ).pop();\n        delegatee = lastDelegateTx ? lastDelegateTx.returnValues.toDelegate : false;\n        vestingContractDelegated = delegatee && delegatee !== '0x0000000000000000000000000000000000000000';\n      }\n\n      return this.setState({\n        delegatee,\n        vestingAmount,\n        currentDelegate,\n        vestingContractDelegated\n      });\n    }\n    return null;\n  }\n\n  /*\n  async delegateTokens(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateTokens',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.idleTokenDelegated = true;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.setDelegate(this.props.account,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n  */\n\n  async delegateVesting(revoke=false){\n\n    let delegate = this.state.delegateDifferentWallet ? this.state.newDelegate : this.props.account;\n    if (revoke){\n      delegate = '0x'+'0'.repeat(40);\n    }\n\n    const delegateValid = this.functionsUtil.checkAddress(delegate);\n    if (!delegateValid){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Governance',\n        eventAction: 'delegateVesting',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        newState.delegatee=delegate;\n        newState.delegateDifferentWallet=false;\n        newState.vestingContractDelegated=!revoke;\n        this.loadData();\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.delegateVesting(this.props.account,delegate,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  changeDelegate(e){\n    const newDelegate = e.target.value;\n    const delegateAddressValid = this.functionsUtil.checkAddress(newDelegate);\n    this.setState({\n      newDelegate,\n      delegateAddressValid\n    });\n  }\n\n  setDelegateDifferentWallet(delegateDifferentWallet){\n    this.setState({\n      delegateDifferentWallet\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  render() {\n    return this.state.vestingAmount ? (\n      <Flex\n        p={2}\n        mt={3}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={1}\n            fontSize={3}\n            fontWeight={500}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            You have {this.state.vestingAmount.div(1e18).toFixed(5)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} in the Vesting Contract\n          </Text>\n          {\n            (this.state.vestingContractDelegated && this.state.delegatee && !this.state.delegateDifferentWallet) ? (\n              <Text\n                mb={1}\n                fontWeight={500}\n                color={'flashColor'}\n                fontSize={'15px'}\n                textAlign={'center'}\n              >\n                Currently your votes are delegated to {this.state.delegatee}\n              </Text>\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  {\n                    this.state.delegateDifferentWallet ? 'Follow the next steps to delegate your tokens:' : 'Press the button below to delegate the votes in the vesting contract to yourself:'\n                  }\n                </Text>\n                {\n                  this.state.delegateDifferentWallet && (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.delegateAddressValid ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.delegateAddressValid ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          textAlign={'left'}\n                          color={'flashColor'}\n                        >\n                          Insert delegate address\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={'LooksTwo'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          ml={1}\n                          fontWeight={500}\n                          fontSize={'15px'}\n                          color={'flashColor'}\n                          textAlign={'left'}\n                        >\n                          Delegate Vesting\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          this.state.delegateDifferentWallet && (\n            <Input\n              mb={2}\n              min={0}\n              type={'text'}\n              required={true}\n              borderRadius={2}\n              fontWeight={500}\n              textAlign={'center'}\n              width={['100%','30em']}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.newDelegate}\n              placeholder={`Insert delegate address`}\n              onChange={this.changeDelegate.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          )\n        }\n        {\n          this.state.processing && this.state.processing.loading ? (\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <TxProgressBar\n                web3={this.props.web3}\n                waitText={`Delegate estimated in`}\n                hash={this.state.processing.txHash}\n                endMessage={`Finalizing delegate request...`}\n                cancelTransaction={this.cancelTransaction.bind(this)}\n              />\n            </Flex>\n          ) : (this.state.vestingContractDelegated && !this.state.delegateDifferentWallet) ? (\n            <Button\n              size={'small'}\n              mainColor={'red'}\n              onClick={ e => this.delegateVesting(true) }\n            >\n              REVOKE DELEGATE\n            </Button>\n          )\n          /*\n          : !this.state.idleTokenDelegated && !this.state.delegateDifferentWallet ? (\n            <Button\n              size={'small'}\n              onClick={ e => this.delegateTokens() }\n            >\n              DELEGATE TOKENS\n            </Button>\n          )*/\n          : (!this.state.vestingContractDelegated || this.state.delegateDifferentWallet) && (\n            <Button\n              size={'small'}\n              mainColor={'blue'}\n              onClick={ e => this.delegateVesting(false) }\n              disabled={ this.state.delegateDifferentWallet && !this.state.delegateAddressValid }\n            >\n              DELEGATE VESTING\n            </Button>\n          )\n        }\n        <Checkbox\n          mt={1}\n          required={false}\n          color={'#f3f6ff'}\n          label={`Delegate to different wallet`}\n          checked={this.state.delegateDifferentWallet}\n          onChange={ e => this.setDelegateDifferentWallet(e.target.checked) }\n        />\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default DelegateVesting;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport MenuAccount from '../MenuAccount/MenuAccount';\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport { Box, Flex, Text, Icon, Button } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DelegateVesting from '../DelegateVesting/DelegateVesting';\n\nclass DashboardHeader extends Component {\n\n  state = {\n    unclaimed:null,\n    vestingAmount:null,\n    govModalOpened:false\n  }\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    if (idleGovTokenEnabled && this.props.account){\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(this.props.account);\n      return this.setState({\n        unclaimed\n      });\n    }\n    return null;\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: 'logout',\n      eventCategory: 'Connect'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async exit(){\n    this.props.goToSection('/',false);\n  }\n\n  setGovModal(govModalOpened){\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        mb={3}\n      >\n        <Flex\n          pb={2}\n          width={1}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n          alignItems={['flex-end','center']}\n          borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n        >\n          <MenuAccount\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) ? (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  IDLE Governance Token is now available, \n                  <ExtLink\n                    ml={1}\n                    fontWeight={500}\n                    color={'primary'}\n                    fontSize={'15px'}\n                    hoverColor={'primary'}\n                    href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n                  >\n                    discover more\n                  </ExtLink>! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to claim.\n                </Text>\n                <Button\n                  ml={[0,2]}\n                  mt={[2,0]}\n                  size={'small'}\n                  mainColor={'blue'}\n                  onClick={ e => this.setGovModal(true) }\n                >\n                  CLAIM NOW\n                </Button>\n              </Flex>\n            </DashboardCard>\n          ) : this.props.isDashboard && (\n            <DashboardCard\n              cardProps={{\n                p:2,\n                mt:3,\n                width:1,\n              }}\n              isActive={true}\n              isInteractive={false}\n            >\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Icon\n                  mr={1}\n                  size={'1.2em'}\n                  color={'flashColor'}\n                  name={'LightbulbOutline'}\n                />\n                <Text\n                  fontWeight={500}\n                  fontSize={'15px'}\n                  color={'flashColor'}\n                  textAlign={'center'}\n                >\n                  Do you have any idea to improve the Idle Protocol? Let's discuss it in our\n                </Text>\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={this.functionsUtil.getGlobalConfig(['forumURL'])}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Governance Forum\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </DashboardCard>\n          )\n        }\n        {\n          this.props.isGovernance && \n            <DelegateVesting\n              {...this.props}\n            />\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false) }\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceButton\":\"MenuAccount_balanceButton__3t7wZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__5m9tk\",\"active\":\"Notifications_active__2Mwzv\",\"ring\":\"Notifications_ring__1ir3w\",\"counter\":\"Notifications_counter__3EbuS\",\"list\":\"Notifications_list__2pkAk\",\"notification\":\"Notifications_notification__TMlFX\",\"dark\":\"Notifications_dark__14hO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__35W_s\",\"newPill\":\"CryptoInput_newPill__2Q8cA\",\"ethInput\":\"CryptoInput_ethInput__3j2LJ\",\"ethInputDark\":\"CryptoInput_ethInputDark__R8OoA\",\"mainInput\":\"CryptoInput_mainInput__1zffg\",\"button\":\"CryptoInput_button__1N9EQ\",\"gradientButton\":\"CryptoInput_gradientButton__2kh5r\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__RvOCw\"};"],"sourceRoot":""}