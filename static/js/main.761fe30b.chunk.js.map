{"version":3,"sources":["FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","RoundButton/RoundButton.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ExtLink/ExtLink.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TxProgressBar/TxProgressBar.js","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CardIconButton/CardIconButton.js","IconBox/IconBox.js","AssetField/AssetField.js"],"names":["FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","alignItems","justifyContent","this","props","flexProps","loaderProps","text","textProps","Component","ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","flexDirection","pr","style","flexBasis","flex","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","shortenHash","hash","shortHash","txStart","substr","txEnd","length","display","React","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","onClick","handleClick","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","size","name","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","state","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","top","zIndex","position","DashboardCard","py","px","transition","isInteractive","cursor","isMobile","overflow","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","mainColor","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","i","selectedToken","tokenConfig","availableTokens","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","minHeight","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ImageButton","image","imageSrc","src","imageProps","iconName","iconProps","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","right","captionPos","subcaption","split","lineHeight","CustomTooltip","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","xFormatted","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","loadData","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","RoundButton","boxShadow","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ExtLink","target","rel","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","loadField","hashChanged","accountChanged","output","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","Title","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","eventData","eventAction","eventCategory","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","link","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","stakedBalance","accountingData","selectedAction","selectedOption","successMessage","tokenWrapperProps","distributionSpeed","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","rewardsPerDay","userDistributionSpeed","totalRewardsPerDay","totalRewards","totalStakingShares","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","log","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","tokensPerSecond","_this6","initialLockedShares","durationSec","stakingShare","rewardMultiplier","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","AssetField","selectToken","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CardIconButton","iconColor","iconBgColor","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","parentProps","goToSection","route","borderBottom","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","integerValue","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","apy","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","batchDepositExecutionSchedule","curveInstructions","analytics","google","events","debugEnabled","addPostfixForTestnet","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","contracts","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","disabledTokens","aprTooltipMode","distributionFrequency","COMP","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","idleDAI+idleUSDC+idleUSDT","compound","compoundWithCOMP","rateField","fulcrum","dsr","dydx","iearn","aave","aavev2","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","requiredConfirmations","accountBalanceMinimum","providers","infura","etherscan","endpoints","snapshot","whitelist","proposals","urls","biconomy","enableLogin","supportedNetworks","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","ethWrapper","subComponent","stake","LpStaking","SushiLiquidityPool","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","ens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","match","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","contractAddress","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","console","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","RegExp","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","orderedTokensBalance","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args4","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","_args5","prevAvgBuyPrice","idleTokensBalance","getFirstDepositTx","deposits","_args7","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args8","acc","_ref11","userAvgPrice","getAmountLent","amountLents","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args11","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee13","allAvailableTokens","_args13","_context13","processStoredTxs","_ref19","_callee14","_args14","_context14","_ref20","_callee15","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args15","_context15","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref21","_callee20","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args20","_context20","baseTokenAddress","_ref22","_callee19","minedTxs","_context19","_ref23","_callee18","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context18","getCurveTokenPrice","t1","_ref24","_callee16","_context16","getTransactionReceipt","_x11","_x12","baseTokensConfig","t2","_ref25","_callee17","_context17","_x13","_x14","_x9","_x10","_ref26","_callee26","txsToProcess","_args26","_context26","_ref27","_callee25","_context25","_ref28","_callee24","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context24","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref29","_callee21","_context21","_x19","_x20","_ref30","_callee22","_context22","_x21","_x22","raw","_ref31","_callee23","_context23","_x23","_x24","decodeLog","_token","_x17","_x18","_x16","_x15","alias","getCustomAddress","setCustomAddress","customAddress","_ref32","_callee27","error_callback","_args27","_context27","catch","_x25","_ref33","_callee28","return_data","_args28","_context28","_x26","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","_ref34","_callee30","googleEventsInfo","originOk","currentNetwork","_args30","_context30","ga","_ref35","_callee29","_context29","hitCallback","hitCallbackFail","_x28","_x29","_x27","createContract","_ref36","_callee31","_context31","Contract","_x30","_x31","_x32","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","getEtherscanTransactionUrl","tx_address","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee34","activeOnly","validProposals","_args34","_context34","getCachedData","addr","msg","_ref38","_callee33","checkedStrategies","_context33","metadata","_ref39","_callee32","_context32","symbol","_x34","_x33","_ref40","_callee35","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args35","_context35","_x35","_ref41","_callee36","_context36","_x36","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee37","contractPaused","_args37","_context37","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref43","_callee39","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context39","lastAllocationsPromise","_ref44","_callee38","lastAllocations","_context38","_x38","_x39","alloc","_x37","checkMigration","_ref45","_callee40","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context40","getContractBalance","_x40","_x41","_ref46","_callee41","callback_receipt","_contract$methods","_context41","getGasPrice","once","confirmationNumber","receipt","_x42","_x43","_x44","_x45","_x46","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref47","_callee42","biconomyInfo","res","_context42","x-api-key","_x47","sendTxWithPermit","_ref48","_callee43","_contract$methods2","messageToSign","_this$getSignaturePar","_context43","encodeABI","_address","personal","sign","_x48","_x49","_x50","_x51","_x52","_x53","buildBiconomyErc20ForwarderTx","_ref49","_callee44","tokenAddress","callData","gasLimit","_context44","erc20ForwarderClient","buildTx","txGas","_x54","_x55","_x56","_x57","_x58","sendBiconomyTxWithErc20Forwarder","_ref50","_callee45","req","metaInfo","txResponse","fetchReceiptIntervalId","_context45","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x59","_x60","_x61","_x62","sendBiconomyTxWithPersonalSign","_ref51","_callee46","_this$getSignaturePar2","_context46","getNonce","call","_x63","_x64","_x65","_x66","signPermitEIP2612","_ref52","_callee47","erc20Name","owner","spender","deadline","domain","domainData","_context47","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","currentProvider","jsonrpc","substring","_x67","_x68","_x69","_x70","_x71","_x72","_x73","_x74","_ref53","_callee48","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args48","_context48","net","getId","allowed","response","_x75","_x76","_x77","_ref54","_callee49","permitParams","methodAbi","useNonce","_args49","_context49","_jsonInterface","f","inputs","unshift","_x78","_x79","_x80","_x81","_x82","_x83","_x84","sendSignedTx","_ref55","_callee50","MetaTransaction","dataToSign","_context50","_x85","_x86","_x87","_x88","_x89","_ref56","_callee51","contractAddr","walletAddr","_ref57","_ref58","allowance","_context51","getAllowance","_x90","_x91","_x92","_ref59","_callee52","_context52","_x93","_x94","_x95","txData","disableERC20","toTwosComplement","loadAssetField","_ref60","_callee53","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref61","_ref62","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref63","_ref64","amountLentCurve1","redeemableBalanceCurve","_ref65","_ref66","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref67","_ref68","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref69","_ref70","tokenPriceFirstDeposit","_ref71","_ref72","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref73","_ref74","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref75","_ref76","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref77","_ref78","amountLentCurve2","redeemableBalanceCurve1","_ref79","_ref80","redeemableBalance2","_args53","_context53","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getIdleGovToken","t3","getCompDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x96","_x97","_x98","_x99","getIdleTokenSupply","_ref81","_callee54","idleTokenSupply","_args54","_context54","_x100","getIdleTokenPriceWithFee","_ref82","_callee55","_ref83","_ref84","priceWFee","_args55","_context55","eq","_x101","_x102","_ref85","_callee56","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args56","_context56","_x103","clearCachedData","useLocalStorage","_ref86","_callee57","_ref87","_ref88","idleTokensTotalSupply","userShare","_context57","_x104","_x105","_callee59","_args59","_context59","_ref90","_callee58","coverageTokens","protocolImage","_context58","_x106","_ref91","_callee60","etherscanEndpoint","_context60","_x107","_callee62","filter_by_status","_args62","_context62","_ref93","_callee61","_ref94","_ref95","_context61","_x108","_ref96","_callee63","fixDecimals","_args63","_context63","_x109","_ref97","_callee64","_ref98","_ref99","_args64","_context64","_x110","_x111","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","checkAddress","_ref100","_callee65","_args65","_context65","_x112","_x113","getProtocolBalance","_ref101","_callee66","_context66","_x114","_x115","getAprs","_ref102","_callee67","_context67","_x116","genericIdleCall","_ref103","_callee68","callParams","_args68","_context68","_x117","estimateGas","_ref104","_callee69","_contract$methods3","_args69","_context69","_x118","_x119","getTxDecodedLogs","_ref105","_callee71","logAddr","decodeLogs","internalTransfers","_context71","_ref106","_callee70","_context70","_x124","_x125","_x120","_x121","_x122","_x123","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee72","_context72","getContractPastEvents","_ref108","_callee73","_args73","_context73","getPastEvents","_x126","_x127","_ref109","_callee74","_contract$methods4","_args74","_context74","_x128","_x129","_ref110","_callee75","_args75","_context75","_x130","_x131","apr2apy","getUnlentBalance","_ref111","_callee76","unlentBalance","_context76","_x132","_ref112","_callee77","_args77","_context77","_x133","_ref113","_callee79","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args79","_context79","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref114","_callee78","_ref115","_ref116","protocolBalance","protocolAllocation","_context78","_x135","_x136","protocolAllocationPerc","getGovTokensBalances","total","getTokenConversionRate","_x134","getUniswapConversionRate_path","_ref117","_callee80","unires","_context80","_x137","_ref118","_callee81","tokenConfigFrom","tokenConfigDest","WETHAddr","_context81","_x138","_x139","getCurveDepositedTokens","_ref119","_callee82","idleTokensBalances","remainingCurveTokens","_args82","_context82","_x140","getCurveUnevenTokenAmounts","_ref120","_callee83","amounts","max_burn_amount","unevenAmounts","_context83","getCurveDepositContract","_x141","_x142","_callee84","curveRatesInfo","_context84","strategyTokens","getCurveAPYContract","_callee85","blocksForPrevTokenPrice","_ref123","_ref124","prevTokenPrice","blocksMultiplier","curveAPR","_context85","getCurveTokenSupply","_callee86","_context86","getCurvePoolContract","_callee87","_args87","_context87","_callee88","_args88","_context88","_ref128","_callee89","_ref129","_ref130","_context89","_x143","_callee90","depositContractInfo","_context90","getCurveZapContract","_callee91","zapContractInfo","_context91","_callee92","poolContractInfo","_context92","getCurveSwapContract","_callee93","_context93","getCurveIdleTokensAmounts","_callee95","max_slippage","curveTokenSupply","curveTokenShare","_args95","_context95","_ref136","_callee94","curveIdleTokens","_context94","_x144","getCurveTokensAmounts","_callee97","useCoinIndex","_args97","_context97","_ref138","_callee96","_ref139","_ref140","totalTokenSupply","_context96","_x145","getCurveAmounts","_ref141","_callee99","_args99","_context99","_ref142","_callee98","_context98","_x148","_x146","_x147","getCurveTokenAmount","_ref143","_callee100","_args100","_context100","_x149","getCurveSlippage","_ref144","_callee101","uneven_amounts","_ref145","_ref146","virtualPrice","Sv","_args101","_context101","_x150","_x151","getCompAPR","_ref147","_callee102","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args102","_context102","_x152","_x153","getCompSpeed","_ref148","_callee103","cTokenAddress","compSpeed","_context103","_x154","_ref149","_callee104","annualize","cTokenInfo","compoundAllocationPerc","_ref150","_ref151","cTokenTotalSupply","compoundPoolShare","_args104","_context104","_x155","_callee106","_args106","_context106","_ref153","_callee105","_ref154","_ref155","_context105","_x156","_callee108","_args108","_context108","_ref157","_callee107","_ref158","_ref159","compApr","_context107","_x157","getTokensCsv","_callee111","csv","_context111","prototype","sum","pv","cv","avg","_ref161","_callee110","_context110","_ref162","_callee109","header","aprAvg","scoreAvg","lastRow","_context109","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x159","_x158","_callee113","_args113","_context113","_ref164","_callee112","compTokenBalance","_context112","_x160","getTokenGovTokens","speed","getGovTokensUserDistributionSpeed","_ref165","_callee115","govTokensUserDistribution","_args115","_context115","_ref166","_callee114","_context114","_x162","_x161","getGovTokensDistributionSpeed","_ref167","_callee117","govTokensDistribution","_args117","_context117","_ref168","_callee116","govSpeed","_context116","_x164","_x163","getGovTokensAprs","_ref169","_callee119","govTokensAprs","_args119","_context119","_ref170","_callee118","_ref171","_ref172","compoundInfo","_context118","_x167","_x165","_x166","_callee121","_args121","_context121","_ref174","_callee120","tokenConversionRate","fromTokenConfig","_context120","_x168","getGovTokenConfigByAddress","_callee122","checkShowBalance","govTokensEarnings","_args122","_context122","govTokenAmount","_callee125","govTokenConfigForced","_args125","_context125","_ref177","_callee124","idleTokenConfig","govTokensAmounts","_context124","_ref178","_callee123","govTokenIndex","govTokenAddress","_context123","_x170","_x171","_x169","getTokenFees","_callee126","_args126","_context126","_callee127","_ref181","_ref182","gain","fees","_args127","_context127","_ref183","_callee128","_args128","_context128","_x172","getTotalTVL","_callee129","tokensTVL","_context129","getTokensTVL","totalTVL","tokenTVL","_callee133","_context133","_ref186","_callee132","_context132","_ref187","_callee131","oldTokenTVL","idleTokenName","_ref188","_ref189","totalSupply","oldTokenConfig","_ref193","_ref194","oldTokenPrice","oldTotalSupply","_context131","_ref190","_callee130","_ref191","_ref192","govTokenConversionRate","govTokenBalanceConverted","_context130","_x175","oldProtocols","oldProtocol","protocolPos","_x174","_x173","getSubstackLatestFeed","_callee134","endpointInfo","idleSubstackFeed","latestFeed","_context134","items","getAggregatedStats","_callee135","totalAUM","_args135","_context135","getAggregatedStats_chain","_callee139","avgAPR","_args139","_context139","_ref198","_callee138","_context138","_ref199","_callee137","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context137","_ref200","_callee136","_ref201","_ref202","_context136","_x178","_x177","_x176","getTokenApy","_ref203","_callee140","_context140","_x179","_callee143","_args143","_context143","_ref205","_callee142","_context142","_ref206","_callee141","_ref207","_context141","_x181","_x180","getProtocolsTokensBalances","_callee145","tokenBalances","minTokenBalance","protocolsTokens","_args145","_context145","_ref209","_callee144","tokenContract","_context144","_x182","_ref210","_callee146","_args146","_context146","_x183","_x184","_x185","getAvgAPYStats","_ref211","_callee147","apiResults","_args147","_context147","_x186","_x187","_ref212","_callee148","_conversionRate","_args148","_context148","_x188","_x189","_ref213","_callee149","_ref214","_ref215","_context149","protocolScore","getTokenScoreApi","_x190","_x191","_ref216","_callee150","_context150","_x192","_x193","_ref217","_callee152","Aprs","addresses","protocolsApys","idleGovTokenShowAPR","idleAPR","_args152","_context152","_ref218","_callee151","addrIndex","protocolApr","protocolApy","_context151","_x195","_x196","_x194","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","current","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","validated","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","pattern","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","autoRefreshOnNetworkChange","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","aToken","CHAI","skipMintForDeposit","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","strategyChanged","self","parent","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","visible","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","react__WEBPACK_IMPORTED_MODULE_9___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","useIconOnly","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","mDate","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","_args","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","_d","add","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","loader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.761fe30b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React from \"react\";\nimport { Text } from \"rimble-ui\";\n\nclass ShortHash extends React.Component {\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  };\n  render() {\n    const shortHash = this.shortenHash(this.props.hash);\n\n    return <Text display={'inline'} {...this.props}>{shortHash}</Text>;\n  }\n}\n\nexport default ShortHash;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(`https://etherscan.io/tx/${txHash}`) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    // console.log('AllocationChart',this.props.token,totalAllocation,protocolsAllocations,protocolsAllocationsPerc);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              href={`https://etherscan.io/tx/${this.props.hash}`}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let bgColor = theme.colors.transactions.actionBg.default;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${transaction.tokenSymbol.toUpperCase()}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.changeInputValue({\n      target:{\n        value:inputValue.toString()\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        web3={this.props.web3}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    {\n                      this.state.showPermitBox && this.props.permitEnabled ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:3,\n                            mt:3,\n                            display:'flex',\n                            alignItems:'center',\n                            flexDirection:'column',\n                            justifyContent:'center',\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'LightbulbOutline'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                            </Text>\n                          </Flex>\n                          <Checkbox\n                            mt={1}\n                            required={false}\n                            checked={this.state.permitEnabled}\n                            label={`Approve and Deposit in a single transaction`}\n                            onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                          />\n                        </DashboardCard>\n                      ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                        <Flex\n                          p={0}\n                          mt={3}\n                          width={1}\n                          borderRadius={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'center'}\n                        >\n                          <Link\n                            textAlign={'center'}\n                            hoverColor={'primary'}\n                            onClick={this.showPermitBox.bind(this)}\n                          >\n                            Having trouble with the Permit signature?\n                          </Link>\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    approveEnabled:false,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (selectedActionChanged || contractApprovedChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n          let rewardsPerDay = this.functionsUtil.BNify(this.state.userDistributionSpeed).gt(0) ? this.state.userDistributionSpeed.times(86400) : this.functionsUtil.BNify(0);\n          const totalRewardsPerDay = this.functionsUtil.BNify(this.state.distributionSpeed).gt(0) ? this.functionsUtil.formatMoney(Math.min(parseFloat(this.state.totalRewards),parseFloat(rewardsPerDay.plus(this.state.distributionSpeed.times(inputValue).div(this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue)).times(86400))))) : this.functionsUtil.formatMoney(0);\n          // console.log(parseFloat(rewardsPerDay),parseFloat(totalRewardsPerDay));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue} ${this.state.tokenConfig.token}</strong> you will get <strong>${totalRewardsPerDay} ${this.state.contractInfo.rewardToken} / day</strong><br /><small style=\"color:#ff9900\">(based on you current reward multiplier)</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue.toString()],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    newState.balanceProp = this.functionsUtil.BNify(0)\n    newState.tokenBalance = this.functionsUtil.BNify(await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account));\n    newState.stakedBalance = this.functionsUtil.BNify(await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]));\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.state.stakedBalance.toString()],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n      distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakingShare = accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    globalStats.push({\n      title:'Distribution rate',\n      description:'Your daily rewards distribution based on your current multiplier',\n      value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    });\n\n    globalStats.push({\n      title:'Reward Multiplier',\n      value:`${rewardMultiplier}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Current Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    this.setState({\n      stats,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    width:[1,'32%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading balance...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let tokensEarnings = {};\n    let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n      estimationStepsPerc = Math.max(estimationStepsPerc,maxPossibleStep);\n\n      // console.log(token,amountLent.toFixed(5),earnings.toFixed(5),earningsYear.toFixed(5),tokenConfig,tokenAprs,tokenAPR.toFixed(5),tokenAPY.toFixed(5),earningsPercStep,maxPossibleStep,estimationStepsPerc);\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    // console.log(estimationStepsOptions,estimationStepsDefaultOption)\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={`images/tokens/${token}.svg`} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy);\n          const tokenWeight = portfolio.tokensBalance[token].tokenBalance.div(portfolio.totalBalance);\n\n          if (tokenAPY){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (tokenScore){\n            avgScore = avgScore.plus(tokenScore.times(tokenWeight));\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'#ff9900'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.6',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      icon:'tokens/ETH.svg',\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      disabledTokens:[], // Disable IDLE distribution for idleToken\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    }\n  },\n  contracts:{\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        rateField:['rate','compoundAdditionalAPR'],\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        }\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530' // Mainnet\n          }\n        }\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str.substr(0,1).toUpperCase()+str.substr(1);\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (tx_address) => {\n    return tx_address ? 'https://etherscan.io/tx/'+tx_address : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    return address ? 'https://etherscan.io/address/'+address : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try{\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error){\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toString() : null,tokenApys.avgApy ? tokenApys.avgApy.toString() : null);\n\n        if (tokenApys && tokenApys.avgApy !== null){\n          output = tokenApys.avgApy;\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = null;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 5 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (idleTokensBalance && idleTokensTotalSupply){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    return await this.genericContractCall(contractName, 'getAPRs');\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',tokenConfigFrom,tokenConfigDest,path,unires);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        if (!govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n          output[govToken] = govTokenConfig;\n        }\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency) => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      switch (frequency){\n        case 'day':\n          const blocksPerDay = blocksPerYear.div(365.242199);\n          speed = speed.times(blocksPerDay);\n        break;\n        case 'week':\n          const blocksPerWeek = blocksPerYear.div(52.1429);\n          speed = speed.times(blocksPerWeek);\n        break;\n        case 'month':\n          const blocksPerMonth = blocksPerYear.div(12);\n          speed = speed.times(blocksPerMonth);\n        break;\n        case 'year':\n          speed = speed.times(blocksPerYear);\n        break;\n        default:\n        break;\n      }\n      return speed;\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      let govSpeed = null;\n      switch (govToken){\n        case 'COMP':\n          const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n          if (cTokenInfo){\n            govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const compoundInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (compoundInfo){\n                  if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n          } catch (error) {\n            \n          }\n        }\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return govTokensBalances;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return null;\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      // console.log('CACHED -',count,cachedDataKey,this.BNify(cachedData).toFixed());\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    // console.log('TOKEN DATA - ',tokenConfig.address,isRisk,tokenData);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    } else {\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n      const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n      if (!this.BNify(conversionRate).isNaN()){\n        // console.log('NOT CACHED -',count,cachedDataKey,this.BNify(conversionRate).toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n      }\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n              // this.customLog(protocolAddr,tokenAllocation.protocolsAllocationsPerc[protocolAddr].toFixed(6),protocolScore.toFixed(6),tokenScore.toFixed(6));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let tokenData = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (tokenData && tokenData.length){\n      let tokenScore = this.BNify(tokenData[0].idleScore);\n      if (tokenScore && tokenScore.gt(0)){\n        // Set cached data\n        return this.setCachedData(cachedDataKey,tokenScore);\n      // Take latest historical valid score\n      } else {\n        const timestamp = parseInt(Date.now()/1000);\n        const startTimestamp = parseInt(timestamp)-(60*60*24);\n        tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n        const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n        if (filteredTokenData.length){\n          tokenScore = this.BNify(filteredTokenData[0].idleScore);\n          if (!this.BNify(tokenScore).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      return false;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const protocolsAprs = {};\n    const protocolsApys = {};\n    let compAPR = null;\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens && protocolInfo.name === 'compound'){\n          compAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    const tokenAprs = {\n      avgApr: null,\n      avgApy: null\n    };\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      if (compAPR){\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(compAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(compAPR);\n      }\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return null;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    // console.log('onActivation',this.provider);\n\n    if (this.provider){\n\n      await this.provider.enable();\n\n      /*\n      // Subscribe to accounts change\n      this.provider.on(\"accountsChanged\", (accounts) => {\n        console.log('accountsChanged',accounts);\n      });\n\n      // Subscribe to chainId change\n      this.provider.on(\"chainChanged\", (chainId) => {\n        console.log('chainChanged',chainId);\n      });\n\n      // Subscribe to networkId change\n      this.provider.on(\"networkChanged\", (networkId) => {\n        console.log('networkChanged',networkId);\n      });\n\n      // Subscribe to session connection/open\n      this.provider.on(\"open\", () => {\n        console.log('open');\n      });\n\n      // Subscribe to session disconnection/close\n      this.provider.on(\"close\", (code, reason) => {\n        console.log('close',code, reason);\n      });\n      */\n\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: [defaultNetwork]\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageSrc={`images/${walletIcon}`}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/browser-wallet.png`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged/* || availableTokensChanged*/ || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    // Suppress console warning\n    if (window.ethereum && window.ethereum.autoRefreshOnNetworkChange) {\n      window.ethereum.autoRefreshOnNetworkChange = false;\n    }\n\n    const context = this.props.context;\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[globalConfigs.network.requiredNetwork]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(globalConfigs.network.requiredNetwork) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(globalConfigs.network.requiredNetwork) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = { ...this.state.network };\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = { ...this.state.network };\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = { ...this.state.network };\n    network.isCorrectNetwork = this.state.network.current.id === this.state.network.required.id;\n\n    // console.log('checkNetwork',this.state.network.current.id,this.state.network.required.id);\n\n    // To do, check window.web3.currentProvider.networkVersion to see if Metamask is in the requiredNetwork\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n\n    // this.functionsUtil.customLog('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n\n    modals.data.connectionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:USDC,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    cachedData:{},\n    buyToken: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = () => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    this.setState({\n      cachedData:{}\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = globalConfigs.network.requiredNetwork;\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = availableTokens[requiredNetwork][strategy];\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && this.state.availableStrategies[selectedStrategy]){\n      newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadAvailableTokens();\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n\n    if (tokenChanged || strategyChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n      window.parent.closeIframe(window.self);\n    }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      web3={this.props.web3}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          const [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = this.props.tokenConfig && this.props.tokenConfig.icon ? this.props.tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        // console.log('score',this.state.score);\n        output = this.state.score !== undefined && this.state.score !== null ? (\n          <SmartNumber {...fieldProps} decimals={1} number={this.state.score} />\n        ) : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}