{"version":3,"sources":["ImageButton/ImageButton.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","SmartNumber/SmartNumber.js","RoundIconButton/RoundIconButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","TrancheField/TrancheField.js","CardIconButton/CardIconButton.js","TxProgressBar/TxProgressBar.js","GenericSelector/GenericSelector.js","theme.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","AssetSelector/AssetSelector.js","utilities/components/Header.module.scss","Tos/Tos.module.scss","TransactionField/TransactionField.js","ExecuteTransaction/ExecuteTransaction.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","DashboardCard/DashboardCard.js","utilities/components/BuyModal.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","CustomList/CustomList.js","FlexLoader/FlexLoader.js","ExtLink/ExtLink.js","Title/Title.js","AssetField/AssetField.js","RoundButton/RoundButton.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","length","ml","hoverColor","path","index","link","pathLink","Link","Text","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","ShortHash","state","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","prevProps","prevState","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","SmartNumber","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","forEach","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","RoundIconButton","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","cardProps","left","data","itemPos","xFormatted","mb","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","selectedToken","setStateSafe","newState","callback","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","_this3","onMouseLeave","tooltipFormat","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","pr","flexBasis","flex","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","action","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","trancheDetails","rgb","align","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","CardIconButton","isInteractive","isDisabled","useIconOnly","iconColor","isSidebar","iconBgColor","actionBg","redeem","textProps","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","mt","target","rel","href","getEtherscanTransactionUrl","cancelTransaction","cancelTextColor","cancelTextHoverColor","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","bind","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","gradientButton","empty","select","selectDark","input","TransactionField","hashChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","availableStrategies","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","disabledTokens","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","env","process","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","networkId","ensConfig","TTL","provider","ens","addressCheck","current","supportedNetworks","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getEtherscanBaseTxs","_callee23","firstBlockNumber","endBlockNumber","debug","firstIdleBlockNumber","requiredNetwork","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","_args23","_context23","endpoints","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","saveEtherscanTxs","makeRequest","now","_callee24","_args24","_context24","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee25","_ref36","allAvailableTokens","_args25","_context25","processStoredTxs","sort","_ref37","_callee26","_args26","_context26","_x25","_ref38","_callee27","processTxs","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args27","_context27","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","_x26","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref39","_callee32","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args32","_context32","baseTokenConfig","baseToken","baseTokenAddress","_ref40","_callee31","minedTxs","_context31","_ref41","_callee30","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context30","getCurveTokenPrice","t1","_ref42","_callee28","_context28","getTransactionReceipt","_x31","_x32","topics","baseTokensConfig","t2","_ref43","_callee29","_context29","_x33","_x34","_x29","_x30","_x28","_x27","_ref44","_callee38","txsToProcess","_args38","_context38","_ref45","_callee37","_context37","_ref46","_callee36","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context36","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref47","_callee33","_context33","txReceipt","_x39","_x40","_ref48","_callee34","_context34","_x41","_x42","oldContract","raw","_ref49","_callee35","_context35","_x43","_x44","abi","decodeLog","internalType","_token","_x37","_x38","_x36","_x35","alias","getCustomAddress","setCustomAddress","customAddress","_ref50","_callee39","error_callback","config","_args39","_context39","catch","_x45","makeEtherscanApiRequest","_ref51","_callee40","apiKeyIndex","apiKey","_args40","_context40","_x46","_ref52","_callee41","return_data","_args41","_context41","_x47","code","errorCode","array","prop","shift","configs","checkUrlOrigin","baseURL","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee42","page","googlePageviewInfo","isOrigin","_args42","_context42","ga","_ref54","_callee44","googleEventsInfo","debugEnabled","originOk","currentNetwork","_args44","_context44","addPostfixForTestnet","availableNetworks","_ref55","_callee43","_context43","hitCallback","hitCallbackFail","_x49","_x50","_x48","createContract","_ref56","_callee45","_context45","Contract","_x51","_x52","_x53","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee48","activeOnly","whitelist","proposals","currTime","validProposals","_args48","_context48","getCachedData","addr","msg","payload","_ref58","_callee47","checkedStrategies","_context47","snapshot","metadata","strategies","_ref59","_callee46","_context46","symbol","_x55","_x54","_ref60","_callee49","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args49","_context49","rates","_x56","getTokenExchangeRate","_ref61","_callee50","exchangeRateParams","exchangeRate","_context50","_x57","_x58","getTokenDecimals","_ref62","_callee51","_context51","_x59","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee52","idleTokenConfig","feeDistributorConfig","etherscanEndpoint","etherscanTxlist","_context52","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee53","contractPaused","_args53","_context53","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref65","_callee55","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context55","lastAllocationsPromise","_ref66","_callee54","lastAllocations","_context54","_x61","_x62","alloc","_x60","checkMigration","_ref67","_callee56","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context56","getContractBalance","_x63","_x64","_ref68","_callee57","eventName","_args57","_context57","getContractPastEvents","_x65","_x66","estimateMethodGasUsage","_ref69","_callee58","methodParams","_contract$methods","functionCall","gasLimit","_ref70","_ref71","_args58","_context58","methods","getGasPrice","estimateGas","_x67","_x68","_ref72","_callee59","userAddress","signedParameters","callback_receipt","_contract$methods2","_context59","on","once","confirmationNumber","receipt","_x69","_x70","_x71","_x72","_x73","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","chainId","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref73","_callee60","biconomyInfo","res","_context60","limits","apiId","headers","x-api-key","_x74","sendTxWithPermit","_ref74","_callee61","_contract$methods3","messageToSign","_this$getSignaturePar","_context61","encodeABI","_address","personal","sign","_x75","_x76","_x77","_x78","_x79","_x80","buildBiconomyErc20ForwarderTx","_ref75","_callee62","tokenAddress","permitType","callData","buildParams","_context62","txGas","erc20ForwarderClient","buildTx","_x81","_x82","_x83","_x84","_x85","_ref76","_callee64","_context64","_ref77","_callee63","_context63","_x87","_x88","_x86","sendBiconomyTxWithErc20Forwarder","_ref78","_callee65","req","metaInfo","txResponse","fetchReceiptIntervalId","_context65","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x89","_x90","_x91","_x92","sendBiconomyTxWithPersonalSign","_ref79","_callee66","_this$getSignaturePar2","_context66","getNonce","call","_x93","_x94","_x95","_x96","signPermitEIP2612","_ref80","_callee67","erc20Name","owner","spender","deadline","domain","permit","domainData","_context67","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x97","_x98","_x99","_x100","_x101","_x102","_x103","_x104","signPermit","_ref81","_callee68","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args68","_context68","net","getId","round","nonceMethod","pow","allowed","response","_x105","_x106","_x107","_ref82","_callee69","permitParams","methodAbi","useNonce","_args69","_context69","_jsonInterface","f","inputs","unshift","_x108","_x109","_x110","_x111","_x112","_x113","_x114","sendSignedTx","_ref83","_callee70","MetaTransaction","dataToSign","_context70","_x115","_x116","_x117","_x118","_x119","checkTokenApproved","_ref84","_callee71","contractAddr","walletAddr","_ref85","_ref86","allowance","_context71","getAllowance","gte","_x120","_x121","_x122","_ref87","_callee72","_context72","_x123","_x124","_x125","contractMethodSendWrapperWithValue","txData","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref88","_callee73","stakedBalance","_args73","_context73","_x126","_x127","getTrancheStakingRewards","_ref89","_callee75","_context75","_ref90","_callee74","tokenGlobalConfig","_context74","_x130","_x128","_x129","_ref91","_callee76","field","_args76","_context76","_x131","_x132","_x133","_x134","_x135","_x136","_x137","_x138","_ref92","_callee77","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref93","_ref94","totalSupply","virtualPrice","_ref95","_ref96","staked1","lastPrice1","_ref97","_ref98","deposited1","lastPrice","_ref99","_ref100","redeemable1","staked2","_ref101","_ref102","trancheApy2","deposited3","_ref103","_ref104","trancheFee","_ref105","_ref106","deposited4","redeemable3","_ref107","_ref108","deposited2","redeemable2","_ref109","_ref110","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref111","_ref112","rewardsTokens","incentiveTokens","govTokens","_args77","_context77","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x139","_x140","_x141","_x142","_x143","_x144","_x145","loadAssetField","_ref113","_callee78","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref114","_ref115","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref116","_ref117","amountLentCurve1","redeemableBalanceCurve","_ref118","_ref119","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref120","_ref121","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref122","_ref123","tokenPriceFirstDeposit","_ref124","_ref125","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref126","_ref127","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref128","_ref129","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref130","_ref131","amountLentCurve2","redeemableBalanceCurve1","_ref132","_ref133","redeemableBalance2","_args78","_context78","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x146","_x147","_x148","_x149","getIdleTokenSupply","_ref134","_callee79","idleTokenSupply","_args79","_context79","_x150","getIdleTokenPriceWithFee","_ref135","_callee80","_ref136","_ref137","fee","priceWFee","_args80","_context80","eq","_x151","_x152","_ref138","_callee81","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args81","_context81","_x153","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref139","_callee82","_ref140","_ref141","idleTokensTotalSupply","userShare","_context82","_x154","_x155","_callee84","coverProtocolConfig","nexusMutualConfig","_args84","_context84","_ref143","_callee83","coverage","coverageTokens","protocolImage","_context83","tokens","expirationTimestamp","utc","_x156","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref144","_callee86","incidentsInfo","_ref145","_ref146","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context86","directProps","startBlock","contractInfo","buyer","_ref147","_callee85","cover","coverId","claimSubmittedEvent","_ref148","_ref149","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref150","_ref151","_context85","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x158","_x157","getBatchedDepositExecutions","_ref152","_callee87","_context87","_x159","getBatchedDeposits","_callee89","filter_by_status","batchDepositConfig","batchedDeposits","_args89","_context89","_ref154","_callee88","currBatchIndex","batchIndex","_ref155","_ref156","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context88","_x160","getETHBalance","_ref157","_callee90","fixDecimals","_args90","_context90","_x161","_ref158","_callee91","_ref159","_ref160","_args91","_context91","_x162","_x163","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","match","_ref161","_callee92","_args92","_context92","_x164","_ref162","_callee93","_args93","_context93","_x165","_ref163","_callee94","_args94","_context94","_x166","_x167","getProtocolBalance","_ref164","_callee95","_context95","_x168","_x169","getAprs","_ref165","_callee96","_context96","addresses","_x170","genericIdleCall","_ref166","_callee97","callParams","_args97","_context97","_x171","_ref167","_callee98","_contract$methods4","_args98","_context98","_x172","_x173","getTxDecodedLogs","_ref168","_callee100","logAddr","decodeLogs","internalTransfers","_context100","_ref169","_callee99","_context99","_x178","_x179","_x174","_x175","_x176","_x177","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee101","_context101","_ref171","_callee102","_context102","getBlock","_x180","_ref172","_callee103","_args103","_context103","getPastEvents","_x181","_x182","_ref173","_callee104","_args104","_context104","_x183","_x184","_ref174","_callee105","_contract$methods5","_args105","_context105","_x185","_x186","_ref175","_callee106","async","_args106","_context106","_x187","_x188","getUnlentBalance","_ref176","_callee107","unlentBalance","_context107","_x189","_ref177","_callee108","_args108","_context108","_x190","getLastAllocations","_ref178","_callee110","tokenAllocations","_context110","_ref179","_callee109","_context109","_x192","_x193","_x191","_ref180","_callee111","protocolsAprs","_ref181","_ref182","govTokensBalances","_args111","_context111","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x194","getSushiswapPoolTokenPrice","_ref183","_callee112","pairAddresses","_ref184","_ref185","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref186","_ref187","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context112","getSushiswapConversionRate","_x195","_x196","_ref188","_callee113","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context113","_x197","_x198","_ref189","_callee114","unires","_context114","addressForPrice","_x199","_x200","getCurveDepositedTokens","_ref190","_callee115","idleTokensBalances","remainingCurveTokens","_args115","_context115","_x201","getCurveUnevenTokenAmounts","_ref191","_callee116","amounts","max_burn_amount","unevenAmounts","_context116","getCurveDepositContract","_x202","_x203","_callee117","curveRatesInfo","_context117","strategyTokens","getCurveAPYContract","_callee118","blocksForPrevTokenPrice","_ref194","_ref195","prevTokenPrice","blocksMultiplier","curveAPR","_context118","getCurveTokenSupply","_callee119","_context119","getCurvePoolContract","_callee120","_args120","_context120","_callee121","_args121","_context121","_ref199","_callee122","_ref200","_ref201","_context122","_x204","_callee123","depositContractInfo","_context123","getCurveZapContract","_callee124","zapContractInfo","_context124","_callee125","poolContractInfo","_context125","getCurveSwapContract","_callee126","migrationContractInfo","_context126","getCurveIdleTokensAmounts","_callee128","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args128","_context128","_ref207","_callee127","coinIndex","curveIdleTokens","_context127","migrationParams","_x205","getCurveTokensAmounts","_callee130","useCoinIndex","_args130","_context130","_ref209","_callee129","_ref210","_ref211","idleTokenPrice","totalTokenSupply","_context129","_x206","getCurveAmounts","_ref212","_callee132","_args132","_context132","_ref213","_callee131","_context131","_x209","_x207","_x208","getCurveTokenAmount","_ref214","_callee133","_args133","_context133","_x210","getCurveSlippage","_ref215","_callee134","uneven_amounts","depositContract","_ref216","_ref217","Sv","_args134","_context134","_x211","_x212","_ref218","_callee135","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref219","_ref220","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args135","_context135","_x213","_callee137","_args137","_context137","_ref222","_callee136","_ref223","_ref224","_context136","_x214","getStkAaveApr","_ref225","_callee138","aaveConversionRate","stkAaveAPR","destTokenConfig","stkAaveValue","_args138","_context138","_x215","_x216","getCompAPR","_ref226","_callee139","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args139","_context139","_x217","_x218","getCompSpeed","_ref227","_callee140","cTokenAddress","compSpeed","_context140","_x219","_ref228","_callee141","cTokenInfo","compoundAllocationPerc","_ref229","_ref230","cTokenTotalSupply","compoundPoolShare","_args141","_context141","_x220","_callee143","_args143","_context143","_ref232","_callee142","_ref233","_ref234","_context142","_x221","_callee145","_args145","_context145","_ref236","_callee144","_ref237","_ref238","compApr","_context144","_x222","getTokensCsv","_callee148","csv","_context148","prototype","sum","pv","cv","avg","_ref240","_callee147","strategy","_context147","_ref241","_callee146","header","aprAvg","scoreAvg","lastRow","_context146","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x224","_x223","_callee150","govToken","convertToken","_args150","_context150","_ref243","_callee149","compTokenBalance","_context149","_x225","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref244","_callee152","govTokensUserDistribution","_args152","_context152","_ref245","_callee151","_context151","_x227","_x226","_ref246","_callee154","govTokensDistribution","tokenGovTokens","_args154","_context154","_ref247","_callee153","govSpeed","_context153","_x229","_x228","getGovTokensAprs","_ref248","_callee156","govTokensAprs","_args156","_context156","_ref249","_callee155","_ref250","_ref251","_ref252","_ref253","cTokenConfig","_context155","aprTooltipMode","_x232","_x230","_x231","_callee158","_args158","_context158","_ref255","_callee157","govTokenBalance","tokenConversionRate","fromTokenConfig","_context157","_x233","_callee159","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args159","_context159","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref257","_callee161","govTokensAmounts","_context161","getGovTokensUserAmounts","_ref258","_callee160","_context160","getGovTokenAddessByIndex","_x236","_x237","_x234","_x235","_ref259","_callee162","_context162","_x238","_x239","_ref260","_callee163","_context163","_x240","_x241","_callee166","govTokenConfigForced","_args166","_context166","_ref262","_callee165","_context165","_ref263","_callee164","_context164","_x243","_x244","_x242","getTokenFees","_callee167","_args167","_context167","_callee168","_ref266","_ref267","feePercentage","gain","fees","_args168","_context168","_ref268","_callee169","_args169","_context169","_x245","getTotalTVL","_callee170","tokensTVL","_context170","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee174","_context174","_ref271","_callee173","_context173","_ref272","_callee172","oldTokenTVL","idleTokenName","_ref273","_ref274","oldTokenConfig","_ref278","_ref279","oldTokenPrice","oldTotalSupply","_context172","showAUM","_ref275","_callee171","_ref276","_ref277","govTokenConversionRate","govTokenBalanceConverted","_context171","_x248","oldProtocols","oldProtocol","protocolPos","_x247","_x246","getSubstackLatestFeed","_callee175","endpointInfo","idleSubstackFeed","latestFeed","_context175","items","getAggregatedStats","_callee176","tvls","totalAUM","_args176","_context176","getAggregatedStats_chain","_callee180","avgAPR","_args180","_context180","_ref283","_callee179","_context179","_ref284","_callee178","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context178","_ref285","_callee177","_ref286","_ref287","_context177","_x251","_x250","_x249","getTokenApy","_ref288","_callee181","_context181","_x252","getTokensToMigrate","_callee184","tokensToMigrate","_args184","_context184","_ref290","_callee183","_context183","_ref291","_callee182","_ref292","_context182","_x254","_x253","getProtocolsTokensBalances","_callee186","tokenBalances","minTokenBalance","protocolsTokens","_args186","_context186","_ref294","_callee185","tokenContract","_context185","_x255","_ref295","_callee187","_args187","_context187","_x256","_x257","_x258","getAvgAPYStats","_ref296","_callee188","apiResults","_args188","_context188","_x259","_x260","_ref297","_callee189","count","_conversionRate","_args189","_context189","_x261","_x262","getTokenScore","_ref298","_callee190","_ref299","_ref300","tokenScore","_context190","protocolScore","getTokenScoreApi","_x263","_x264","_ref301","_callee191","scores","_context191","_x265","_x266","_ref302","_callee192","idleGovTokenShowAPR","idleAPR","_args192","_context192","_x267","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","placement","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","providers","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","required","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","distributionSpeed","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","rewardMultiplier","accountingData","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","programDuration","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","baseEndpoint","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","totalBalanceWithScore","apyLong","riskScore","yieldFarming","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","COMP","stkAAVE","aToken","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","3","4","42","1337","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","nexus","etherscan","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","maxHeight","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","_args4","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","_args7","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","crToken","fToken","defiScoreDisabled","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","CustomField","componentHasChildren","fieldPath","customFieldName","customFieldProps","rowIndex","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.1623f675.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    \"near-black\": \"#111\",\n    \"dark-gray\": \"#4e4e4e\",\n    \"mid-gray\": \"#999\",\n    gray: \" #e0e0e0\",\n    grey: \"#CCC\",\n    silver: \"#999\",\n    \"light-silver\": \"#aaa\",\n    \"moon-gray\": \"#ccc\",\n    \"light-gray\": \"#eee\",\n    \"near-white\": \"#f4f4f4\",\n\n    white: \"#fff\",\n    transparent: \"transparent\",\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,this.props.getTransactionParams,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n      return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n    });\n    return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n      lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n      return lastAllocations;\n    },{});\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokensApr);\n      // tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokensApr);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport IDLE from \"../contracts/IDLE.json\";\nimport WETH from \"../abis/tokens/WETH.json\";\nimport ERC20 from \"../contracts/ERC20.json\";\nimport Tranches from \"../Tranches/Tranches\";\nimport COMP from \"../abis/compound/COMP.json\";\nimport aToken from \"../abis/aave/AToken.json\";\nimport TokenSwap from \"../TokenSwap/TokenSwap\";\nimport yDAIv3 from \"../abis/iearn/yDAIv3.json\";\nimport LpStaking from \"../LpStaking/LpStaking\";\nimport stkIDLE from \"../contracts/stkIDLE.json\";\nimport yUSDCv3 from \"../abis/iearn/yUSDCv3.json\";\nimport yUSDTv3 from \"../abis/iearn/yUSDTv3.json\";\nimport ySUSDv3 from \"../abis/iearn/ySUSDv3.json\";\nimport yTUSDv3 from \"../abis/iearn/yTUSDv3.json\";\nimport Timelock from \"../contracts/Timelock.json\";\nimport CurveZap from \"../abis/curve/CurveZap.json\";\nimport CovToken from \"../abis/cover/CovToken.json\";\nimport B2BVester from \"../contracts/B2BVester.json\";\nimport IdleStaking from \"../IdleStaking/IdleStaking\";\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport EarlyRewards from \"../contracts/EarlyRewards.json\";\nimport CoverProtocol from \"../CoverProtocol/CoverProtocol\";\nimport CurveDeposit from \"../abis/curve/CurveDeposit.json\";\nimport VesterFactory from \"../contracts/VesterFactory.json\";\nimport GovernorAlpha from \"../contracts/GovernorAlpha.json\";\nimport EcosystemFund from \"../contracts/EcosystemFund.json\";\nimport Comptroller from \"../abis/compound/Comptroller.json\";\nimport erc20Forwarder from \"../contracts/erc20Forwarder.json\";\nimport BalancerPool from \"../abis/balancer/BalancerPool.json\";\nimport IdleController from \"../contracts/IdleController.json\";\nimport TokenMigration from \"../TokenMigration/TokenMigration\";\nimport BatchMigration from \"../BatchMigration/BatchMigration\";\nimport IdleBatchedMint from \"../contracts/IdleBatchedMint.json\";\nimport { RampInstantSDK } from \"@ramp-network/ramp-instant-sdk\";\nimport IdleProxyMinter from \"../contracts/IdleProxyMinter.json\";\nimport IdleRebalancerV3 from \"../contracts/IdleRebalancerV3.json\";\nimport LiquidityGaugeV2 from \"../abis/curve/LiquidityGaugeV2.json\";\nimport DeployB2BVesting from \"../DeployB2BVesting/DeployB2BVesting\";\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage:\n      \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint:\n      \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee:\n      \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed:\n      \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr:\n      \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance:\n      \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort:\n      \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov:\n      \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule:\n      \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    apyLong:\n      \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    yieldFarming:\n      'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    baseRoute: \"/governance\",\n    props: {\n      tokenName: \"IDLE\",\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      12:{\n        description:'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.png\",\n      disabledTokens: [\"idleFEIYield\"], // Disable IDLE distribution for idleToken\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\" // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: \"stkAAVE\",\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: \"aavev2\",\n      aprTooltipMode: false,\n      distributionMode: \"second\",\n      color: \"hsl(314, 41%, 51%)\",\n      distributionFrequency: \"day\",\n      address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\", // MAIN\n      addressForPrice: \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\", // MAIN\n      disabledTokens: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"],\n    }\n  },\n  contracts: {\n    ProxyFactory: {\n      abi: MinimalInitializableProxyFactory,\n      address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n    },\n    LockedIDLE: {\n      abi: LockedIDLE,\n      address: \"0xF241a0151841AE2E6ea750D50C5794b5EDC31D99\"\n    },\n    FeeTreasury: {\n      abi: FeeTreasury,\n      address: \"0x69a62c24f16d4914a48919613e8ee330641bcb94\" // MAIN\n    },\n    PriceOracle: {\n      abi: PriceOracle,\n      address: \"0x972A64d108e250dF98dbeac8170678501f5EF181\" // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock: {\n      abi: Timelock,\n      address: \"0xD6dABBc2b275114a2366555d6C481EF08FDC2556\" // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund: {\n      abi: EcosystemFund,\n      address: \"0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7\" // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory: {\n      abi: VesterFactory,\n      address: \"0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972\" // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController: {\n      abi: IdleController,\n      address: \"0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE\" // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards: {\n      abi: EarlyRewards,\n      address: \"0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc\" // MAIN\n      // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha: {\n      abi: GovernorAlpha,\n      address: \"0x2256b25CFC8E35c3135664FD03E77595042fe31B\" // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller: {\n      abi: Comptroller,\n      address: \"0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b\" // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter: {\n      abi: SushiV2Router02,\n      address: \"0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F\"\n    },\n    UniswapRouter: {\n      abi: UniswapV2Router02,\n      address: \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\"\n    },\n    BalancerExchangeProxy: {\n      abi: BalancerExchangeProxy,\n      address: \"0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21\"\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\n      \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\n          \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\n          \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons:{\n    best:{\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark:\"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches:{\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark:\"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk:{\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark:\"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats:{\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark:\"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools:{\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark:\"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum:{\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark:\"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake:{\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark:\"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    }\n  },\n  strategies:{\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\n        \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\n        \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\n        \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs:[],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\n        \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs:[],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\n        \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/rates/\"\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: \"https://api.idle.finance/tvls/\"\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: \"https://api.idle.finance/substack/\"\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: \"https://api.idle.finance/scores/\"\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY\n        ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` }\n        : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI','FEI'],\n        additionalProtocols:[\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: \"#F7B24A\",\n          hsl: [\"40\", \"95%\", \"59%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 2]\n        },\n        startTimestamp: \"2020-02-11\",\n        address: \"0x6b175474e89094c44da98b954eedeac495271d0f\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        icon: \"images/tokens/IDLE.png\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#229b6e',\n          rgb:[34, 155, 110],\n          hsl:['158', '64%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-09-24',\n        conversionRateField:'feiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n\n      \"idleDAI+idleUSDC+idleUSDT\": {\n        decimals: 18,\n        enabled: false,\n        name: \"Curve.fi\",\n        color: {\n          hex: \"#ff0000\",\n          rgb: [255, 0, 0],\n          hsl: [\"0\", \"100%\", \"50%\"]\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: {\n    // Network configurations\n    availableNetworks: {\n      1: \"Mainnet\",\n      3: \"Ropsten\",\n      4: \"Rinkeby\",\n      42: \"Kovan\",\n      1337: \"Hardhat\"\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    firstBlockNumber: 8119247,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 42, 1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      infura: {\n        42: \"https://kovan.infura.io/v3/\",\n        1: \"https://mainnet.infura.io/v3/\",\n        1337: \"https://mainnet.infura.io/v3/\"\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: \"https://api.etherscan.io/api\",\n          1337: \"https://api.etherscan.io/api\",\n          42: \"https://api-kovan.etherscan.io/api\"\n        },\n        baseUrl: {\n          1: \"https://etherscan.io\",\n          1337: \"https://etherscan.io\",\n          42: \"https://kovan.etherscan.io\"\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.png\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:\n        'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: \"ETH Wrapper\",\n      route: \"eth-wrapper\",\n      subComponent: TokenWrapper,\n      image: \"images/tokens/WETH.svg\",\n      desc: \"Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.\",\n      props: {\n        startContract: {\n          name: \"ETH\",\n          token: \"ETH\",\n          decimals: 18,\n          wrapMethod: \"deposit\"\n        },\n        destContract: {\n          abi: WETH,\n          name: \"WETH\",\n          decimals: 18,\n          token: \"WETH\",\n          unwrapMethod: \"withdraw\",\n          address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\"\n        }\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      label: \"Cover Protocol\",\n      route: \"cover-protocol\",\n      subComponent: CoverProtocol,\n      image: \"images/protocols/cover-logo.svg\",\n      desc: \"Get your Idle Portfolio covered against Smart Contract risk\",\n      fileClaimUrl:\n        \"https://app.coverprotocol.com/app/claims/new?protocol=IDLE\",\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: \"CoverMint\",\n          address: \"0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0\"\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\n        \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      depositEnabled: false,\n      icon: \"FileDownload\",\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\n        \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      label: \"Token Migration\",\n      desc:\n        \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      icon: \"AddCircleOutline\",\n      route: \"add-funds\",\n      label: \"Add Funds\",\n      desc: \"Buy tokens with your Bank account, Credit card or Ethereum Wallet\",\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams =\n            globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency\n              ? props.tokenConfig.wyre.destCurrency\n              : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n              ? props.tokenConfig.ramp.swapAsset\n              : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n            ? props.tokenConfig.transak.currencyCode\n            : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n              ? props.tokenConfig.moonpay.currencyCode\n              : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n              connectorName !== \"Injected\" &&\n              window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                    window.RimbleWeb3_context.connectorName.toLowerCase()\n                  ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n      const tokens = this.props.availableTranches[protocol];\n      await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n        const tokenConfig = tokens[token];\n        await Promise.all([\n          this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n          this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n          this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n          this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n          this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n          this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n        ]);\n      });\n    });\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.4,\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.2,\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.8,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            defiScore:8.8,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.9,\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:8.3,\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI:{\n        deposit:{},\n        token:'FEI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        defiScoreDisabled:true,\n        govTokensDisabled:false,\n        color:'hsl(158, 64%, 37%)',\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleFEIYield',\n          address:'0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crFEI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fFEI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aFEI',\n            enabled:true,\n            functions:{},\n            name:'aavev2',\n            address:'0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            defiScore:7.7,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:8.0,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.4,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            defiScore:7.8,\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            defiScore:7.9,\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            defiScore:7.2,\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null,clear_all=false) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        // Clear cached data\n        this.clearCachedData(()=>{\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n          this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n        },true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      currentEnv={this.state.currentEnv}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      availableTranches={availableTranches}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          currentEnv={this.state.currentEnv}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          currentEnv={this.state.currentEnv}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          availableTranches={availableTranches}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? <Text {...fieldProps}>N/A</Text> : ((this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n"],"sourceRoot":""}