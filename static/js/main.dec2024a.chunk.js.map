{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomField/CustomField.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js","ExtLink/ExtLink.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","RoundButton","buttonProps","Object","assign","boxShadow","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomField","fieldInfo","fieldProps","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","loadField","hashChanged","accountChanged","output","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","console","log","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","tokenName","blockInfo","returnValues","recipient","getBlockInfo","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","claimedAmount","totalRewardsFormatted","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestDistribution","latestDistributionTime","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","claim","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","getNexusMutualCoverages","coverage","validClaimableCoverFromParam","urlParams","param3","cover","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","underlying","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","contractAddress","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","coverAsset","claimableAmount","maxCoveredAmount","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getTokensToMigrate","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","nexusMutualConfig","batchDepositConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","h4","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","route","ActiveCoverages","AssetsList","showTooltip","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","expirationDate","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","yieldTokenCoverGracePeriod","NexusMutualDistributor","incidentsInfo","NexusMutualIncidents","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","getDashboardSectionUrl","section","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","getTokenExchangeRate","_ref44","_callee39","exchangeRateParams","exchangeRate","_context39","_x38","_x39","_ref45","_callee40","_context40","_x40","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee41","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context41","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee42","contractPaused","_args42","_context42","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref48","_callee44","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context44","lastAllocationsPromise","_ref49","_callee43","lastAllocations","_context43","_x42","_x43","alloc","_x41","checkMigration","_ref50","_callee45","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context45","_x44","_x45","_ref51","_callee46","eventName","_args46","_context46","_x46","_x47","estimateMethodGasUsage","_ref52","_callee47","_contract$methods","functionCall","gasLimit","_ref53","_ref54","_args47","_context47","getGasPrice","estimateGas","_x48","_x49","_ref55","_callee48","callback_receipt","_contract$methods2","_context48","once","confirmationNumber","receipt","_x50","_x51","_x52","_x53","_x54","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref56","_callee49","biconomyInfo","res","_context49","x-api-key","_x55","sendTxWithPermit","_ref57","_callee50","_contract$methods3","messageToSign","_this$getSignaturePar","_context50","encodeABI","_address","personal","sign","_x56","_x57","_x58","_x59","_x60","_x61","buildBiconomyErc20ForwarderTx","_ref58","_callee51","tokenAddress","callData","_context51","erc20ForwarderClient","buildTx","txGas","_x62","_x63","_x64","_x65","_x66","_ref59","_callee53","_context53","_ref60","_callee52","_context52","_x68","_x69","_x67","sendBiconomyTxWithErc20Forwarder","_ref61","_callee54","req","metaInfo","txResponse","fetchReceiptIntervalId","_context54","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x70","_x71","_x72","_x73","sendBiconomyTxWithPersonalSign","_ref62","_callee55","_this$getSignaturePar2","_context55","getNonce","call","_x74","_x75","_x76","_x77","signPermitEIP2612","_ref63","_callee56","erc20Name","spender","deadline","domain","domainData","_context56","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x78","_x79","_x80","_x81","_x82","_x83","_x84","_x85","_ref64","_callee57","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args57","_context57","net","getId","allowed","_x86","_x87","_x88","_ref65","_callee58","permitParams","methodAbi","useNonce","_args58","_context58","_jsonInterface","f","unshift","_x89","_x90","_x91","_x92","_x93","_x94","_x95","sendSignedTx","_ref66","_callee59","MetaTransaction","dataToSign","_context59","_x96","_x97","_x98","_x99","_x100","_ref67","_callee60","contractAddr","walletAddr","_ref68","_ref69","allowance","_context60","getAllowance","_x101","_x102","_x103","_ref70","_callee61","_context61","_x104","_x105","_x106","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref71","_callee62","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref72","_ref73","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref74","_ref75","amountLentCurve1","redeemableBalanceCurve","_ref76","_ref77","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref78","_ref79","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref80","_ref81","tokenPriceFirstDeposit","_ref82","_ref83","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref84","_ref85","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref86","_ref87","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref88","_ref89","amountLentCurve2","redeemableBalanceCurve1","_ref90","_ref91","redeemableBalance2","_args62","_context62","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x107","_x108","_x109","_x110","getIdleTokenSupply","_ref92","_callee63","idleTokenSupply","_args63","_context63","_x111","getIdleTokenPriceWithFee","_ref93","_callee64","_ref94","_ref95","priceWFee","_args64","_context64","eq","_x112","_x113","_ref96","_callee65","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args65","_context65","_x114","clearCachedData","useLocalStorage","_ref97","_callee66","_ref98","_ref99","idleTokensTotalSupply","userShare","_context66","_x115","_x116","_callee68","coverProtocolConfig","_args68","_context68","_ref101","_callee67","coverageTokens","protocolImage","_context67","_x117","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","protocolImageDark","coverDetails","validUntil","_ref102","_callee70","_ref103","_ref104","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context70","buyer","_ref105","_callee69","claimSubmittedEvent","_ref106","_ref107","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimablePrice","_ref108","_ref109","_context69","productId","incidentDate","curr","priceBefore","underlyingConfig","findIndex","_x119","_x118","_ref110","_callee71","_context71","_x120","getBatchedDeposits","_callee73","filter_by_status","_args73","_context73","_ref112","_callee72","_ref113","_ref114","_context72","_x121","_ref115","_callee74","fixDecimals","_args74","_context74","_x122","_ref116","_callee75","_ref117","_ref118","_args75","_context75","_x123","_x124","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref119","_callee76","_args76","_context76","_x125","_ref120","_callee77","_args77","_context77","_x126","_ref121","_callee78","_args78","_context78","_x127","_x128","getProtocolBalance","_ref122","_callee79","_context79","_x129","_x130","getAprs","_ref123","_callee80","_context80","addresses","_x131","genericIdleCall","_ref124","_callee81","callParams","_args81","_context81","_x132","_ref125","_callee82","_contract$methods4","_args82","_context82","_x133","_x134","getTxDecodedLogs","_ref126","_callee84","logAddr","decodeLogs","internalTransfers","_context84","_ref127","_callee83","_context83","_x139","_x140","_x135","_x136","_x137","_x138","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee85","_context85","_ref129","_callee86","_context86","getBlock","_x141","_ref130","_callee87","_args87","_context87","getPastEvents","_x142","_x143","_ref131","_callee88","_args88","_context88","_x144","_x145","_ref132","_callee89","_contract$methods5","_args89","_context89","_x146","_x147","_ref133","_callee90","_args90","_context90","_x148","_x149","apr2apy","getUnlentBalance","_ref134","_callee91","unlentBalance","_context91","_x150","_ref135","_callee92","_args92","_context92","_x151","_ref136","_callee94","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref140","_ref141","_args94","_context94","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref137","_callee93","_ref138","_ref139","protocolBalance","protocolAllocation","_context93","_x153","_x154","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x152","_ref142","_callee95","pairAddresses","_ref143","_ref144","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref145","_ref146","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context95","_x155","_x156","_ref147","_callee96","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context96","_x157","_x158","_ref148","_callee97","unires","_context97","_x159","_x160","getCurveDepositedTokens","_ref149","_callee98","idleTokensBalances","remainingCurveTokens","_args98","_context98","_x161","getCurveUnevenTokenAmounts","_ref150","_callee99","amounts","max_burn_amount","unevenAmounts","_context99","getCurveDepositContract","_x162","_x163","_callee100","curveRatesInfo","_context100","strategyTokens","getCurveAPYContract","_callee101","blocksForPrevTokenPrice","_ref153","_ref154","prevTokenPrice","blocksMultiplier","curveAPR","_context101","getCurveTokenSupply","_callee102","_context102","getCurvePoolContract","_callee103","_args103","_context103","_callee104","_args104","_context104","_ref158","_callee105","_ref159","_ref160","_context105","_x164","_callee106","depositContractInfo","_context106","getCurveZapContract","_callee107","zapContractInfo","_context107","_callee108","poolContractInfo","_context108","getCurveSwapContract","_callee109","_context109","getCurveIdleTokensAmounts","_callee111","max_slippage","curveTokenSupply","curveTokenShare","_args111","_context111","_ref166","_callee110","curveIdleTokens","_context110","_x165","getCurveTokensAmounts","_callee113","useCoinIndex","_args113","_context113","_ref168","_callee112","_ref169","_ref170","totalTokenSupply","_context112","_x166","getCurveAmounts","_ref171","_callee115","_args115","_context115","_ref172","_callee114","_context114","_x169","_x167","_x168","getCurveTokenAmount","_ref173","_callee116","_args116","_context116","_x170","getCurveSlippage","_ref174","_callee117","uneven_amounts","_ref175","_ref176","virtualPrice","Sv","_args117","_context117","_x171","_x172","_ref177","_callee118","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref178","_ref179","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args118","_context118","_x173","_callee120","_args120","_context120","_ref181","_callee119","_ref182","_ref183","_context119","_x174","getStkAaveApr","_ref184","_callee121","aaveConversionRate","stkAaveAPR","stkAaveValue","_args121","_context121","_x175","_x176","getCompAPR","_ref185","_callee122","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args122","_context122","_x177","_x178","getCompSpeed","_ref186","_callee123","cTokenAddress","compSpeed","_context123","_x179","_ref187","_callee124","cTokenInfo","compoundAllocationPerc","_ref188","_ref189","cTokenTotalSupply","compoundPoolShare","_args124","_context124","_x180","_callee126","_args126","_context126","_ref191","_callee125","_ref192","_ref193","_context125","_x181","_callee128","_args128","_context128","_ref195","_callee127","_ref196","_ref197","compApr","_context127","_x182","getTokensCsv","_callee131","csv","_context131","prototype","sum","pv","cv","avg","_ref199","_callee130","_context130","_ref200","_callee129","header","aprAvg","scoreAvg","lastRow","_context129","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x184","_x183","_callee133","_args133","_context133","_ref202","_callee132","compTokenBalance","_context132","_x185","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref203","_callee135","govTokensUserDistribution","_args135","_context135","_ref204","_callee134","_context134","_x187","_x186","getGovTokensDistributionSpeed","_ref205","_callee137","govTokensDistribution","tokenGovTokens","_args137","_context137","_ref206","_callee136","govSpeed","_context136","_x189","_x188","getGovTokensAprs","_ref207","_callee139","govTokensAprs","_args139","_context139","_ref208","_callee138","_ref209","_ref210","_ref211","_ref212","cTokenConfig","_context138","_x192","_x190","_x191","_callee141","_args141","_context141","_ref214","_callee140","tokenConversionRate","fromTokenConfig","_context140","_x193","getGovTokenConfigByAddress","_callee142","checkShowBalance","govTokensEarnings","_args142","_context142","govTokenAmount","getGovTokensIndexes","_ref216","_callee144","govTokensAmounts","_context144","getGovTokensUserAmounts","_ref217","_callee143","govTokenIndex","govTokenAddress","_context143","getGovTokenAddessByIndex","_x196","_x197","_x194","_x195","_ref218","_callee145","_context145","_x198","_x199","_ref219","_callee146","_context146","_x200","_x201","_callee149","govTokenConfigForced","_args149","_context149","_ref221","_callee148","_context148","_ref222","_callee147","_context147","_x203","_x204","_x202","getTokenFees","_callee150","_args150","_context150","_callee151","_ref225","_ref226","gain","fees","_args151","_context151","_ref227","_callee152","_args152","_context152","_x205","getTotalTVL","_callee153","tokensTVL","_context153","getTokensTVL","totalTVL","tokenTVL","_callee157","_context157","_ref230","_callee156","_context156","_ref231","_callee155","oldTokenTVL","idleTokenName","_ref232","_ref233","oldTokenConfig","_ref237","_ref238","oldTokenPrice","oldTotalSupply","_context155","_ref234","_callee154","_ref235","_ref236","govTokenConversionRate","govTokenBalanceConverted","_context154","_x208","oldProtocols","oldProtocol","protocolPos","_x207","_x206","getSubstackLatestFeed","_callee158","endpointInfo","idleSubstackFeed","latestFeed","_context158","items","getAggregatedStats","_callee159","totalAUM","_args159","_context159","getAggregatedStats_chain","_callee163","avgAPR","_args163","_context163","_ref242","_callee162","_context162","_ref243","_callee161","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context161","_ref244","_callee160","_ref245","_ref246","_context160","_x211","_x210","_x209","getTokenApy","_ref247","_callee164","_context164","_x212","_callee167","_args167","_context167","_ref249","_callee166","_context166","_ref250","_callee165","_ref251","_context165","_x214","_x213","getProtocolsTokensBalances","_callee169","tokenBalances","minTokenBalance","protocolsTokens","_args169","_context169","_ref253","_callee168","tokenContract","_context168","_x215","_ref254","_callee170","_args170","_context170","_x216","_x217","_x218","getAvgAPYStats","_ref255","_callee171","apiResults","_args171","_context171","_x219","_x220","_ref256","_callee172","_conversionRate","_args172","_context172","_x221","_x222","_ref257","_callee173","_ref258","_ref259","_context173","protocolScore","getTokenScoreApi","_x223","_x224","_ref260","_callee174","_context174","_x225","_x226","_ref261","_callee177","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args177","_context177","_ref262","_callee176","addrIndex","protocolApr","protocolApy","govTokenAPR","_context176","_ref263","_callee175","_context175","_x230","_x228","_x229","_x227","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.dec2024a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      // flexProps:{\n      //   justifyContent:'flex-start'\n      // }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    const claimedRewards = [];\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          claimedRewards.push({\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            amount:this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals),\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const latestDistribution = Object.assign([],etherscanRewardsTxs).pop();\n    const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = latestDistributionTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed(),latestCheckpoint);\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}